Start testing on iteration 499
INFO test_net.py:  72: Called with args:
INFO test_net.py:  73: Namespace(cfg_file='configs/dt/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv.yaml', dataset='voc2007', load_ckpt='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step499.pth', load_detectron=None, multi_gpu_testing=True, num_classes=None, output_dir=None, range=None, set_cfgs=[], vis=False)
INFO test_net.py:  83: Automatically set output directory to Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test
INFO test_net.py: 130: Testing with config:
INFO test_net.py: 131: {'BBOX_XFORM_CLIP': 4.135166556742356,
 'CROP_RESIZE_WITH_MAX_POOL': True,
 'CUDA': False,
 'DATA_DIR': '/home/ubuntu/Detectron.pytorch/data',
 'DATA_LOADER': {'NUM_THREADS': 4},
 'DEBUG': False,
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXPECTED_RESULTS': [],
 'EXPECTED_RESULTS_ATOL': 0.005,
 'EXPECTED_RESULTS_EMAIL': '',
 'EXPECTED_RESULTS_RTOL': 0.1,
 'FAST_RCNN': {'BOX_OUT_STREAMS': 1,
               'CONV_HEAD_DIM': 256,
               'MLP_HEAD_DIM': 1024,
               'NUM_STACKED_CONVS': 4,
               'ROI_BOX_HEAD': 'fast_rcnn_heads.roi_2mlp_head',
               'ROI_XFORM_METHOD': 'RoIAlign',
               'ROI_XFORM_RESOLUTION': 7,
               'ROI_XFORM_SAMPLING_RATIO': 2},
 'FPN': {'COARSEST_STRIDE': 32,
         'DIM': 256,
         'EXTRA_CONV_LEVELS': False,
         'FPN_ON': True,
         'MULTILEVEL_ROIS': True,
         'MULTILEVEL_RPN': True,
         'ROI_CANONICAL_LEVEL': 4,
         'ROI_CANONICAL_SCALE': 224,
         'ROI_MAX_LEVEL': 5,
         'ROI_MIN_LEVEL': 2,
         'RPN_ANCHOR_START_SIZE': 32,
         'RPN_ASPECT_RATIOS': (0.5, 1, 2),
         'RPN_COLLECT_SCALE': 1,
         'RPN_MAX_LEVEL': 6,
         'RPN_MIN_LEVEL': 2,
         'USE_GN': False,
         'ZERO_INIT_LATERAL': False},
 'GROUP_NORM': {'DIM_PER_GP': -1, 'EPSILON': 1e-05, 'NUM_GROUPS': 32},
 'KRCNN': {'CONV_HEAD_DIM': 256,
           'CONV_HEAD_KERNEL': 3,
           'CONV_INIT': 'GaussianFill',
           'DECONV_DIM': 256,
           'DECONV_KERNEL': 4,
           'DILATION': 1,
           'HEATMAP_SIZE': -1,
           'INFERENCE_MIN_SIZE': 0,
           'KEYPOINT_CONFIDENCE': 'bbox',
           'LOSS_WEIGHT': 1.0,
           'MIN_KEYPOINT_COUNT_FOR_VALID_MINIBATCH': 20,
           'NMS_OKS': False,
           'NORMALIZE_BY_VISIBLE_KEYPOINTS': True,
           'NUM_KEYPOINTS': -1,
           'NUM_STACKED_CONVS': 8,
           'ROI_KEYPOINTS_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'UP_SCALE': -1,
           'USE_DECONV': False,
           'USE_DECONV_OUTPUT': False},
 'MATLAB': 'matlab',
 'MODEL': {'BBOX_REG_WEIGHTS': (10.0, 10.0, 5.0, 5.0),
           'CLS_AGNOSTIC_BBOX_REG': False,
           'CONV_BODY': 'FPN.fpn_ResNet101_conv5_body',
           'FASTER_RCNN': True,
           'KEYPOINTS_ON': False,
           'LOAD_IMAGENET_PRETRAINED_WEIGHTS': True,
           'MASK_ON': False,
           'NUM_CLASSES': 21,
           'RPN_ONLY': False,
           'SHARE_RES5': False,
           'TYPE': 'generalized_rcnn',
           'UNSUPERVISED_POSE': False},
 'MRCNN': {'CLS_SPECIFIC_MASK': True,
           'CONV_INIT': 'GaussianFill',
           'DILATION': 2,
           'DIM_REDUCED': 256,
           'MEMORY_EFFICIENT_LOSS': True,
           'RESOLUTION': 14,
           'ROI_MASK_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'THRESH_BINARIZE': 0.5,
           'UPSAMPLE_RATIO': 1,
           'USE_FC_OUTPUT': False,
           'WEIGHT_LOSS_MASK': 1.0},
 'NUM_GPUS': 8,
 'OUTPUT_DIR': 'Outputs',
 'PIXEL_MEANS': array([[[102.9801, 115.9465, 122.7717]]]),
 'POOLING_MODE': 'crop',
 'POOLING_SIZE': 7,
 'PYTORCH_VERSION_LESS_THAN_040': False,
 'RESNETS': {'FREEZE_AT': 2,
             'IMAGENET_PRETRAINED_WEIGHTS': 'data/pretrained_model/resnet101_caffe.pth',
             'NUM_GROUPS': 1,
             'RES5_DILATION': 1,
             'SHORTCUT_FUNC': 'basic_bn_shortcut',
             'STEM_FUNC': 'basic_bn_stem',
             'STRIDE_1X1': True,
             'TRANS_FUNC': 'bottleneck_transformation',
             'USE_GN': False,
             'WIDTH_PER_GROUP': 64},
 'RETINANET': {'ANCHOR_SCALE': 4,
               'ASPECT_RATIOS': (0.5, 1.0, 2.0),
               'BBOX_REG_BETA': 0.11,
               'BBOX_REG_WEIGHT': 1.0,
               'CLASS_SPECIFIC_BBOX': False,
               'INFERENCE_TH': 0.05,
               'LOSS_ALPHA': 0.25,
               'LOSS_GAMMA': 2.0,
               'NEGATIVE_OVERLAP': 0.4,
               'NUM_CONVS': 4,
               'POSITIVE_OVERLAP': 0.5,
               'PRE_NMS_TOP_N': 1000,
               'PRIOR_PROB': 0.01,
               'RETINANET_ON': False,
               'SCALES_PER_OCTAVE': 3,
               'SHARE_CLS_BBOX_TOWER': False,
               'SOFTMAX': False},
 'RFCN': {'PS_GRID_SIZE': 3},
 'RNG_SEED': 3,
 'ROOT_DIR': '/home/ubuntu/Detectron.pytorch',
 'RPN': {'ASPECT_RATIOS': (0.5, 1, 2),
         'CLS_ACTIVATION': 'sigmoid',
         'OUT_DIM': 512,
         'OUT_DIM_AS_IN_DIM': True,
         'RPN_ON': True,
         'SIZES': (64, 128, 256, 512),
         'STRIDE': 16},
 'SOLVER': {'BASE_LR': 2e-05,
            'BIAS_DOUBLE_LR': True,
            'BIAS_WEIGHT_DECAY': False,
            'GAMMA': 0.1,
            'LOG_LR_CHANGE_THRESHOLD': 1.1,
            'LRS': [],
            'LR_POLICY': 'steps_with_decay',
            'MAX_ITER': 10000,
            'MOMENTUM': 0.9,
            'SCALE_MOMENTUM': True,
            'SCALE_MOMENTUM_THRESHOLD': 1.1,
            'STEPS': [0, 5000, 8000],
            'STEP_SIZE': 30000,
            'TYPE': 'SGD',
            'WARM_UP_FACTOR': 0.3333333333333333,
            'WARM_UP_ITERS': 500,
            'WARM_UP_METHOD': 'linear',
            'WEIGHT_DECAY': 0.0001,
            'WEIGHT_DECAY_GN': 0.0},
 'TEST': {'BBOX_AUG': {'AREA_TH_HI': 32400,
                       'AREA_TH_LO': 2500,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'COORD_HEUR': 'UNION',
                       'ENABLED': False,
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False,
                       'SCORE_HEUR': 'UNION'},
          'BBOX_REG': True,
          'BBOX_VOTE': {'ENABLED': False,
                        'SCORING_METHOD': 'ID',
                        'SCORING_METHOD_BETA': 1.0,
                        'VOTE_TH': 0.8},
          'COMPETITION_MODE': True,
          'DATASETS': ('voc_2007_test',),
          'DETECTIONS_PER_IM': 100,
          'FORCE_JSON_DATASET_EVAL': False,
          'KPS_AUG': {'AREA_TH': 32400,
                      'ASPECT_RATIOS': (),
                      'ASPECT_RATIO_H_FLIP': False,
                      'ENABLED': False,
                      'HEUR': 'HM_AVG',
                      'H_FLIP': False,
                      'MAX_SIZE': 4000,
                      'SCALES': (),
                      'SCALE_H_FLIP': False,
                      'SCALE_SIZE_DEP': False},
          'MASK_AUG': {'AREA_TH': 32400,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'ENABLED': False,
                       'HEUR': 'SOFT_AVG',
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False},
          'MAX_SIZE': 1000,
          'NMS': 0.5,
          'PRECOMPUTED_PROPOSALS': False,
          'PROPOSAL_FILES': (),
          'PROPOSAL_LIMIT': 2000,
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 1000,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALE': 600,
          'SCORE_THRESH': 0.05,
          'SOFT_NMS': {'ENABLED': False, 'METHOD': 'linear', 'SIGMA': 0.5},
          'WEAK_SUPERVISE': False},
 'TRAIN': {'ASPECT_CROPPING': False,
           'ASPECT_GROUPING': True,
           'ASPECT_HI': 2,
           'ASPECT_LO': 0.5,
           'BATCH_SIZE_PER_IM': 512,
           'BBOX_INSIDE_WEIGHTS': (1.0, 1.0, 1.0, 1.0),
           'BBOX_NORMALIZE_MEANS': (0.0, 0.0, 0.0, 0.0),
           'BBOX_NORMALIZE_STDS': (0.1, 0.1, 0.2, 0.2),
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'COPY_CLS_TO_DET': False,
           'CROWD_FILTER_THRESH': 0.7,
           'DATASETS': (),
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'FREEZE_BOX_HEAD': True,
           'FREEZE_CONV_BODY': False,
           'FREEZE_RPN': False,
           'GT_MIN_AREA': -1,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_FILES': (),
           'RPN_BATCH_SIZE_PER_IM': 256,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 2000,
           'RPN_STRADDLE_THRESH': 0,
           'SCALES': (600,),
           'SNAPSHOT_ITERS': 2000,
           'SPATIAL_REG': False,
           'USE_FLIPPED': True,
           'WEAK_SUPERVISE': True,
           'WEAK_SUPERVISE_WITH_PRETRAIN': True},
 'VIS': False,
 'VIS_TH': 0.9}
loading annotations into memory...
Done (t=0.10s)
creating index...
index created!
INFO subprocess.py:  59: 0,1,2,3
INFO subprocess.py:  67: gpu_inds: [0, 1, 2, 3]
INFO subprocess.py:  89: detection range command 0: python /home/ubuntu/Detectron.pytorch/tools/test_net.py --range 0 1238 --cfg Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_config.yaml --set TEST.DATASETS '("voc_2007_test",)' --output_dir Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test --load_ckpt Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step499.pth
INFO subprocess.py:  89: detection range command 1: python /home/ubuntu/Detectron.pytorch/tools/test_net.py --range 1238 2476 --cfg Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_config.yaml --set TEST.DATASETS '("voc_2007_test",)' --output_dir Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test --load_ckpt Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step499.pth
INFO subprocess.py:  89: detection range command 2: python /home/ubuntu/Detectron.pytorch/tools/test_net.py --range 2476 3714 --cfg Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_config.yaml --set TEST.DATASETS '("voc_2007_test",)' --output_dir Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test --load_ckpt Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step499.pth
INFO subprocess.py:  89: detection range command 3: python /home/ubuntu/Detectron.pytorch/tools/test_net.py --range 3714 4952 --cfg Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_config.yaml --set TEST.DATASETS '("voc_2007_test",)' --output_dir Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test --load_ckpt Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step499.pth
INFO subprocess.py: 129: # ---------------------------------------------------------------------------- #
INFO subprocess.py: 131: stdout of subprocess 0 with range [1, 1238]
INFO subprocess.py: 133: # ---------------------------------------------------------------------------- #
INFO test_net.py:  72: Called with args:
INFO test_net.py:  73: Namespace(cfg_file='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_config.yaml', dataset=None, load_ckpt='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step499.pth', load_detectron=None, multi_gpu_testing=False, num_classes=None, output_dir='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test', range=[0, 1238], set_cfgs=['TEST.DATASETS', '("voc_2007_test",)'], vis=False)
INFO test_net.py: 130: Testing with config:
INFO test_net.py: 131: {'BBOX_XFORM_CLIP': 4.135166556742356,
 'CROP_RESIZE_WITH_MAX_POOL': True,
 'CUDA': False,
 'DATA_DIR': '/home/ubuntu/Detectron.pytorch/data',
 'DATA_LOADER': {'NUM_THREADS': 4},
 'DEBUG': False,
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXPECTED_RESULTS': [],
 'EXPECTED_RESULTS_ATOL': 0.005,
 'EXPECTED_RESULTS_EMAIL': '',
 'EXPECTED_RESULTS_RTOL': 0.1,
 'FAST_RCNN': {'BOX_OUT_STREAMS': 1,
               'CONV_HEAD_DIM': 256,
               'MLP_HEAD_DIM': 1024,
               'NUM_STACKED_CONVS': 4,
               'ROI_BOX_HEAD': 'fast_rcnn_heads.roi_2mlp_head',
               'ROI_XFORM_METHOD': 'RoIAlign',
               'ROI_XFORM_RESOLUTION': 7,
               'ROI_XFORM_SAMPLING_RATIO': 2},
 'FPN': {'COARSEST_STRIDE': 32,
         'DIM': 256,
         'EXTRA_CONV_LEVELS': False,
         'FPN_ON': True,
         'MULTILEVEL_ROIS': True,
         'MULTILEVEL_RPN': True,
         'ROI_CANONICAL_LEVEL': 4,
         'ROI_CANONICAL_SCALE': 224,
         'ROI_MAX_LEVEL': 5,
         'ROI_MIN_LEVEL': 2,
         'RPN_ANCHOR_START_SIZE': 32,
         'RPN_ASPECT_RATIOS': (0.5, 1, 2),
         'RPN_COLLECT_SCALE': 1,
         'RPN_MAX_LEVEL': 6,
         'RPN_MIN_LEVEL': 2,
         'USE_GN': False,
         'ZERO_INIT_LATERAL': False},
 'GROUP_NORM': {'DIM_PER_GP': -1, 'EPSILON': 1e-05, 'NUM_GROUPS': 32},
 'KRCNN': {'CONV_HEAD_DIM': 256,
           'CONV_HEAD_KERNEL': 3,
           'CONV_INIT': 'GaussianFill',
           'DECONV_DIM': 256,
           'DECONV_KERNEL': 4,
           'DILATION': 1,
           'HEATMAP_SIZE': -1,
           'INFERENCE_MIN_SIZE': 0,
           'KEYPOINT_CONFIDENCE': 'bbox',
           'LOSS_WEIGHT': 1.0,
           'MIN_KEYPOINT_COUNT_FOR_VALID_MINIBATCH': 20,
           'NMS_OKS': False,
           'NORMALIZE_BY_VISIBLE_KEYPOINTS': True,
           'NUM_KEYPOINTS': -1,
           'NUM_STACKED_CONVS': 8,
           'ROI_KEYPOINTS_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'UP_SCALE': -1,
           'USE_DECONV': False,
           'USE_DECONV_OUTPUT': False},
 'MATLAB': 'matlab',
 'MODEL': {'BBOX_REG_WEIGHTS': (10.0, 10.0, 5.0, 5.0),
           'CLS_AGNOSTIC_BBOX_REG': False,
           'CONV_BODY': 'FPN.fpn_ResNet101_conv5_body',
           'FASTER_RCNN': True,
           'KEYPOINTS_ON': False,
           'LOAD_IMAGENET_PRETRAINED_WEIGHTS': True,
           'MASK_ON': False,
           'NUM_CLASSES': 21,
           'RPN_ONLY': False,
           'SHARE_RES5': False,
           'TYPE': 'generalized_rcnn',
           'UNSUPERVISED_POSE': False},
 'MRCNN': {'CLS_SPECIFIC_MASK': True,
           'CONV_INIT': 'GaussianFill',
           'DILATION': 2,
           'DIM_REDUCED': 256,
           'MEMORY_EFFICIENT_LOSS': True,
           'RESOLUTION': 14,
           'ROI_MASK_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'THRESH_BINARIZE': 0.5,
           'UPSAMPLE_RATIO': 1,
           'USE_FC_OUTPUT': False,
           'WEIGHT_LOSS_MASK': 1.0},
 'NUM_GPUS': 8,
 'OUTPUT_DIR': 'Outputs',
 'PIXEL_MEANS': array([[[102.9801, 115.9465, 122.7717]]]),
 'POOLING_MODE': 'crop',
 'POOLING_SIZE': 7,
 'PYTORCH_VERSION_LESS_THAN_040': False,
 'RESNETS': {'FREEZE_AT': 2,
             'IMAGENET_PRETRAINED_WEIGHTS': 'data/pretrained_model/resnet101_caffe.pth',
             'NUM_GROUPS': 1,
             'RES5_DILATION': 1,
             'SHORTCUT_FUNC': 'basic_bn_shortcut',
             'STEM_FUNC': 'basic_bn_stem',
             'STRIDE_1X1': True,
             'TRANS_FUNC': 'bottleneck_transformation',
             'USE_GN': False,
             'WIDTH_PER_GROUP': 64},
 'RETINANET': {'ANCHOR_SCALE': 4,
               'ASPECT_RATIOS': (0.5, 1.0, 2.0),
               'BBOX_REG_BETA': 0.11,
               'BBOX_REG_WEIGHT': 1.0,
               'CLASS_SPECIFIC_BBOX': False,
               'INFERENCE_TH': 0.05,
               'LOSS_ALPHA': 0.25,
               'LOSS_GAMMA': 2.0,
               'NEGATIVE_OVERLAP': 0.4,
               'NUM_CONVS': 4,
               'POSITIVE_OVERLAP': 0.5,
               'PRE_NMS_TOP_N': 1000,
               'PRIOR_PROB': 0.01,
               'RETINANET_ON': False,
               'SCALES_PER_OCTAVE': 3,
               'SHARE_CLS_BBOX_TOWER': False,
               'SOFTMAX': False},
 'RFCN': {'PS_GRID_SIZE': 3},
 'RNG_SEED': 3,
 'ROOT_DIR': '/home/ubuntu/Detectron.pytorch',
 'RPN': {'ASPECT_RATIOS': (0.5, 1, 2),
         'CLS_ACTIVATION': 'sigmoid',
         'OUT_DIM': 512,
         'OUT_DIM_AS_IN_DIM': True,
         'RPN_ON': True,
         'SIZES': (64, 128, 256, 512),
         'STRIDE': 16},
 'SOLVER': {'BASE_LR': 2e-05,
            'BIAS_DOUBLE_LR': True,
            'BIAS_WEIGHT_DECAY': False,
            'GAMMA': 0.1,
            'LOG_LR_CHANGE_THRESHOLD': 1.1,
            'LRS': [],
            'LR_POLICY': 'steps_with_decay',
            'MAX_ITER': 10000,
            'MOMENTUM': 0.9,
            'SCALE_MOMENTUM': True,
            'SCALE_MOMENTUM_THRESHOLD': 1.1,
            'STEPS': [0, 5000, 8000],
            'STEP_SIZE': 30000,
            'TYPE': 'SGD',
            'WARM_UP_FACTOR': 0.3333333333333333,
            'WARM_UP_ITERS': 500,
            'WARM_UP_METHOD': 'linear',
            'WEIGHT_DECAY': 0.0001,
            'WEIGHT_DECAY_GN': 0.0},
 'TEST': {'BBOX_AUG': {'AREA_TH_HI': 32400,
                       'AREA_TH_LO': 2500,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'COORD_HEUR': 'UNION',
                       'ENABLED': False,
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False,
                       'SCORE_HEUR': 'UNION'},
          'BBOX_REG': True,
          'BBOX_VOTE': {'ENABLED': False,
                        'SCORING_METHOD': 'ID',
                        'SCORING_METHOD_BETA': 1.0,
                        'VOTE_TH': 0.8},
          'COMPETITION_MODE': True,
          'DATASETS': ('voc_2007_test',),
          'DETECTIONS_PER_IM': 100,
          'FORCE_JSON_DATASET_EVAL': False,
          'KPS_AUG': {'AREA_TH': 32400,
                      'ASPECT_RATIOS': (),
                      'ASPECT_RATIO_H_FLIP': False,
                      'ENABLED': False,
                      'HEUR': 'HM_AVG',
                      'H_FLIP': False,
                      'MAX_SIZE': 4000,
                      'SCALES': (),
                      'SCALE_H_FLIP': False,
                      'SCALE_SIZE_DEP': False},
          'MASK_AUG': {'AREA_TH': 32400,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'ENABLED': False,
                       'HEUR': 'SOFT_AVG',
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False},
          'MAX_SIZE': 1000,
          'NMS': 0.5,
          'PRECOMPUTED_PROPOSALS': False,
          'PROPOSAL_FILES': (),
          'PROPOSAL_LIMIT': 2000,
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 1000,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALE': 600,
          'SCORE_THRESH': 0.05,
          'SOFT_NMS': {'ENABLED': False, 'METHOD': 'linear', 'SIGMA': 0.5},
          'WEAK_SUPERVISE': False},
 'TRAIN': {'ASPECT_CROPPING': False,
           'ASPECT_GROUPING': True,
           'ASPECT_HI': 2,
           'ASPECT_LO': 0.5,
           'BATCH_SIZE_PER_IM': 512,
           'BBOX_INSIDE_WEIGHTS': (1.0, 1.0, 1.0, 1.0),
           'BBOX_NORMALIZE_MEANS': (0.0, 0.0, 0.0, 0.0),
           'BBOX_NORMALIZE_STDS': (0.1, 0.1, 0.2, 0.2),
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'COPY_CLS_TO_DET': False,
           'CROWD_FILTER_THRESH': 0.7,
           'DATASETS': (),
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'FREEZE_BOX_HEAD': True,
           'FREEZE_CONV_BODY': False,
           'FREEZE_RPN': False,
           'GT_MIN_AREA': -1,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_FILES': (),
           'RPN_BATCH_SIZE_PER_IM': 256,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 2000,
           'RPN_STRADDLE_THRESH': 0,
           'SCALES': (600,),
           'SNAPSHOT_ITERS': 2000,
           'SPATIAL_REG': False,
           'USE_FLIPPED': True,
           'WEAK_SUPERVISE': True,
           'WEAK_SUPERVISE_WITH_PRETRAIN': True},
 'VIS': False,
 'VIS_TH': 0.9}
loading annotations into memory...
Done (t=0.08s)
creating index...
index created!
INFO test_engine.py: 324: training mode? : False
INFO test_engine.py: 331: loading checkpoint Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step499.pth
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1/1238 0.398s + 0.002s (eta: 0:08:14)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 11/1238 0.390s + 0.002s (eta: 0:08:00)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 21/1238 0.392s + 0.002s (eta: 0:07:59)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 31/1238 0.387s + 0.001s (eta: 0:07:48)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 41/1238 0.385s + 0.001s (eta: 0:07:42)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 51/1238 0.386s + 0.001s (eta: 0:07:40)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 61/1238 0.385s + 0.001s (eta: 0:07:34)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 71/1238 0.381s + 0.001s (eta: 0:07:26)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 81/1238 0.379s + 0.001s (eta: 0:07:20)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 91/1238 0.379s + 0.001s (eta: 0:07:15)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 101/1238 0.376s + 0.001s (eta: 0:07:09)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 111/1238 0.375s + 0.001s (eta: 0:07:04)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 121/1238 0.375s + 0.001s (eta: 0:07:00)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 131/1238 0.377s + 0.001s (eta: 0:06:58)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 141/1238 0.376s + 0.001s (eta: 0:06:54)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 151/1238 0.378s + 0.001s (eta: 0:06:51)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 161/1238 0.377s + 0.001s (eta: 0:06:47)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 171/1238 0.375s + 0.001s (eta: 0:06:42)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 181/1238 0.376s + 0.001s (eta: 0:06:38)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 191/1238 0.377s + 0.001s (eta: 0:06:35)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 201/1238 0.376s + 0.001s (eta: 0:06:31)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 211/1238 0.375s + 0.001s (eta: 0:06:27)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 221/1238 0.376s + 0.001s (eta: 0:06:23)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 231/1238 0.376s + 0.001s (eta: 0:06:20)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 241/1238 0.376s + 0.001s (eta: 0:06:16)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 251/1238 0.376s + 0.001s (eta: 0:06:12)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 261/1238 0.376s + 0.001s (eta: 0:06:08)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 271/1238 0.376s + 0.001s (eta: 0:06:04)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 281/1238 0.375s + 0.001s (eta: 0:06:00)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 291/1238 0.375s + 0.001s (eta: 0:05:56)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 301/1238 0.375s + 0.001s (eta: 0:05:53)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 311/1238 0.375s + 0.001s (eta: 0:05:49)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 321/1238 0.375s + 0.001s (eta: 0:05:45)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 331/1238 0.375s + 0.001s (eta: 0:05:41)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 341/1238 0.375s + 0.001s (eta: 0:05:37)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 351/1238 0.375s + 0.001s (eta: 0:05:34)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 361/1238 0.375s + 0.001s (eta: 0:05:30)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 371/1238 0.375s + 0.001s (eta: 0:05:26)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 381/1238 0.376s + 0.001s (eta: 0:05:23)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 391/1238 0.375s + 0.001s (eta: 0:05:18)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 401/1238 0.375s + 0.001s (eta: 0:05:15)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 411/1238 0.375s + 0.001s (eta: 0:05:11)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 421/1238 0.375s + 0.001s (eta: 0:05:07)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 431/1238 0.375s + 0.001s (eta: 0:05:03)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 441/1238 0.375s + 0.001s (eta: 0:05:00)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 451/1238 0.375s + 0.001s (eta: 0:04:56)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 461/1238 0.375s + 0.001s (eta: 0:04:52)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 471/1238 0.375s + 0.001s (eta: 0:04:48)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 481/1238 0.374s + 0.001s (eta: 0:04:44)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 491/1238 0.374s + 0.001s (eta: 0:04:40)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 501/1238 0.374s + 0.001s (eta: 0:04:36)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 511/1238 0.374s + 0.001s (eta: 0:04:32)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 521/1238 0.374s + 0.001s (eta: 0:04:29)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 531/1238 0.374s + 0.001s (eta: 0:04:25)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 541/1238 0.374s + 0.001s (eta: 0:04:21)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 551/1238 0.374s + 0.001s (eta: 0:04:18)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 561/1238 0.374s + 0.001s (eta: 0:04:14)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 571/1238 0.375s + 0.001s (eta: 0:04:10)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 581/1238 0.374s + 0.001s (eta: 0:04:06)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 591/1238 0.374s + 0.001s (eta: 0:04:03)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 601/1238 0.374s + 0.001s (eta: 0:03:59)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 611/1238 0.374s + 0.001s (eta: 0:03:55)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 621/1238 0.374s + 0.001s (eta: 0:03:51)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 631/1238 0.374s + 0.001s (eta: 0:03:48)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 641/1238 0.374s + 0.001s (eta: 0:03:44)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 651/1238 0.374s + 0.001s (eta: 0:03:40)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 661/1238 0.374s + 0.001s (eta: 0:03:36)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 671/1238 0.373s + 0.001s (eta: 0:03:32)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 681/1238 0.373s + 0.001s (eta: 0:03:28)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 691/1238 0.373s + 0.001s (eta: 0:03:24)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 701/1238 0.374s + 0.001s (eta: 0:03:21)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 711/1238 0.373s + 0.001s (eta: 0:03:17)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 721/1238 0.373s + 0.001s (eta: 0:03:13)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 731/1238 0.373s + 0.001s (eta: 0:03:09)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 741/1238 0.373s + 0.001s (eta: 0:03:06)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 751/1238 0.373s + 0.001s (eta: 0:03:02)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 761/1238 0.373s + 0.001s (eta: 0:02:58)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 771/1238 0.373s + 0.001s (eta: 0:02:54)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 781/1238 0.373s + 0.001s (eta: 0:02:51)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 791/1238 0.373s + 0.001s (eta: 0:02:47)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 801/1238 0.373s + 0.001s (eta: 0:02:43)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 811/1238 0.372s + 0.001s (eta: 0:02:39)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 821/1238 0.372s + 0.001s (eta: 0:02:35)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 831/1238 0.372s + 0.001s (eta: 0:02:32)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 841/1238 0.372s + 0.001s (eta: 0:02:28)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 851/1238 0.372s + 0.001s (eta: 0:02:24)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 861/1238 0.372s + 0.001s (eta: 0:02:20)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 871/1238 0.372s + 0.001s (eta: 0:02:17)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 881/1238 0.372s + 0.001s (eta: 0:02:13)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 891/1238 0.372s + 0.001s (eta: 0:02:09)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 901/1238 0.372s + 0.001s (eta: 0:02:05)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 911/1238 0.372s + 0.001s (eta: 0:02:02)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 921/1238 0.372s + 0.001s (eta: 0:01:58)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 931/1238 0.372s + 0.001s (eta: 0:01:54)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 941/1238 0.372s + 0.001s (eta: 0:01:50)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 951/1238 0.372s + 0.001s (eta: 0:01:47)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 961/1238 0.372s + 0.001s (eta: 0:01:43)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 971/1238 0.372s + 0.001s (eta: 0:01:39)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 981/1238 0.371s + 0.001s (eta: 0:01:35)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 991/1238 0.371s + 0.001s (eta: 0:01:32)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1001/1238 0.371s + 0.001s (eta: 0:01:28)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1011/1238 0.371s + 0.001s (eta: 0:01:24)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1021/1238 0.371s + 0.001s (eta: 0:01:20)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1031/1238 0.371s + 0.001s (eta: 0:01:17)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1041/1238 0.371s + 0.001s (eta: 0:01:13)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1051/1238 0.371s + 0.001s (eta: 0:01:09)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1061/1238 0.371s + 0.001s (eta: 0:01:05)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1071/1238 0.371s + 0.001s (eta: 0:01:02)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1081/1238 0.371s + 0.001s (eta: 0:00:58)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1091/1238 0.371s + 0.001s (eta: 0:00:54)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1101/1238 0.371s + 0.001s (eta: 0:00:50)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1111/1238 0.371s + 0.001s (eta: 0:00:47)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1121/1238 0.371s + 0.001s (eta: 0:00:43)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1131/1238 0.371s + 0.001s (eta: 0:00:39)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1141/1238 0.371s + 0.001s (eta: 0:00:36)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1151/1238 0.370s + 0.001s (eta: 0:00:32)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1161/1238 0.371s + 0.001s (eta: 0:00:28)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1171/1238 0.371s + 0.001s (eta: 0:00:24)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1181/1238 0.371s + 0.001s (eta: 0:00:21)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1191/1238 0.371s + 0.001s (eta: 0:00:17)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1201/1238 0.371s + 0.001s (eta: 0:00:13)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1211/1238 0.371s + 0.001s (eta: 0:00:10)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1221/1238 0.371s + 0.001s (eta: 0:00:06)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1231/1238 0.371s + 0.001s (eta: 0:00:02)
INFO test_engine.py: 314: Wrote detections to: /home/ubuntu/Detectron.pytorch/Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_0_1238.pkl
/home/ubuntu/anaconda3/envs/pytorch41/lib/python3.7/site-packages/torch/nn/functional.py:1890: UserWarning: nn.functional.upsample is deprecated. Use nn.functional.interpolate instead.
  warnings.warn("nn.functional.upsample is deprecated. Use nn.functional.interpolate instead.")
INFO subprocess.py: 129: # ---------------------------------------------------------------------------- #
INFO subprocess.py: 131: stdout of subprocess 1 with range [1239, 2476]
INFO subprocess.py: 133: # ---------------------------------------------------------------------------- #
INFO test_net.py:  72: Called with args:
INFO test_net.py:  73: Namespace(cfg_file='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_config.yaml', dataset=None, load_ckpt='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step499.pth', load_detectron=None, multi_gpu_testing=False, num_classes=None, output_dir='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test', range=[1238, 2476], set_cfgs=['TEST.DATASETS', '("voc_2007_test",)'], vis=False)
INFO test_net.py: 130: Testing with config:
INFO test_net.py: 131: {'BBOX_XFORM_CLIP': 4.135166556742356,
 'CROP_RESIZE_WITH_MAX_POOL': True,
 'CUDA': False,
 'DATA_DIR': '/home/ubuntu/Detectron.pytorch/data',
 'DATA_LOADER': {'NUM_THREADS': 4},
 'DEBUG': False,
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXPECTED_RESULTS': [],
 'EXPECTED_RESULTS_ATOL': 0.005,
 'EXPECTED_RESULTS_EMAIL': '',
 'EXPECTED_RESULTS_RTOL': 0.1,
 'FAST_RCNN': {'BOX_OUT_STREAMS': 1,
               'CONV_HEAD_DIM': 256,
               'MLP_HEAD_DIM': 1024,
               'NUM_STACKED_CONVS': 4,
               'ROI_BOX_HEAD': 'fast_rcnn_heads.roi_2mlp_head',
               'ROI_XFORM_METHOD': 'RoIAlign',
               'ROI_XFORM_RESOLUTION': 7,
               'ROI_XFORM_SAMPLING_RATIO': 2},
 'FPN': {'COARSEST_STRIDE': 32,
         'DIM': 256,
         'EXTRA_CONV_LEVELS': False,
         'FPN_ON': True,
         'MULTILEVEL_ROIS': True,
         'MULTILEVEL_RPN': True,
         'ROI_CANONICAL_LEVEL': 4,
         'ROI_CANONICAL_SCALE': 224,
         'ROI_MAX_LEVEL': 5,
         'ROI_MIN_LEVEL': 2,
         'RPN_ANCHOR_START_SIZE': 32,
         'RPN_ASPECT_RATIOS': (0.5, 1, 2),
         'RPN_COLLECT_SCALE': 1,
         'RPN_MAX_LEVEL': 6,
         'RPN_MIN_LEVEL': 2,
         'USE_GN': False,
         'ZERO_INIT_LATERAL': False},
 'GROUP_NORM': {'DIM_PER_GP': -1, 'EPSILON': 1e-05, 'NUM_GROUPS': 32},
 'KRCNN': {'CONV_HEAD_DIM': 256,
           'CONV_HEAD_KERNEL': 3,
           'CONV_INIT': 'GaussianFill',
           'DECONV_DIM': 256,
           'DECONV_KERNEL': 4,
           'DILATION': 1,
           'HEATMAP_SIZE': -1,
           'INFERENCE_MIN_SIZE': 0,
           'KEYPOINT_CONFIDENCE': 'bbox',
           'LOSS_WEIGHT': 1.0,
           'MIN_KEYPOINT_COUNT_FOR_VALID_MINIBATCH': 20,
           'NMS_OKS': False,
           'NORMALIZE_BY_VISIBLE_KEYPOINTS': True,
           'NUM_KEYPOINTS': -1,
           'NUM_STACKED_CONVS': 8,
           'ROI_KEYPOINTS_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'UP_SCALE': -1,
           'USE_DECONV': False,
           'USE_DECONV_OUTPUT': False},
 'MATLAB': 'matlab',
 'MODEL': {'BBOX_REG_WEIGHTS': (10.0, 10.0, 5.0, 5.0),
           'CLS_AGNOSTIC_BBOX_REG': False,
           'CONV_BODY': 'FPN.fpn_ResNet101_conv5_body',
           'FASTER_RCNN': True,
           'KEYPOINTS_ON': False,
           'LOAD_IMAGENET_PRETRAINED_WEIGHTS': True,
           'MASK_ON': False,
           'NUM_CLASSES': 21,
           'RPN_ONLY': False,
           'SHARE_RES5': False,
           'TYPE': 'generalized_rcnn',
           'UNSUPERVISED_POSE': False},
 'MRCNN': {'CLS_SPECIFIC_MASK': True,
           'CONV_INIT': 'GaussianFill',
           'DILATION': 2,
           'DIM_REDUCED': 256,
           'MEMORY_EFFICIENT_LOSS': True,
           'RESOLUTION': 14,
           'ROI_MASK_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'THRESH_BINARIZE': 0.5,
           'UPSAMPLE_RATIO': 1,
           'USE_FC_OUTPUT': False,
           'WEIGHT_LOSS_MASK': 1.0},
 'NUM_GPUS': 8,
 'OUTPUT_DIR': 'Outputs',
 'PIXEL_MEANS': array([[[102.9801, 115.9465, 122.7717]]]),
 'POOLING_MODE': 'crop',
 'POOLING_SIZE': 7,
 'PYTORCH_VERSION_LESS_THAN_040': False,
 'RESNETS': {'FREEZE_AT': 2,
             'IMAGENET_PRETRAINED_WEIGHTS': 'data/pretrained_model/resnet101_caffe.pth',
             'NUM_GROUPS': 1,
             'RES5_DILATION': 1,
             'SHORTCUT_FUNC': 'basic_bn_shortcut',
             'STEM_FUNC': 'basic_bn_stem',
             'STRIDE_1X1': True,
             'TRANS_FUNC': 'bottleneck_transformation',
             'USE_GN': False,
             'WIDTH_PER_GROUP': 64},
 'RETINANET': {'ANCHOR_SCALE': 4,
               'ASPECT_RATIOS': (0.5, 1.0, 2.0),
               'BBOX_REG_BETA': 0.11,
               'BBOX_REG_WEIGHT': 1.0,
               'CLASS_SPECIFIC_BBOX': False,
               'INFERENCE_TH': 0.05,
               'LOSS_ALPHA': 0.25,
               'LOSS_GAMMA': 2.0,
               'NEGATIVE_OVERLAP': 0.4,
               'NUM_CONVS': 4,
               'POSITIVE_OVERLAP': 0.5,
               'PRE_NMS_TOP_N': 1000,
               'PRIOR_PROB': 0.01,
               'RETINANET_ON': False,
               'SCALES_PER_OCTAVE': 3,
               'SHARE_CLS_BBOX_TOWER': False,
               'SOFTMAX': False},
 'RFCN': {'PS_GRID_SIZE': 3},
 'RNG_SEED': 3,
 'ROOT_DIR': '/home/ubuntu/Detectron.pytorch',
 'RPN': {'ASPECT_RATIOS': (0.5, 1, 2),
         'CLS_ACTIVATION': 'sigmoid',
         'OUT_DIM': 512,
         'OUT_DIM_AS_IN_DIM': True,
         'RPN_ON': True,
         'SIZES': (64, 128, 256, 512),
         'STRIDE': 16},
 'SOLVER': {'BASE_LR': 2e-05,
            'BIAS_DOUBLE_LR': True,
            'BIAS_WEIGHT_DECAY': False,
            'GAMMA': 0.1,
            'LOG_LR_CHANGE_THRESHOLD': 1.1,
            'LRS': [],
            'LR_POLICY': 'steps_with_decay',
            'MAX_ITER': 10000,
            'MOMENTUM': 0.9,
            'SCALE_MOMENTUM': True,
            'SCALE_MOMENTUM_THRESHOLD': 1.1,
            'STEPS': [0, 5000, 8000],
            'STEP_SIZE': 30000,
            'TYPE': 'SGD',
            'WARM_UP_FACTOR': 0.3333333333333333,
            'WARM_UP_ITERS': 500,
            'WARM_UP_METHOD': 'linear',
            'WEIGHT_DECAY': 0.0001,
            'WEIGHT_DECAY_GN': 0.0},
 'TEST': {'BBOX_AUG': {'AREA_TH_HI': 32400,
                       'AREA_TH_LO': 2500,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'COORD_HEUR': 'UNION',
                       'ENABLED': False,
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False,
                       'SCORE_HEUR': 'UNION'},
          'BBOX_REG': True,
          'BBOX_VOTE': {'ENABLED': False,
                        'SCORING_METHOD': 'ID',
                        'SCORING_METHOD_BETA': 1.0,
                        'VOTE_TH': 0.8},
          'COMPETITION_MODE': True,
          'DATASETS': ('voc_2007_test',),
          'DETECTIONS_PER_IM': 100,
          'FORCE_JSON_DATASET_EVAL': False,
          'KPS_AUG': {'AREA_TH': 32400,
                      'ASPECT_RATIOS': (),
                      'ASPECT_RATIO_H_FLIP': False,
                      'ENABLED': False,
                      'HEUR': 'HM_AVG',
                      'H_FLIP': False,
                      'MAX_SIZE': 4000,
                      'SCALES': (),
                      'SCALE_H_FLIP': False,
                      'SCALE_SIZE_DEP': False},
          'MASK_AUG': {'AREA_TH': 32400,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'ENABLED': False,
                       'HEUR': 'SOFT_AVG',
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False},
          'MAX_SIZE': 1000,
          'NMS': 0.5,
          'PRECOMPUTED_PROPOSALS': False,
          'PROPOSAL_FILES': (),
          'PROPOSAL_LIMIT': 2000,
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 1000,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALE': 600,
          'SCORE_THRESH': 0.05,
          'SOFT_NMS': {'ENABLED': False, 'METHOD': 'linear', 'SIGMA': 0.5},
          'WEAK_SUPERVISE': False},
 'TRAIN': {'ASPECT_CROPPING': False,
           'ASPECT_GROUPING': True,
           'ASPECT_HI': 2,
           'ASPECT_LO': 0.5,
           'BATCH_SIZE_PER_IM': 512,
           'BBOX_INSIDE_WEIGHTS': (1.0, 1.0, 1.0, 1.0),
           'BBOX_NORMALIZE_MEANS': (0.0, 0.0, 0.0, 0.0),
           'BBOX_NORMALIZE_STDS': (0.1, 0.1, 0.2, 0.2),
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'COPY_CLS_TO_DET': False,
           'CROWD_FILTER_THRESH': 0.7,
           'DATASETS': (),
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'FREEZE_BOX_HEAD': True,
           'FREEZE_CONV_BODY': False,
           'FREEZE_RPN': False,
           'GT_MIN_AREA': -1,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_FILES': (),
           'RPN_BATCH_SIZE_PER_IM': 256,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 2000,
           'RPN_STRADDLE_THRESH': 0,
           'SCALES': (600,),
           'SNAPSHOT_ITERS': 2000,
           'SPATIAL_REG': False,
           'USE_FLIPPED': True,
           'WEAK_SUPERVISE': True,
           'WEAK_SUPERVISE_WITH_PRETRAIN': True},
 'VIS': False,
 'VIS_TH': 0.9}
loading annotations into memory...
Done (t=0.08s)
creating index...
index created!
INFO test_engine.py: 324: training mode? : False
INFO test_engine.py: 331: loading checkpoint Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step499.pth
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1239/2476 0.598s + 0.002s (eta: 0:12:21)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1249/2476 0.404s + 0.001s (eta: 0:08:16)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1259/2476 0.391s + 0.001s (eta: 0:07:57)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1269/2476 0.392s + 0.001s (eta: 0:07:54)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1279/2476 0.380s + 0.001s (eta: 0:07:37)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1289/2476 0.382s + 0.001s (eta: 0:07:35)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1299/2476 0.380s + 0.001s (eta: 0:07:29)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1309/2476 0.385s + 0.001s (eta: 0:07:31)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1319/2476 0.386s + 0.001s (eta: 0:07:28)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1329/2476 0.387s + 0.001s (eta: 0:07:25)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1339/2476 0.387s + 0.001s (eta: 0:07:21)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1349/2476 0.387s + 0.001s (eta: 0:07:17)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1359/2476 0.385s + 0.001s (eta: 0:07:11)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1369/2476 0.384s + 0.001s (eta: 0:07:07)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1379/2476 0.386s + 0.001s (eta: 0:07:04)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1389/2476 0.387s + 0.001s (eta: 0:07:02)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1399/2476 0.387s + 0.002s (eta: 0:06:58)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1409/2476 0.385s + 0.002s (eta: 0:06:52)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1419/2476 0.386s + 0.002s (eta: 0:06:49)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1429/2476 0.386s + 0.002s (eta: 0:06:45)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1439/2476 0.383s + 0.002s (eta: 0:06:39)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1449/2476 0.383s + 0.002s (eta: 0:06:35)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1459/2476 0.383s + 0.002s (eta: 0:06:31)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1469/2476 0.383s + 0.002s (eta: 0:06:27)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1479/2476 0.383s + 0.002s (eta: 0:06:23)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1489/2476 0.382s + 0.002s (eta: 0:06:18)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1499/2476 0.381s + 0.002s (eta: 0:06:13)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1509/2476 0.381s + 0.002s (eta: 0:06:10)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1519/2476 0.381s + 0.002s (eta: 0:06:05)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1529/2476 0.380s + 0.002s (eta: 0:06:01)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1539/2476 0.381s + 0.002s (eta: 0:05:58)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1549/2476 0.380s + 0.002s (eta: 0:05:53)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1559/2476 0.380s + 0.002s (eta: 0:05:50)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1569/2476 0.380s + 0.002s (eta: 0:05:46)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1579/2476 0.380s + 0.002s (eta: 0:05:42)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1589/2476 0.380s + 0.002s (eta: 0:05:38)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1599/2476 0.380s + 0.002s (eta: 0:05:34)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1609/2476 0.380s + 0.002s (eta: 0:05:30)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1619/2476 0.379s + 0.002s (eta: 0:05:26)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1629/2476 0.379s + 0.002s (eta: 0:05:22)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1639/2476 0.379s + 0.002s (eta: 0:05:18)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1649/2476 0.379s + 0.002s (eta: 0:05:14)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1659/2476 0.379s + 0.002s (eta: 0:05:11)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1669/2476 0.379s + 0.002s (eta: 0:05:07)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1679/2476 0.380s + 0.002s (eta: 0:05:03)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1689/2476 0.380s + 0.002s (eta: 0:04:59)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1699/2476 0.379s + 0.002s (eta: 0:04:55)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1709/2476 0.379s + 0.002s (eta: 0:04:51)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1719/2476 0.379s + 0.002s (eta: 0:04:47)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1729/2476 0.379s + 0.002s (eta: 0:04:44)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1739/2476 0.379s + 0.002s (eta: 0:04:40)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1749/2476 0.379s + 0.002s (eta: 0:04:36)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1759/2476 0.378s + 0.002s (eta: 0:04:32)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1769/2476 0.379s + 0.002s (eta: 0:04:28)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1779/2476 0.379s + 0.002s (eta: 0:04:24)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1789/2476 0.378s + 0.002s (eta: 0:04:20)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1799/2476 0.378s + 0.002s (eta: 0:04:16)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1809/2476 0.378s + 0.002s (eta: 0:04:13)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1819/2476 0.378s + 0.002s (eta: 0:04:09)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1829/2476 0.378s + 0.002s (eta: 0:04:05)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1839/2476 0.378s + 0.002s (eta: 0:04:01)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1849/2476 0.378s + 0.002s (eta: 0:03:58)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1859/2476 0.378s + 0.002s (eta: 0:03:54)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1869/2476 0.378s + 0.002s (eta: 0:03:50)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1879/2476 0.377s + 0.002s (eta: 0:03:46)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1889/2476 0.377s + 0.002s (eta: 0:03:42)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1899/2476 0.377s + 0.002s (eta: 0:03:38)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1909/2476 0.377s + 0.002s (eta: 0:03:34)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1919/2476 0.377s + 0.002s (eta: 0:03:30)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1929/2476 0.377s + 0.002s (eta: 0:03:27)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1939/2476 0.377s + 0.002s (eta: 0:03:23)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1949/2476 0.377s + 0.002s (eta: 0:03:19)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1959/2476 0.377s + 0.002s (eta: 0:03:15)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1969/2476 0.377s + 0.002s (eta: 0:03:11)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1979/2476 0.377s + 0.002s (eta: 0:03:08)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1989/2476 0.377s + 0.002s (eta: 0:03:04)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1999/2476 0.377s + 0.002s (eta: 0:03:00)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2009/2476 0.377s + 0.002s (eta: 0:02:56)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2019/2476 0.377s + 0.002s (eta: 0:02:52)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2029/2476 0.377s + 0.002s (eta: 0:02:49)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2039/2476 0.377s + 0.002s (eta: 0:02:45)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2049/2476 0.377s + 0.002s (eta: 0:02:41)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2059/2476 0.377s + 0.002s (eta: 0:02:37)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2069/2476 0.377s + 0.002s (eta: 0:02:34)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2079/2476 0.377s + 0.002s (eta: 0:02:30)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2089/2476 0.377s + 0.002s (eta: 0:02:26)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2099/2476 0.377s + 0.002s (eta: 0:02:22)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2109/2476 0.378s + 0.002s (eta: 0:02:19)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2119/2476 0.378s + 0.002s (eta: 0:02:15)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2129/2476 0.378s + 0.002s (eta: 0:02:11)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2139/2476 0.378s + 0.002s (eta: 0:02:07)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2149/2476 0.378s + 0.002s (eta: 0:02:04)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2159/2476 0.378s + 0.002s (eta: 0:02:00)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2169/2476 0.379s + 0.002s (eta: 0:01:56)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2179/2476 0.378s + 0.002s (eta: 0:01:52)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2189/2476 0.379s + 0.002s (eta: 0:01:49)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2199/2476 0.379s + 0.002s (eta: 0:01:45)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2209/2476 0.379s + 0.002s (eta: 0:01:41)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2219/2476 0.379s + 0.002s (eta: 0:01:37)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2229/2476 0.379s + 0.002s (eta: 0:01:33)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2239/2476 0.379s + 0.001s (eta: 0:01:30)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2249/2476 0.378s + 0.001s (eta: 0:01:26)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2259/2476 0.378s + 0.001s (eta: 0:01:22)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2269/2476 0.378s + 0.001s (eta: 0:01:18)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2279/2476 0.378s + 0.001s (eta: 0:01:14)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2289/2476 0.378s + 0.001s (eta: 0:01:11)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2299/2476 0.378s + 0.001s (eta: 0:01:07)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2309/2476 0.378s + 0.001s (eta: 0:01:03)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2319/2476 0.378s + 0.001s (eta: 0:00:59)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2329/2476 0.378s + 0.001s (eta: 0:00:55)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2339/2476 0.378s + 0.001s (eta: 0:00:51)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2349/2476 0.378s + 0.001s (eta: 0:00:48)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2359/2476 0.378s + 0.001s (eta: 0:00:44)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2369/2476 0.378s + 0.001s (eta: 0:00:40)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2379/2476 0.378s + 0.001s (eta: 0:00:36)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2389/2476 0.378s + 0.001s (eta: 0:00:32)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2399/2476 0.378s + 0.001s (eta: 0:00:29)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2409/2476 0.378s + 0.001s (eta: 0:00:25)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2419/2476 0.378s + 0.001s (eta: 0:00:21)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2429/2476 0.378s + 0.001s (eta: 0:00:17)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2439/2476 0.378s + 0.001s (eta: 0:00:14)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2449/2476 0.378s + 0.001s (eta: 0:00:10)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2459/2476 0.378s + 0.001s (eta: 0:00:06)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2469/2476 0.378s + 0.001s (eta: 0:00:02)
INFO test_engine.py: 314: Wrote detections to: /home/ubuntu/Detectron.pytorch/Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_1238_2476.pkl
/home/ubuntu/anaconda3/envs/pytorch41/lib/python3.7/site-packages/torch/nn/functional.py:1890: UserWarning: nn.functional.upsample is deprecated. Use nn.functional.interpolate instead.
  warnings.warn("nn.functional.upsample is deprecated. Use nn.functional.interpolate instead.")

INFO subprocess.py: 129: # ---------------------------------------------------------------------------- #
INFO subprocess.py: 131: stdout of subprocess 2 with range [2477, 3714]
INFO subprocess.py: 133: # ---------------------------------------------------------------------------- #
INFO test_net.py:  72: Called with args:
INFO test_net.py:  73: Namespace(cfg_file='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_config.yaml', dataset=None, load_ckpt='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step499.pth', load_detectron=None, multi_gpu_testing=False, num_classes=None, output_dir='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test', range=[2476, 3714], set_cfgs=['TEST.DATASETS', '("voc_2007_test",)'], vis=False)
INFO test_net.py: 130: Testing with config:
INFO test_net.py: 131: {'BBOX_XFORM_CLIP': 4.135166556742356,
 'CROP_RESIZE_WITH_MAX_POOL': True,
 'CUDA': False,
 'DATA_DIR': '/home/ubuntu/Detectron.pytorch/data',
 'DATA_LOADER': {'NUM_THREADS': 4},
 'DEBUG': False,
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXPECTED_RESULTS': [],
 'EXPECTED_RESULTS_ATOL': 0.005,
 'EXPECTED_RESULTS_EMAIL': '',
 'EXPECTED_RESULTS_RTOL': 0.1,
 'FAST_RCNN': {'BOX_OUT_STREAMS': 1,
               'CONV_HEAD_DIM': 256,
               'MLP_HEAD_DIM': 1024,
               'NUM_STACKED_CONVS': 4,
               'ROI_BOX_HEAD': 'fast_rcnn_heads.roi_2mlp_head',
               'ROI_XFORM_METHOD': 'RoIAlign',
               'ROI_XFORM_RESOLUTION': 7,
               'ROI_XFORM_SAMPLING_RATIO': 2},
 'FPN': {'COARSEST_STRIDE': 32,
         'DIM': 256,
         'EXTRA_CONV_LEVELS': False,
         'FPN_ON': True,
         'MULTILEVEL_ROIS': True,
         'MULTILEVEL_RPN': True,
         'ROI_CANONICAL_LEVEL': 4,
         'ROI_CANONICAL_SCALE': 224,
         'ROI_MAX_LEVEL': 5,
         'ROI_MIN_LEVEL': 2,
         'RPN_ANCHOR_START_SIZE': 32,
         'RPN_ASPECT_RATIOS': (0.5, 1, 2),
         'RPN_COLLECT_SCALE': 1,
         'RPN_MAX_LEVEL': 6,
         'RPN_MIN_LEVEL': 2,
         'USE_GN': False,
         'ZERO_INIT_LATERAL': False},
 'GROUP_NORM': {'DIM_PER_GP': -1, 'EPSILON': 1e-05, 'NUM_GROUPS': 32},
 'KRCNN': {'CONV_HEAD_DIM': 256,
           'CONV_HEAD_KERNEL': 3,
           'CONV_INIT': 'GaussianFill',
           'DECONV_DIM': 256,
           'DECONV_KERNEL': 4,
           'DILATION': 1,
           'HEATMAP_SIZE': -1,
           'INFERENCE_MIN_SIZE': 0,
           'KEYPOINT_CONFIDENCE': 'bbox',
           'LOSS_WEIGHT': 1.0,
           'MIN_KEYPOINT_COUNT_FOR_VALID_MINIBATCH': 20,
           'NMS_OKS': False,
           'NORMALIZE_BY_VISIBLE_KEYPOINTS': True,
           'NUM_KEYPOINTS': -1,
           'NUM_STACKED_CONVS': 8,
           'ROI_KEYPOINTS_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'UP_SCALE': -1,
           'USE_DECONV': False,
           'USE_DECONV_OUTPUT': False},
 'MATLAB': 'matlab',
 'MODEL': {'BBOX_REG_WEIGHTS': (10.0, 10.0, 5.0, 5.0),
           'CLS_AGNOSTIC_BBOX_REG': False,
           'CONV_BODY': 'FPN.fpn_ResNet101_conv5_body',
           'FASTER_RCNN': True,
           'KEYPOINTS_ON': False,
           'LOAD_IMAGENET_PRETRAINED_WEIGHTS': True,
           'MASK_ON': False,
           'NUM_CLASSES': 21,
           'RPN_ONLY': False,
           'SHARE_RES5': False,
           'TYPE': 'generalized_rcnn',
           'UNSUPERVISED_POSE': False},
 'MRCNN': {'CLS_SPECIFIC_MASK': True,
           'CONV_INIT': 'GaussianFill',
           'DILATION': 2,
           'DIM_REDUCED': 256,
           'MEMORY_EFFICIENT_LOSS': True,
           'RESOLUTION': 14,
           'ROI_MASK_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'THRESH_BINARIZE': 0.5,
           'UPSAMPLE_RATIO': 1,
           'USE_FC_OUTPUT': False,
           'WEIGHT_LOSS_MASK': 1.0},
 'NUM_GPUS': 8,
 'OUTPUT_DIR': 'Outputs',
 'PIXEL_MEANS': array([[[102.9801, 115.9465, 122.7717]]]),
 'POOLING_MODE': 'crop',
 'POOLING_SIZE': 7,
 'PYTORCH_VERSION_LESS_THAN_040': False,
 'RESNETS': {'FREEZE_AT': 2,
             'IMAGENET_PRETRAINED_WEIGHTS': 'data/pretrained_model/resnet101_caffe.pth',
             'NUM_GROUPS': 1,
             'RES5_DILATION': 1,
             'SHORTCUT_FUNC': 'basic_bn_shortcut',
             'STEM_FUNC': 'basic_bn_stem',
             'STRIDE_1X1': True,
             'TRANS_FUNC': 'bottleneck_transformation',
             'USE_GN': False,
             'WIDTH_PER_GROUP': 64},
 'RETINANET': {'ANCHOR_SCALE': 4,
               'ASPECT_RATIOS': (0.5, 1.0, 2.0),
               'BBOX_REG_BETA': 0.11,
               'BBOX_REG_WEIGHT': 1.0,
               'CLASS_SPECIFIC_BBOX': False,
               'INFERENCE_TH': 0.05,
               'LOSS_ALPHA': 0.25,
               'LOSS_GAMMA': 2.0,
               'NEGATIVE_OVERLAP': 0.4,
               'NUM_CONVS': 4,
               'POSITIVE_OVERLAP': 0.5,
               'PRE_NMS_TOP_N': 1000,
               'PRIOR_PROB': 0.01,
               'RETINANET_ON': False,
               'SCALES_PER_OCTAVE': 3,
               'SHARE_CLS_BBOX_TOWER': False,
               'SOFTMAX': False},
 'RFCN': {'PS_GRID_SIZE': 3},
 'RNG_SEED': 3,
 'ROOT_DIR': '/home/ubuntu/Detectron.pytorch',
 'RPN': {'ASPECT_RATIOS': (0.5, 1, 2),
         'CLS_ACTIVATION': 'sigmoid',
         'OUT_DIM': 512,
         'OUT_DIM_AS_IN_DIM': True,
         'RPN_ON': True,
         'SIZES': (64, 128, 256, 512),
         'STRIDE': 16},
 'SOLVER': {'BASE_LR': 2e-05,
            'BIAS_DOUBLE_LR': True,
            'BIAS_WEIGHT_DECAY': False,
            'GAMMA': 0.1,
            'LOG_LR_CHANGE_THRESHOLD': 1.1,
            'LRS': [],
            'LR_POLICY': 'steps_with_decay',
            'MAX_ITER': 10000,
            'MOMENTUM': 0.9,
            'SCALE_MOMENTUM': True,
            'SCALE_MOMENTUM_THRESHOLD': 1.1,
            'STEPS': [0, 5000, 8000],
            'STEP_SIZE': 30000,
            'TYPE': 'SGD',
            'WARM_UP_FACTOR': 0.3333333333333333,
            'WARM_UP_ITERS': 500,
            'WARM_UP_METHOD': 'linear',
            'WEIGHT_DECAY': 0.0001,
            'WEIGHT_DECAY_GN': 0.0},
 'TEST': {'BBOX_AUG': {'AREA_TH_HI': 32400,
                       'AREA_TH_LO': 2500,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'COORD_HEUR': 'UNION',
                       'ENABLED': False,
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False,
                       'SCORE_HEUR': 'UNION'},
          'BBOX_REG': True,
          'BBOX_VOTE': {'ENABLED': False,
                        'SCORING_METHOD': 'ID',
                        'SCORING_METHOD_BETA': 1.0,
                        'VOTE_TH': 0.8},
          'COMPETITION_MODE': True,
          'DATASETS': ('voc_2007_test',),
          'DETECTIONS_PER_IM': 100,
          'FORCE_JSON_DATASET_EVAL': False,
          'KPS_AUG': {'AREA_TH': 32400,
                      'ASPECT_RATIOS': (),
                      'ASPECT_RATIO_H_FLIP': False,
                      'ENABLED': False,
                      'HEUR': 'HM_AVG',
                      'H_FLIP': False,
                      'MAX_SIZE': 4000,
                      'SCALES': (),
                      'SCALE_H_FLIP': False,
                      'SCALE_SIZE_DEP': False},
          'MASK_AUG': {'AREA_TH': 32400,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'ENABLED': False,
                       'HEUR': 'SOFT_AVG',
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False},
          'MAX_SIZE': 1000,
          'NMS': 0.5,
          'PRECOMPUTED_PROPOSALS': False,
          'PROPOSAL_FILES': (),
          'PROPOSAL_LIMIT': 2000,
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 1000,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALE': 600,
          'SCORE_THRESH': 0.05,
          'SOFT_NMS': {'ENABLED': False, 'METHOD': 'linear', 'SIGMA': 0.5},
          'WEAK_SUPERVISE': False},
 'TRAIN': {'ASPECT_CROPPING': False,
           'ASPECT_GROUPING': True,
           'ASPECT_HI': 2,
           'ASPECT_LO': 0.5,
           'BATCH_SIZE_PER_IM': 512,
           'BBOX_INSIDE_WEIGHTS': (1.0, 1.0, 1.0, 1.0),
           'BBOX_NORMALIZE_MEANS': (0.0, 0.0, 0.0, 0.0),
           'BBOX_NORMALIZE_STDS': (0.1, 0.1, 0.2, 0.2),
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'COPY_CLS_TO_DET': False,
           'CROWD_FILTER_THRESH': 0.7,
           'DATASETS': (),
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'FREEZE_BOX_HEAD': True,
           'FREEZE_CONV_BODY': False,
           'FREEZE_RPN': False,
           'GT_MIN_AREA': -1,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_FILES': (),
           'RPN_BATCH_SIZE_PER_IM': 256,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 2000,
           'RPN_STRADDLE_THRESH': 0,
           'SCALES': (600,),
           'SNAPSHOT_ITERS': 2000,
           'SPATIAL_REG': False,
           'USE_FLIPPED': True,
           'WEAK_SUPERVISE': True,
           'WEAK_SUPERVISE_WITH_PRETRAIN': True},
 'VIS': False,
 'VIS_TH': 0.9}
loading annotations into memory...
Done (t=0.08s)
creating index...
index created!
INFO test_engine.py: 324: training mode? : False
INFO test_engine.py: 331: loading checkpoint Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step499.pth
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2477/3714 0.526s + 0.001s (eta: 0:10:51)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2487/3714 0.411s + 0.001s (eta: 0:08:26)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2497/3714 0.408s + 0.001s (eta: 0:08:17)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2507/3714 0.401s + 0.001s (eta: 0:08:06)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2517/3714 0.402s + 0.001s (eta: 0:08:03)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2527/3714 0.396s + 0.001s (eta: 0:07:52)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2537/3714 0.396s + 0.001s (eta: 0:07:47)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2547/3714 0.394s + 0.001s (eta: 0:07:41)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2557/3714 0.392s + 0.002s (eta: 0:07:34)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2567/3714 0.393s + 0.002s (eta: 0:07:32)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2577/3714 0.392s + 0.002s (eta: 0:07:27)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2587/3714 0.393s + 0.002s (eta: 0:07:24)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2597/3714 0.392s + 0.002s (eta: 0:07:19)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2607/3714 0.391s + 0.001s (eta: 0:07:14)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2617/3714 0.390s + 0.002s (eta: 0:07:09)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2627/3714 0.390s + 0.001s (eta: 0:07:05)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2637/3714 0.390s + 0.001s (eta: 0:07:01)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2647/3714 0.390s + 0.001s (eta: 0:06:57)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2657/3714 0.389s + 0.002s (eta: 0:06:53)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2667/3714 0.392s + 0.002s (eta: 0:06:52)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2677/3714 0.392s + 0.002s (eta: 0:06:48)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2687/3714 0.392s + 0.002s (eta: 0:06:43)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2697/3714 0.392s + 0.002s (eta: 0:06:39)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2707/3714 0.391s + 0.001s (eta: 0:06:35)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2717/3714 0.391s + 0.001s (eta: 0:06:31)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2727/3714 0.391s + 0.002s (eta: 0:06:27)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2737/3714 0.391s + 0.002s (eta: 0:06:23)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2747/3714 0.391s + 0.002s (eta: 0:06:19)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2757/3714 0.390s + 0.002s (eta: 0:06:15)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2767/3714 0.390s + 0.002s (eta: 0:06:10)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2777/3714 0.391s + 0.002s (eta: 0:06:07)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2787/3714 0.391s + 0.002s (eta: 0:06:03)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2797/3714 0.391s + 0.002s (eta: 0:05:59)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2807/3714 0.391s + 0.002s (eta: 0:05:55)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2817/3714 0.390s + 0.002s (eta: 0:05:51)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2827/3714 0.390s + 0.001s (eta: 0:05:47)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2837/3714 0.390s + 0.001s (eta: 0:05:43)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2847/3714 0.391s + 0.001s (eta: 0:05:40)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2857/3714 0.391s + 0.001s (eta: 0:05:36)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2867/3714 0.391s + 0.002s (eta: 0:05:32)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2877/3714 0.390s + 0.002s (eta: 0:05:27)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2887/3714 0.390s + 0.002s (eta: 0:05:23)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2897/3714 0.389s + 0.002s (eta: 0:05:19)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2907/3714 0.390s + 0.002s (eta: 0:05:15)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2917/3714 0.390s + 0.002s (eta: 0:05:11)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2927/3714 0.390s + 0.001s (eta: 0:05:07)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2937/3714 0.389s + 0.002s (eta: 0:05:03)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2947/3714 0.389s + 0.002s (eta: 0:04:59)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2957/3714 0.389s + 0.002s (eta: 0:04:55)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2967/3714 0.389s + 0.002s (eta: 0:04:51)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2977/3714 0.389s + 0.002s (eta: 0:04:47)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2987/3714 0.388s + 0.002s (eta: 0:04:43)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2997/3714 0.389s + 0.002s (eta: 0:04:39)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3007/3714 0.389s + 0.002s (eta: 0:04:35)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3017/3714 0.388s + 0.002s (eta: 0:04:31)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3027/3714 0.388s + 0.002s (eta: 0:04:27)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3037/3714 0.388s + 0.002s (eta: 0:04:23)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3047/3714 0.388s + 0.002s (eta: 0:04:19)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3057/3714 0.388s + 0.002s (eta: 0:04:16)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3067/3714 0.388s + 0.002s (eta: 0:04:12)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3077/3714 0.388s + 0.002s (eta: 0:04:08)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3087/3714 0.389s + 0.002s (eta: 0:04:04)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3097/3714 0.389s + 0.002s (eta: 0:04:00)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3107/3714 0.388s + 0.002s (eta: 0:03:56)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3117/3714 0.389s + 0.002s (eta: 0:03:52)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3127/3714 0.389s + 0.002s (eta: 0:03:49)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3137/3714 0.389s + 0.002s (eta: 0:03:45)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3147/3714 0.389s + 0.002s (eta: 0:03:41)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3157/3714 0.389s + 0.002s (eta: 0:03:37)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3167/3714 0.389s + 0.002s (eta: 0:03:33)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3177/3714 0.390s + 0.002s (eta: 0:03:29)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3187/3714 0.389s + 0.002s (eta: 0:03:25)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3197/3714 0.389s + 0.002s (eta: 0:03:21)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3207/3714 0.389s + 0.002s (eta: 0:03:17)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3217/3714 0.389s + 0.002s (eta: 0:03:14)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3227/3714 0.389s + 0.002s (eta: 0:03:10)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3237/3714 0.389s + 0.002s (eta: 0:03:06)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3247/3714 0.389s + 0.002s (eta: 0:03:02)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3257/3714 0.389s + 0.002s (eta: 0:02:58)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3267/3714 0.389s + 0.002s (eta: 0:02:54)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3277/3714 0.389s + 0.002s (eta: 0:02:50)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3287/3714 0.389s + 0.002s (eta: 0:02:46)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3297/3714 0.389s + 0.002s (eta: 0:02:42)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3307/3714 0.389s + 0.002s (eta: 0:02:39)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3317/3714 0.389s + 0.002s (eta: 0:02:35)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3327/3714 0.390s + 0.002s (eta: 0:02:31)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3337/3714 0.390s + 0.002s (eta: 0:02:27)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3347/3714 0.390s + 0.002s (eta: 0:02:23)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3357/3714 0.390s + 0.002s (eta: 0:02:19)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3367/3714 0.390s + 0.002s (eta: 0:02:15)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3377/3714 0.390s + 0.002s (eta: 0:02:11)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3387/3714 0.390s + 0.002s (eta: 0:02:08)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3397/3714 0.390s + 0.002s (eta: 0:02:04)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3407/3714 0.390s + 0.002s (eta: 0:02:00)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3417/3714 0.390s + 0.002s (eta: 0:01:56)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3427/3714 0.390s + 0.002s (eta: 0:01:52)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3437/3714 0.390s + 0.002s (eta: 0:01:48)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3447/3714 0.390s + 0.002s (eta: 0:01:44)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3457/3714 0.390s + 0.002s (eta: 0:01:40)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3467/3714 0.390s + 0.002s (eta: 0:01:36)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3477/3714 0.390s + 0.002s (eta: 0:01:32)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3487/3714 0.390s + 0.002s (eta: 0:01:28)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3497/3714 0.390s + 0.002s (eta: 0:01:24)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3507/3714 0.390s + 0.002s (eta: 0:01:21)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3517/3714 0.390s + 0.002s (eta: 0:01:17)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3527/3714 0.390s + 0.002s (eta: 0:01:13)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3537/3714 0.390s + 0.002s (eta: 0:01:09)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3547/3714 0.390s + 0.002s (eta: 0:01:05)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3557/3714 0.390s + 0.002s (eta: 0:01:01)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3567/3714 0.390s + 0.002s (eta: 0:00:57)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3577/3714 0.390s + 0.002s (eta: 0:00:53)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3587/3714 0.390s + 0.002s (eta: 0:00:49)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3597/3714 0.390s + 0.002s (eta: 0:00:45)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3607/3714 0.390s + 0.002s (eta: 0:00:41)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3617/3714 0.390s + 0.002s (eta: 0:00:38)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3627/3714 0.391s + 0.002s (eta: 0:00:34)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3637/3714 0.391s + 0.002s (eta: 0:00:30)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3647/3714 0.391s + 0.002s (eta: 0:00:26)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3657/3714 0.391s + 0.002s (eta: 0:00:22)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3667/3714 0.390s + 0.002s (eta: 0:00:18)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3677/3714 0.390s + 0.002s (eta: 0:00:14)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3687/3714 0.389s + 0.002s (eta: 0:00:10)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3697/3714 0.388s + 0.002s (eta: 0:00:06)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3707/3714 0.388s + 0.002s (eta: 0:00:02)
INFO test_engine.py: 314: Wrote detections to: /home/ubuntu/Detectron.pytorch/Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_2476_3714.pkl
/home/ubuntu/anaconda3/envs/pytorch41/lib/python3.7/site-packages/torch/nn/functional.py:1890: UserWarning: nn.functional.upsample is deprecated. Use nn.functional.interpolate instead.
  warnings.warn("nn.functional.upsample is deprecated. Use nn.functional.interpolate instead.")

INFO subprocess.py: 129: # ---------------------------------------------------------------------------- #
INFO subprocess.py: 131: stdout of subprocess 3 with range [3715, 4952]
INFO subprocess.py: 133: # ---------------------------------------------------------------------------- #
INFO test_net.py:  72: Called with args:
INFO test_net.py:  73: Namespace(cfg_file='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_config.yaml', dataset=None, load_ckpt='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step499.pth', load_detectron=None, multi_gpu_testing=False, num_classes=None, output_dir='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test', range=[3714, 4952], set_cfgs=['TEST.DATASETS', '("voc_2007_test",)'], vis=False)
INFO test_net.py: 130: Testing with config:
INFO test_net.py: 131: {'BBOX_XFORM_CLIP': 4.135166556742356,
 'CROP_RESIZE_WITH_MAX_POOL': True,
 'CUDA': False,
 'DATA_DIR': '/home/ubuntu/Detectron.pytorch/data',
 'DATA_LOADER': {'NUM_THREADS': 4},
 'DEBUG': False,
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXPECTED_RESULTS': [],
 'EXPECTED_RESULTS_ATOL': 0.005,
 'EXPECTED_RESULTS_EMAIL': '',
 'EXPECTED_RESULTS_RTOL': 0.1,
 'FAST_RCNN': {'BOX_OUT_STREAMS': 1,
               'CONV_HEAD_DIM': 256,
               'MLP_HEAD_DIM': 1024,
               'NUM_STACKED_CONVS': 4,
               'ROI_BOX_HEAD': 'fast_rcnn_heads.roi_2mlp_head',
               'ROI_XFORM_METHOD': 'RoIAlign',
               'ROI_XFORM_RESOLUTION': 7,
               'ROI_XFORM_SAMPLING_RATIO': 2},
 'FPN': {'COARSEST_STRIDE': 32,
         'DIM': 256,
         'EXTRA_CONV_LEVELS': False,
         'FPN_ON': True,
         'MULTILEVEL_ROIS': True,
         'MULTILEVEL_RPN': True,
         'ROI_CANONICAL_LEVEL': 4,
         'ROI_CANONICAL_SCALE': 224,
         'ROI_MAX_LEVEL': 5,
         'ROI_MIN_LEVEL': 2,
         'RPN_ANCHOR_START_SIZE': 32,
         'RPN_ASPECT_RATIOS': (0.5, 1, 2),
         'RPN_COLLECT_SCALE': 1,
         'RPN_MAX_LEVEL': 6,
         'RPN_MIN_LEVEL': 2,
         'USE_GN': False,
         'ZERO_INIT_LATERAL': False},
 'GROUP_NORM': {'DIM_PER_GP': -1, 'EPSILON': 1e-05, 'NUM_GROUPS': 32},
 'KRCNN': {'CONV_HEAD_DIM': 256,
           'CONV_HEAD_KERNEL': 3,
           'CONV_INIT': 'GaussianFill',
           'DECONV_DIM': 256,
           'DECONV_KERNEL': 4,
           'DILATION': 1,
           'HEATMAP_SIZE': -1,
           'INFERENCE_MIN_SIZE': 0,
           'KEYPOINT_CONFIDENCE': 'bbox',
           'LOSS_WEIGHT': 1.0,
           'MIN_KEYPOINT_COUNT_FOR_VALID_MINIBATCH': 20,
           'NMS_OKS': False,
           'NORMALIZE_BY_VISIBLE_KEYPOINTS': True,
           'NUM_KEYPOINTS': -1,
           'NUM_STACKED_CONVS': 8,
           'ROI_KEYPOINTS_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'UP_SCALE': -1,
           'USE_DECONV': False,
           'USE_DECONV_OUTPUT': False},
 'MATLAB': 'matlab',
 'MODEL': {'BBOX_REG_WEIGHTS': (10.0, 10.0, 5.0, 5.0),
           'CLS_AGNOSTIC_BBOX_REG': False,
           'CONV_BODY': 'FPN.fpn_ResNet101_conv5_body',
           'FASTER_RCNN': True,
           'KEYPOINTS_ON': False,
           'LOAD_IMAGENET_PRETRAINED_WEIGHTS': True,
           'MASK_ON': False,
           'NUM_CLASSES': 21,
           'RPN_ONLY': False,
           'SHARE_RES5': False,
           'TYPE': 'generalized_rcnn',
           'UNSUPERVISED_POSE': False},
 'MRCNN': {'CLS_SPECIFIC_MASK': True,
           'CONV_INIT': 'GaussianFill',
           'DILATION': 2,
           'DIM_REDUCED': 256,
           'MEMORY_EFFICIENT_LOSS': True,
           'RESOLUTION': 14,
           'ROI_MASK_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'THRESH_BINARIZE': 0.5,
           'UPSAMPLE_RATIO': 1,
           'USE_FC_OUTPUT': False,
           'WEIGHT_LOSS_MASK': 1.0},
 'NUM_GPUS': 8,
 'OUTPUT_DIR': 'Outputs',
 'PIXEL_MEANS': array([[[102.9801, 115.9465, 122.7717]]]),
 'POOLING_MODE': 'crop',
 'POOLING_SIZE': 7,
 'PYTORCH_VERSION_LESS_THAN_040': False,
 'RESNETS': {'FREEZE_AT': 2,
             'IMAGENET_PRETRAINED_WEIGHTS': 'data/pretrained_model/resnet101_caffe.pth',
             'NUM_GROUPS': 1,
             'RES5_DILATION': 1,
             'SHORTCUT_FUNC': 'basic_bn_shortcut',
             'STEM_FUNC': 'basic_bn_stem',
             'STRIDE_1X1': True,
             'TRANS_FUNC': 'bottleneck_transformation',
             'USE_GN': False,
             'WIDTH_PER_GROUP': 64},
 'RETINANET': {'ANCHOR_SCALE': 4,
               'ASPECT_RATIOS': (0.5, 1.0, 2.0),
               'BBOX_REG_BETA': 0.11,
               'BBOX_REG_WEIGHT': 1.0,
               'CLASS_SPECIFIC_BBOX': False,
               'INFERENCE_TH': 0.05,
               'LOSS_ALPHA': 0.25,
               'LOSS_GAMMA': 2.0,
               'NEGATIVE_OVERLAP': 0.4,
               'NUM_CONVS': 4,
               'POSITIVE_OVERLAP': 0.5,
               'PRE_NMS_TOP_N': 1000,
               'PRIOR_PROB': 0.01,
               'RETINANET_ON': False,
               'SCALES_PER_OCTAVE': 3,
               'SHARE_CLS_BBOX_TOWER': False,
               'SOFTMAX': False},
 'RFCN': {'PS_GRID_SIZE': 3},
 'RNG_SEED': 3,
 'ROOT_DIR': '/home/ubuntu/Detectron.pytorch',
 'RPN': {'ASPECT_RATIOS': (0.5, 1, 2),
         'CLS_ACTIVATION': 'sigmoid',
         'OUT_DIM': 512,
         'OUT_DIM_AS_IN_DIM': True,
         'RPN_ON': True,
         'SIZES': (64, 128, 256, 512),
         'STRIDE': 16},
 'SOLVER': {'BASE_LR': 2e-05,
            'BIAS_DOUBLE_LR': True,
            'BIAS_WEIGHT_DECAY': False,
            'GAMMA': 0.1,
            'LOG_LR_CHANGE_THRESHOLD': 1.1,
            'LRS': [],
            'LR_POLICY': 'steps_with_decay',
            'MAX_ITER': 10000,
            'MOMENTUM': 0.9,
            'SCALE_MOMENTUM': True,
            'SCALE_MOMENTUM_THRESHOLD': 1.1,
            'STEPS': [0, 5000, 8000],
            'STEP_SIZE': 30000,
            'TYPE': 'SGD',
            'WARM_UP_FACTOR': 0.3333333333333333,
            'WARM_UP_ITERS': 500,
            'WARM_UP_METHOD': 'linear',
            'WEIGHT_DECAY': 0.0001,
            'WEIGHT_DECAY_GN': 0.0},
 'TEST': {'BBOX_AUG': {'AREA_TH_HI': 32400,
                       'AREA_TH_LO': 2500,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'COORD_HEUR': 'UNION',
                       'ENABLED': False,
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False,
                       'SCORE_HEUR': 'UNION'},
          'BBOX_REG': True,
          'BBOX_VOTE': {'ENABLED': False,
                        'SCORING_METHOD': 'ID',
                        'SCORING_METHOD_BETA': 1.0,
                        'VOTE_TH': 0.8},
          'COMPETITION_MODE': True,
          'DATASETS': ('voc_2007_test',),
          'DETECTIONS_PER_IM': 100,
          'FORCE_JSON_DATASET_EVAL': False,
          'KPS_AUG': {'AREA_TH': 32400,
                      'ASPECT_RATIOS': (),
                      'ASPECT_RATIO_H_FLIP': False,
                      'ENABLED': False,
                      'HEUR': 'HM_AVG',
                      'H_FLIP': False,
                      'MAX_SIZE': 4000,
                      'SCALES': (),
                      'SCALE_H_FLIP': False,
                      'SCALE_SIZE_DEP': False},
          'MASK_AUG': {'AREA_TH': 32400,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'ENABLED': False,
                       'HEUR': 'SOFT_AVG',
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False},
          'MAX_SIZE': 1000,
          'NMS': 0.5,
          'PRECOMPUTED_PROPOSALS': False,
          'PROPOSAL_FILES': (),
          'PROPOSAL_LIMIT': 2000,
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 1000,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALE': 600,
          'SCORE_THRESH': 0.05,
          'SOFT_NMS': {'ENABLED': False, 'METHOD': 'linear', 'SIGMA': 0.5},
          'WEAK_SUPERVISE': False},
 'TRAIN': {'ASPECT_CROPPING': False,
           'ASPECT_GROUPING': True,
           'ASPECT_HI': 2,
           'ASPECT_LO': 0.5,
           'BATCH_SIZE_PER_IM': 512,
           'BBOX_INSIDE_WEIGHTS': (1.0, 1.0, 1.0, 1.0),
           'BBOX_NORMALIZE_MEANS': (0.0, 0.0, 0.0, 0.0),
           'BBOX_NORMALIZE_STDS': (0.1, 0.1, 0.2, 0.2),
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'COPY_CLS_TO_DET': False,
           'CROWD_FILTER_THRESH': 0.7,
           'DATASETS': (),
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'FREEZE_BOX_HEAD': True,
           'FREEZE_CONV_BODY': False,
           'FREEZE_RPN': False,
           'GT_MIN_AREA': -1,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_FILES': (),
           'RPN_BATCH_SIZE_PER_IM': 256,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 2000,
           'RPN_STRADDLE_THRESH': 0,
           'SCALES': (600,),
           'SNAPSHOT_ITERS': 2000,
           'SPATIAL_REG': False,
           'USE_FLIPPED': True,
           'WEAK_SUPERVISE': True,
           'WEAK_SUPERVISE_WITH_PRETRAIN': True},
 'VIS': False,
 'VIS_TH': 0.9}
loading annotations into memory...
Done (t=0.09s)
creating index...
index created!
INFO test_engine.py: 324: training mode? : False
INFO test_engine.py: 331: loading checkpoint Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step499.pth
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3715/4952 0.506s + 0.002s (eta: 0:10:27)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3725/4952 0.393s + 0.002s (eta: 0:08:03)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3735/4952 0.386s + 0.002s (eta: 0:07:52)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3745/4952 0.394s + 0.002s (eta: 0:07:56)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3755/4952 0.386s + 0.002s (eta: 0:07:43)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3765/4952 0.381s + 0.002s (eta: 0:07:34)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3775/4952 0.385s + 0.002s (eta: 0:07:34)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3785/4952 0.384s + 0.002s (eta: 0:07:29)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3795/4952 0.380s + 0.001s (eta: 0:07:21)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3805/4952 0.381s + 0.001s (eta: 0:07:18)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3815/4952 0.381s + 0.002s (eta: 0:07:15)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3825/4952 0.382s + 0.002s (eta: 0:07:11)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3835/4952 0.382s + 0.002s (eta: 0:07:08)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3845/4952 0.381s + 0.002s (eta: 0:07:04)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3855/4952 0.382s + 0.002s (eta: 0:07:00)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3865/4952 0.382s + 0.002s (eta: 0:06:57)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3875/4952 0.383s + 0.002s (eta: 0:06:53)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3885/4952 0.382s + 0.002s (eta: 0:06:49)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3895/4952 0.382s + 0.002s (eta: 0:06:45)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3905/4952 0.382s + 0.002s (eta: 0:06:41)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3915/4952 0.383s + 0.002s (eta: 0:06:38)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3925/4952 0.383s + 0.002s (eta: 0:06:34)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3935/4952 0.382s + 0.002s (eta: 0:06:30)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3945/4952 0.382s + 0.002s (eta: 0:06:26)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3955/4952 0.383s + 0.002s (eta: 0:06:23)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3965/4952 0.385s + 0.002s (eta: 0:06:21)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3975/4952 0.386s + 0.002s (eta: 0:06:18)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3985/4952 0.387s + 0.002s (eta: 0:06:15)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3995/4952 0.387s + 0.002s (eta: 0:06:11)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4005/4952 0.387s + 0.002s (eta: 0:06:08)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4015/4952 0.386s + 0.002s (eta: 0:06:03)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4025/4952 0.386s + 0.002s (eta: 0:05:59)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4035/4952 0.386s + 0.002s (eta: 0:05:55)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4045/4952 0.386s + 0.002s (eta: 0:05:51)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4055/4952 0.386s + 0.002s (eta: 0:05:47)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4065/4952 0.385s + 0.002s (eta: 0:05:42)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4075/4952 0.385s + 0.002s (eta: 0:05:39)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4085/4952 0.385s + 0.002s (eta: 0:05:35)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4095/4952 0.384s + 0.002s (eta: 0:05:30)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4105/4952 0.385s + 0.002s (eta: 0:05:27)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4115/4952 0.385s + 0.002s (eta: 0:05:23)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4125/4952 0.385s + 0.002s (eta: 0:05:19)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4135/4952 0.385s + 0.002s (eta: 0:05:16)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4145/4952 0.385s + 0.002s (eta: 0:05:11)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4155/4952 0.385s + 0.002s (eta: 0:05:08)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4165/4952 0.386s + 0.002s (eta: 0:05:05)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4175/4952 0.386s + 0.002s (eta: 0:05:01)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4185/4952 0.387s + 0.002s (eta: 0:04:57)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4195/4952 0.387s + 0.002s (eta: 0:04:54)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4205/4952 0.387s + 0.002s (eta: 0:04:50)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4215/4952 0.388s + 0.002s (eta: 0:04:46)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4225/4952 0.388s + 0.002s (eta: 0:04:42)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4235/4952 0.388s + 0.002s (eta: 0:04:39)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4245/4952 0.388s + 0.002s (eta: 0:04:35)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4255/4952 0.388s + 0.002s (eta: 0:04:31)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4265/4952 0.388s + 0.002s (eta: 0:04:27)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4275/4952 0.389s + 0.002s (eta: 0:04:24)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4285/4952 0.389s + 0.002s (eta: 0:04:20)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4295/4952 0.390s + 0.002s (eta: 0:04:16)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4305/4952 0.389s + 0.002s (eta: 0:04:12)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4315/4952 0.390s + 0.002s (eta: 0:04:09)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4325/4952 0.390s + 0.002s (eta: 0:04:05)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4335/4952 0.390s + 0.002s (eta: 0:04:01)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4345/4952 0.390s + 0.002s (eta: 0:03:57)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4355/4952 0.390s + 0.002s (eta: 0:03:53)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4365/4952 0.390s + 0.002s (eta: 0:03:49)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4375/4952 0.390s + 0.002s (eta: 0:03:45)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4385/4952 0.390s + 0.001s (eta: 0:03:41)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4395/4952 0.390s + 0.001s (eta: 0:03:37)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4405/4952 0.390s + 0.001s (eta: 0:03:33)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4415/4952 0.389s + 0.001s (eta: 0:03:29)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4425/4952 0.390s + 0.002s (eta: 0:03:26)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4435/4952 0.389s + 0.002s (eta: 0:03:22)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4445/4952 0.390s + 0.002s (eta: 0:03:18)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4455/4952 0.390s + 0.001s (eta: 0:03:14)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4465/4952 0.389s + 0.001s (eta: 0:03:10)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4475/4952 0.390s + 0.002s (eta: 0:03:06)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4485/4952 0.390s + 0.002s (eta: 0:03:02)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4495/4952 0.390s + 0.002s (eta: 0:02:58)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4505/4952 0.390s + 0.002s (eta: 0:02:55)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4515/4952 0.390s + 0.002s (eta: 0:02:51)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4525/4952 0.390s + 0.001s (eta: 0:02:47)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4535/4952 0.390s + 0.001s (eta: 0:02:43)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4545/4952 0.390s + 0.001s (eta: 0:02:39)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4555/4952 0.390s + 0.001s (eta: 0:02:35)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4565/4952 0.390s + 0.001s (eta: 0:02:31)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4575/4952 0.390s + 0.001s (eta: 0:02:27)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4585/4952 0.389s + 0.001s (eta: 0:02:23)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4595/4952 0.390s + 0.001s (eta: 0:02:19)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4605/4952 0.389s + 0.001s (eta: 0:02:15)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4615/4952 0.389s + 0.001s (eta: 0:02:11)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4625/4952 0.389s + 0.001s (eta: 0:02:07)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4635/4952 0.389s + 0.001s (eta: 0:02:03)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4645/4952 0.389s + 0.001s (eta: 0:01:59)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4655/4952 0.389s + 0.001s (eta: 0:01:56)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4665/4952 0.390s + 0.001s (eta: 0:01:52)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4675/4952 0.390s + 0.001s (eta: 0:01:48)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4685/4952 0.390s + 0.001s (eta: 0:01:44)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4695/4952 0.390s + 0.001s (eta: 0:01:40)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4705/4952 0.390s + 0.001s (eta: 0:01:36)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4715/4952 0.390s + 0.001s (eta: 0:01:32)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4725/4952 0.390s + 0.001s (eta: 0:01:28)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4735/4952 0.390s + 0.001s (eta: 0:01:24)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4745/4952 0.390s + 0.001s (eta: 0:01:21)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4755/4952 0.390s + 0.001s (eta: 0:01:17)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4765/4952 0.391s + 0.001s (eta: 0:01:13)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4775/4952 0.390s + 0.001s (eta: 0:01:09)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4785/4952 0.390s + 0.001s (eta: 0:01:05)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4795/4952 0.390s + 0.001s (eta: 0:01:01)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4805/4952 0.390s + 0.001s (eta: 0:00:57)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4815/4952 0.390s + 0.001s (eta: 0:00:53)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4825/4952 0.390s + 0.001s (eta: 0:00:49)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4835/4952 0.391s + 0.001s (eta: 0:00:45)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4845/4952 0.391s + 0.001s (eta: 0:00:41)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4855/4952 0.391s + 0.001s (eta: 0:00:38)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4865/4952 0.391s + 0.001s (eta: 0:00:34)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4875/4952 0.391s + 0.001s (eta: 0:00:30)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4885/4952 0.391s + 0.001s (eta: 0:00:26)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4895/4952 0.391s + 0.001s (eta: 0:00:22)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4905/4952 0.391s + 0.001s (eta: 0:00:18)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4915/4952 0.390s + 0.001s (eta: 0:00:14)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4925/4952 0.390s + 0.001s (eta: 0:00:10)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4935/4952 0.389s + 0.001s (eta: 0:00:06)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4945/4952 0.388s + 0.001s (eta: 0:00:02)
INFO test_engine.py: 314: Wrote detections to: /home/ubuntu/Detectron.pytorch/Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_3714_4952.pkl
/home/ubuntu/anaconda3/envs/pytorch41/lib/python3.7/site-packages/torch/nn/functional.py:1890: UserWarning: nn.functional.upsample is deprecated. Use nn.functional.interpolate instead.
  warnings.warn("nn.functional.upsample is deprecated. Use nn.functional.interpolate instead.")

INFO test_engine.py: 211: Wrote detections to: /home/ubuntu/Detectron.pytorch/Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detections.pkl
INFO test_engine.py: 161: Total inference time: 498.722s
INFO task_evaluation.py:  77: Evaluating detections
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: aeroplane
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: bicycle
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: bird
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: boat
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: bottle
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: bus
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: car
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: cat
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: chair
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: cow
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: diningtable
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: dog
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: horse
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: motorbike
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: person
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: pottedplant
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: sheep
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: sofa
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: train
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: tvmonitor
INFO voc_dataset_evaluator.py: 115: VOC07 metric? Yes
INFO voc_eval.py: 171: [1771 1722  257 ... 1395  811 1881]
INFO voc_dataset_evaluator.py: 127: AP for aeroplane = 0.7944
INFO voc_eval.py: 171: [ 278  434  892 ... 1219 1675   25]
INFO voc_dataset_evaluator.py: 127: AP for bicycle = 0.8077
INFO voc_eval.py: 171: [1193 1249 1960 ... 1686 2459  723]
INFO voc_dataset_evaluator.py: 127: AP for bird = 0.7548
INFO voc_eval.py: 171: [2110 2994  886 ... 1654 1357  708]
INFO voc_dataset_evaluator.py: 127: AP for boat = 0.6252
INFO voc_eval.py: 171: [1417 2700  953 ... 2227  669 1939]
INFO voc_dataset_evaluator.py: 127: AP for bottle = 0.6813
INFO voc_eval.py: 171: [1326  490  201 ...  482  324  316]
INFO voc_dataset_evaluator.py: 127: AP for bus = 0.7849
INFO voc_eval.py: 171: [3874 4407 4463 ... 3627 2138 3875]
INFO voc_dataset_evaluator.py: 127: AP for car = 0.8615
INFO voc_eval.py: 171: [1049  710  388 ... 1041 1396  338]
INFO voc_dataset_evaluator.py: 127: AP for cat = 0.8583
INFO voc_eval.py: 171: [ 182  181  508 ... 6405 6877 2327]
INFO voc_dataset_evaluator.py: 127: AP for chair = 0.6127
INFO voc_eval.py: 171: [1413  820  559 ...  300   24  939]
INFO voc_dataset_evaluator.py: 127: AP for cow = 0.7779
INFO voc_eval.py: 171: [1000 1356 2789 ...  823 1635  725]
INFO voc_dataset_evaluator.py: 127: AP for diningtable = 0.6431
INFO voc_eval.py: 171: [ 157 1558  621 ... 1964 1819 2329]
INFO voc_dataset_evaluator.py: 127: AP for dog = 0.8326
INFO voc_eval.py: 171: [  35  593  187 ...  129 1499  135]
INFO voc_dataset_evaluator.py: 127: AP for horse = 0.8244
INFO voc_eval.py: 171: [ 527 1717  301 ...  274 1040   83]
INFO voc_dataset_evaluator.py: 127: AP for motorbike = 0.7783
INFO voc_eval.py: 171: [24658 10720  7358 ... 22673  8320 14137]
INFO voc_dataset_evaluator.py: 127: AP for person = 0.8403
INFO voc_eval.py: 171: [ 673   30 2902 ... 1418  851 1072]
INFO voc_dataset_evaluator.py: 127: AP for pottedplant = 0.4755
INFO voc_eval.py: 171: [ 678  654   99 ... 1355 1573  530]
INFO voc_dataset_evaluator.py: 127: AP for sheep = 0.7760
INFO voc_eval.py: 171: [ 997 1494  370 ... 1098  679 1213]
INFO voc_dataset_evaluator.py: 127: AP for sofa = 0.7157
INFO voc_eval.py: 171: [ 224 1649   71 ...  772   21  707]
INFO voc_dataset_evaluator.py: 127: AP for train = 0.7763
INFO voc_eval.py: 171: [ 687  417 1025 ...  458  749 1006]
INFO voc_dataset_evaluator.py: 127: AP for tvmonitor = 0.7357
INFO voc_dataset_evaluator.py: 130: Mean AP = 0.7478
INFO voc_dataset_evaluator.py: 131: ~~~~~~~~
INFO voc_dataset_evaluator.py: 132: Results:
INFO voc_dataset_evaluator.py: 134: 0.794
INFO voc_dataset_evaluator.py: 134: 0.808
INFO voc_dataset_evaluator.py: 134: 0.755
INFO voc_dataset_evaluator.py: 134: 0.625
INFO voc_dataset_evaluator.py: 134: 0.681
INFO voc_dataset_evaluator.py: 134: 0.785
INFO voc_dataset_evaluator.py: 134: 0.861
INFO voc_dataset_evaluator.py: 134: 0.858
INFO voc_dataset_evaluator.py: 134: 0.613
INFO voc_dataset_evaluator.py: 134: 0.778
INFO voc_dataset_evaluator.py: 134: 0.643
INFO voc_dataset_evaluator.py: 134: 0.833
INFO voc_dataset_evaluator.py: 134: 0.824
INFO voc_dataset_evaluator.py: 134: 0.778
INFO voc_dataset_evaluator.py: 134: 0.840
INFO voc_dataset_evaluator.py: 134: 0.476
INFO voc_dataset_evaluator.py: 134: 0.776
INFO voc_dataset_evaluator.py: 134: 0.716
INFO voc_dataset_evaluator.py: 134: 0.776
INFO voc_dataset_evaluator.py: 134: 0.736
INFO voc_dataset_evaluator.py: 135: 0.748
INFO voc_dataset_evaluator.py: 136: ~~~~~~~~
INFO voc_dataset_evaluator.py: 137: 
INFO voc_dataset_evaluator.py: 138: ----------------------------------------------------------
INFO voc_dataset_evaluator.py: 139: Results computed with the **unofficial** Python eval code.
INFO voc_dataset_evaluator.py: 140: Results should be very close to the official MATLAB code.
INFO voc_dataset_evaluator.py: 141: Use `./tools/reval.py --matlab ...` for your paper.
INFO voc_dataset_evaluator.py: 142: -- Thanks, The Management
INFO voc_dataset_evaluator.py: 143: ----------------------------------------------------------
INFO task_evaluation.py:  63: Evaluating bounding boxes is done!
INFO task_evaluation.py: 189: copypaste: Dataset: voc_2007_test
INFO task_evaluation.py: 191: copypaste: Task: box
INFO task_evaluation.py: 194: copypaste: AP,AP50,AP75,APs,APm,APl
INFO task_evaluation.py: 195: copypaste: -1.0000,-1.0000,-1.0000,-1.0000,-1.0000,-1.0000
Start testing on iteration 999
INFO test_net.py:  72: Called with args:
INFO test_net.py:  73: Namespace(cfg_file='configs/dt/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv.yaml', dataset='voc2007', load_ckpt='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step999.pth', load_detectron=None, multi_gpu_testing=True, num_classes=None, output_dir=None, range=None, set_cfgs=[], vis=False)
INFO test_net.py:  83: Automatically set output directory to Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test
INFO test_net.py: 130: Testing with config:
INFO test_net.py: 131: {'BBOX_XFORM_CLIP': 4.135166556742356,
 'CROP_RESIZE_WITH_MAX_POOL': True,
 'CUDA': False,
 'DATA_DIR': '/home/ubuntu/Detectron.pytorch/data',
 'DATA_LOADER': {'NUM_THREADS': 4},
 'DEBUG': False,
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXPECTED_RESULTS': [],
 'EXPECTED_RESULTS_ATOL': 0.005,
 'EXPECTED_RESULTS_EMAIL': '',
 'EXPECTED_RESULTS_RTOL': 0.1,
 'FAST_RCNN': {'BOX_OUT_STREAMS': 1,
               'CONV_HEAD_DIM': 256,
               'MLP_HEAD_DIM': 1024,
               'NUM_STACKED_CONVS': 4,
               'ROI_BOX_HEAD': 'fast_rcnn_heads.roi_2mlp_head',
               'ROI_XFORM_METHOD': 'RoIAlign',
               'ROI_XFORM_RESOLUTION': 7,
               'ROI_XFORM_SAMPLING_RATIO': 2},
 'FPN': {'COARSEST_STRIDE': 32,
         'DIM': 256,
         'EXTRA_CONV_LEVELS': False,
         'FPN_ON': True,
         'MULTILEVEL_ROIS': True,
         'MULTILEVEL_RPN': True,
         'ROI_CANONICAL_LEVEL': 4,
         'ROI_CANONICAL_SCALE': 224,
         'ROI_MAX_LEVEL': 5,
         'ROI_MIN_LEVEL': 2,
         'RPN_ANCHOR_START_SIZE': 32,
         'RPN_ASPECT_RATIOS': (0.5, 1, 2),
         'RPN_COLLECT_SCALE': 1,
         'RPN_MAX_LEVEL': 6,
         'RPN_MIN_LEVEL': 2,
         'USE_GN': False,
         'ZERO_INIT_LATERAL': False},
 'GROUP_NORM': {'DIM_PER_GP': -1, 'EPSILON': 1e-05, 'NUM_GROUPS': 32},
 'KRCNN': {'CONV_HEAD_DIM': 256,
           'CONV_HEAD_KERNEL': 3,
           'CONV_INIT': 'GaussianFill',
           'DECONV_DIM': 256,
           'DECONV_KERNEL': 4,
           'DILATION': 1,
           'HEATMAP_SIZE': -1,
           'INFERENCE_MIN_SIZE': 0,
           'KEYPOINT_CONFIDENCE': 'bbox',
           'LOSS_WEIGHT': 1.0,
           'MIN_KEYPOINT_COUNT_FOR_VALID_MINIBATCH': 20,
           'NMS_OKS': False,
           'NORMALIZE_BY_VISIBLE_KEYPOINTS': True,
           'NUM_KEYPOINTS': -1,
           'NUM_STACKED_CONVS': 8,
           'ROI_KEYPOINTS_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'UP_SCALE': -1,
           'USE_DECONV': False,
           'USE_DECONV_OUTPUT': False},
 'MATLAB': 'matlab',
 'MODEL': {'BBOX_REG_WEIGHTS': (10.0, 10.0, 5.0, 5.0),
           'CLS_AGNOSTIC_BBOX_REG': False,
           'CONV_BODY': 'FPN.fpn_ResNet101_conv5_body',
           'FASTER_RCNN': True,
           'KEYPOINTS_ON': False,
           'LOAD_IMAGENET_PRETRAINED_WEIGHTS': True,
           'MASK_ON': False,
           'NUM_CLASSES': 21,
           'RPN_ONLY': False,
           'SHARE_RES5': False,
           'TYPE': 'generalized_rcnn',
           'UNSUPERVISED_POSE': False},
 'MRCNN': {'CLS_SPECIFIC_MASK': True,
           'CONV_INIT': 'GaussianFill',
           'DILATION': 2,
           'DIM_REDUCED': 256,
           'MEMORY_EFFICIENT_LOSS': True,
           'RESOLUTION': 14,
           'ROI_MASK_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'THRESH_BINARIZE': 0.5,
           'UPSAMPLE_RATIO': 1,
           'USE_FC_OUTPUT': False,
           'WEIGHT_LOSS_MASK': 1.0},
 'NUM_GPUS': 8,
 'OUTPUT_DIR': 'Outputs',
 'PIXEL_MEANS': array([[[102.9801, 115.9465, 122.7717]]]),
 'POOLING_MODE': 'crop',
 'POOLING_SIZE': 7,
 'PYTORCH_VERSION_LESS_THAN_040': False,
 'RESNETS': {'FREEZE_AT': 2,
             'IMAGENET_PRETRAINED_WEIGHTS': 'data/pretrained_model/resnet101_caffe.pth',
             'NUM_GROUPS': 1,
             'RES5_DILATION': 1,
             'SHORTCUT_FUNC': 'basic_bn_shortcut',
             'STEM_FUNC': 'basic_bn_stem',
             'STRIDE_1X1': True,
             'TRANS_FUNC': 'bottleneck_transformation',
             'USE_GN': False,
             'WIDTH_PER_GROUP': 64},
 'RETINANET': {'ANCHOR_SCALE': 4,
               'ASPECT_RATIOS': (0.5, 1.0, 2.0),
               'BBOX_REG_BETA': 0.11,
               'BBOX_REG_WEIGHT': 1.0,
               'CLASS_SPECIFIC_BBOX': False,
               'INFERENCE_TH': 0.05,
               'LOSS_ALPHA': 0.25,
               'LOSS_GAMMA': 2.0,
               'NEGATIVE_OVERLAP': 0.4,
               'NUM_CONVS': 4,
               'POSITIVE_OVERLAP': 0.5,
               'PRE_NMS_TOP_N': 1000,
               'PRIOR_PROB': 0.01,
               'RETINANET_ON': False,
               'SCALES_PER_OCTAVE': 3,
               'SHARE_CLS_BBOX_TOWER': False,
               'SOFTMAX': False},
 'RFCN': {'PS_GRID_SIZE': 3},
 'RNG_SEED': 3,
 'ROOT_DIR': '/home/ubuntu/Detectron.pytorch',
 'RPN': {'ASPECT_RATIOS': (0.5, 1, 2),
         'CLS_ACTIVATION': 'sigmoid',
         'OUT_DIM': 512,
         'OUT_DIM_AS_IN_DIM': True,
         'RPN_ON': True,
         'SIZES': (64, 128, 256, 512),
         'STRIDE': 16},
 'SOLVER': {'BASE_LR': 2e-05,
            'BIAS_DOUBLE_LR': True,
            'BIAS_WEIGHT_DECAY': False,
            'GAMMA': 0.1,
            'LOG_LR_CHANGE_THRESHOLD': 1.1,
            'LRS': [],
            'LR_POLICY': 'steps_with_decay',
            'MAX_ITER': 10000,
            'MOMENTUM': 0.9,
            'SCALE_MOMENTUM': True,
            'SCALE_MOMENTUM_THRESHOLD': 1.1,
            'STEPS': [0, 5000, 8000],
            'STEP_SIZE': 30000,
            'TYPE': 'SGD',
            'WARM_UP_FACTOR': 0.3333333333333333,
            'WARM_UP_ITERS': 500,
            'WARM_UP_METHOD': 'linear',
            'WEIGHT_DECAY': 0.0001,
            'WEIGHT_DECAY_GN': 0.0},
 'TEST': {'BBOX_AUG': {'AREA_TH_HI': 32400,
                       'AREA_TH_LO': 2500,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'COORD_HEUR': 'UNION',
                       'ENABLED': False,
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False,
                       'SCORE_HEUR': 'UNION'},
          'BBOX_REG': True,
          'BBOX_VOTE': {'ENABLED': False,
                        'SCORING_METHOD': 'ID',
                        'SCORING_METHOD_BETA': 1.0,
                        'VOTE_TH': 0.8},
          'COMPETITION_MODE': True,
          'DATASETS': ('voc_2007_test',),
          'DETECTIONS_PER_IM': 100,
          'FORCE_JSON_DATASET_EVAL': False,
          'KPS_AUG': {'AREA_TH': 32400,
                      'ASPECT_RATIOS': (),
                      'ASPECT_RATIO_H_FLIP': False,
                      'ENABLED': False,
                      'HEUR': 'HM_AVG',
                      'H_FLIP': False,
                      'MAX_SIZE': 4000,
                      'SCALES': (),
                      'SCALE_H_FLIP': False,
                      'SCALE_SIZE_DEP': False},
          'MASK_AUG': {'AREA_TH': 32400,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'ENABLED': False,
                       'HEUR': 'SOFT_AVG',
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False},
          'MAX_SIZE': 1000,
          'NMS': 0.5,
          'PRECOMPUTED_PROPOSALS': False,
          'PROPOSAL_FILES': (),
          'PROPOSAL_LIMIT': 2000,
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 1000,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALE': 600,
          'SCORE_THRESH': 0.05,
          'SOFT_NMS': {'ENABLED': False, 'METHOD': 'linear', 'SIGMA': 0.5},
          'WEAK_SUPERVISE': False},
 'TRAIN': {'ASPECT_CROPPING': False,
           'ASPECT_GROUPING': True,
           'ASPECT_HI': 2,
           'ASPECT_LO': 0.5,
           'BATCH_SIZE_PER_IM': 512,
           'BBOX_INSIDE_WEIGHTS': (1.0, 1.0, 1.0, 1.0),
           'BBOX_NORMALIZE_MEANS': (0.0, 0.0, 0.0, 0.0),
           'BBOX_NORMALIZE_STDS': (0.1, 0.1, 0.2, 0.2),
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'COPY_CLS_TO_DET': False,
           'CROWD_FILTER_THRESH': 0.7,
           'DATASETS': (),
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'FREEZE_BOX_HEAD': True,
           'FREEZE_CONV_BODY': False,
           'FREEZE_RPN': False,
           'GT_MIN_AREA': -1,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_FILES': (),
           'RPN_BATCH_SIZE_PER_IM': 256,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 2000,
           'RPN_STRADDLE_THRESH': 0,
           'SCALES': (600,),
           'SNAPSHOT_ITERS': 2000,
           'SPATIAL_REG': False,
           'USE_FLIPPED': True,
           'WEAK_SUPERVISE': True,
           'WEAK_SUPERVISE_WITH_PRETRAIN': True},
 'VIS': False,
 'VIS_TH': 0.9}
loading annotations into memory...
Done (t=0.11s)
creating index...
index created!
INFO subprocess.py:  59: 0,1,2,3
INFO subprocess.py:  67: gpu_inds: [0, 1, 2, 3]
INFO subprocess.py:  89: detection range command 0: python /home/ubuntu/Detectron.pytorch/tools/test_net.py --range 0 1238 --cfg Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_config.yaml --set TEST.DATASETS '("voc_2007_test",)' --output_dir Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test --load_ckpt Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step999.pth
INFO subprocess.py:  89: detection range command 1: python /home/ubuntu/Detectron.pytorch/tools/test_net.py --range 1238 2476 --cfg Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_config.yaml --set TEST.DATASETS '("voc_2007_test",)' --output_dir Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test --load_ckpt Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step999.pth
INFO subprocess.py:  89: detection range command 2: python /home/ubuntu/Detectron.pytorch/tools/test_net.py --range 2476 3714 --cfg Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_config.yaml --set TEST.DATASETS '("voc_2007_test",)' --output_dir Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test --load_ckpt Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step999.pth
INFO subprocess.py:  89: detection range command 3: python /home/ubuntu/Detectron.pytorch/tools/test_net.py --range 3714 4952 --cfg Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_config.yaml --set TEST.DATASETS '("voc_2007_test",)' --output_dir Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test --load_ckpt Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step999.pth
INFO subprocess.py: 129: # ---------------------------------------------------------------------------- #
INFO subprocess.py: 131: stdout of subprocess 0 with range [1, 1238]
INFO subprocess.py: 133: # ---------------------------------------------------------------------------- #
INFO test_net.py:  72: Called with args:
INFO test_net.py:  73: Namespace(cfg_file='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_config.yaml', dataset=None, load_ckpt='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step999.pth', load_detectron=None, multi_gpu_testing=False, num_classes=None, output_dir='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test', range=[0, 1238], set_cfgs=['TEST.DATASETS', '("voc_2007_test",)'], vis=False)
INFO test_net.py: 130: Testing with config:
INFO test_net.py: 131: {'BBOX_XFORM_CLIP': 4.135166556742356,
 'CROP_RESIZE_WITH_MAX_POOL': True,
 'CUDA': False,
 'DATA_DIR': '/home/ubuntu/Detectron.pytorch/data',
 'DATA_LOADER': {'NUM_THREADS': 4},
 'DEBUG': False,
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXPECTED_RESULTS': [],
 'EXPECTED_RESULTS_ATOL': 0.005,
 'EXPECTED_RESULTS_EMAIL': '',
 'EXPECTED_RESULTS_RTOL': 0.1,
 'FAST_RCNN': {'BOX_OUT_STREAMS': 1,
               'CONV_HEAD_DIM': 256,
               'MLP_HEAD_DIM': 1024,
               'NUM_STACKED_CONVS': 4,
               'ROI_BOX_HEAD': 'fast_rcnn_heads.roi_2mlp_head',
               'ROI_XFORM_METHOD': 'RoIAlign',
               'ROI_XFORM_RESOLUTION': 7,
               'ROI_XFORM_SAMPLING_RATIO': 2},
 'FPN': {'COARSEST_STRIDE': 32,
         'DIM': 256,
         'EXTRA_CONV_LEVELS': False,
         'FPN_ON': True,
         'MULTILEVEL_ROIS': True,
         'MULTILEVEL_RPN': True,
         'ROI_CANONICAL_LEVEL': 4,
         'ROI_CANONICAL_SCALE': 224,
         'ROI_MAX_LEVEL': 5,
         'ROI_MIN_LEVEL': 2,
         'RPN_ANCHOR_START_SIZE': 32,
         'RPN_ASPECT_RATIOS': (0.5, 1, 2),
         'RPN_COLLECT_SCALE': 1,
         'RPN_MAX_LEVEL': 6,
         'RPN_MIN_LEVEL': 2,
         'USE_GN': False,
         'ZERO_INIT_LATERAL': False},
 'GROUP_NORM': {'DIM_PER_GP': -1, 'EPSILON': 1e-05, 'NUM_GROUPS': 32},
 'KRCNN': {'CONV_HEAD_DIM': 256,
           'CONV_HEAD_KERNEL': 3,
           'CONV_INIT': 'GaussianFill',
           'DECONV_DIM': 256,
           'DECONV_KERNEL': 4,
           'DILATION': 1,
           'HEATMAP_SIZE': -1,
           'INFERENCE_MIN_SIZE': 0,
           'KEYPOINT_CONFIDENCE': 'bbox',
           'LOSS_WEIGHT': 1.0,
           'MIN_KEYPOINT_COUNT_FOR_VALID_MINIBATCH': 20,
           'NMS_OKS': False,
           'NORMALIZE_BY_VISIBLE_KEYPOINTS': True,
           'NUM_KEYPOINTS': -1,
           'NUM_STACKED_CONVS': 8,
           'ROI_KEYPOINTS_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'UP_SCALE': -1,
           'USE_DECONV': False,
           'USE_DECONV_OUTPUT': False},
 'MATLAB': 'matlab',
 'MODEL': {'BBOX_REG_WEIGHTS': (10.0, 10.0, 5.0, 5.0),
           'CLS_AGNOSTIC_BBOX_REG': False,
           'CONV_BODY': 'FPN.fpn_ResNet101_conv5_body',
           'FASTER_RCNN': True,
           'KEYPOINTS_ON': False,
           'LOAD_IMAGENET_PRETRAINED_WEIGHTS': True,
           'MASK_ON': False,
           'NUM_CLASSES': 21,
           'RPN_ONLY': False,
           'SHARE_RES5': False,
           'TYPE': 'generalized_rcnn',
           'UNSUPERVISED_POSE': False},
 'MRCNN': {'CLS_SPECIFIC_MASK': True,
           'CONV_INIT': 'GaussianFill',
           'DILATION': 2,
           'DIM_REDUCED': 256,
           'MEMORY_EFFICIENT_LOSS': True,
           'RESOLUTION': 14,
           'ROI_MASK_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'THRESH_BINARIZE': 0.5,
           'UPSAMPLE_RATIO': 1,
           'USE_FC_OUTPUT': False,
           'WEIGHT_LOSS_MASK': 1.0},
 'NUM_GPUS': 8,
 'OUTPUT_DIR': 'Outputs',
 'PIXEL_MEANS': array([[[102.9801, 115.9465, 122.7717]]]),
 'POOLING_MODE': 'crop',
 'POOLING_SIZE': 7,
 'PYTORCH_VERSION_LESS_THAN_040': False,
 'RESNETS': {'FREEZE_AT': 2,
             'IMAGENET_PRETRAINED_WEIGHTS': 'data/pretrained_model/resnet101_caffe.pth',
             'NUM_GROUPS': 1,
             'RES5_DILATION': 1,
             'SHORTCUT_FUNC': 'basic_bn_shortcut',
             'STEM_FUNC': 'basic_bn_stem',
             'STRIDE_1X1': True,
             'TRANS_FUNC': 'bottleneck_transformation',
             'USE_GN': False,
             'WIDTH_PER_GROUP': 64},
 'RETINANET': {'ANCHOR_SCALE': 4,
               'ASPECT_RATIOS': (0.5, 1.0, 2.0),
               'BBOX_REG_BETA': 0.11,
               'BBOX_REG_WEIGHT': 1.0,
               'CLASS_SPECIFIC_BBOX': False,
               'INFERENCE_TH': 0.05,
               'LOSS_ALPHA': 0.25,
               'LOSS_GAMMA': 2.0,
               'NEGATIVE_OVERLAP': 0.4,
               'NUM_CONVS': 4,
               'POSITIVE_OVERLAP': 0.5,
               'PRE_NMS_TOP_N': 1000,
               'PRIOR_PROB': 0.01,
               'RETINANET_ON': False,
               'SCALES_PER_OCTAVE': 3,
               'SHARE_CLS_BBOX_TOWER': False,
               'SOFTMAX': False},
 'RFCN': {'PS_GRID_SIZE': 3},
 'RNG_SEED': 3,
 'ROOT_DIR': '/home/ubuntu/Detectron.pytorch',
 'RPN': {'ASPECT_RATIOS': (0.5, 1, 2),
         'CLS_ACTIVATION': 'sigmoid',
         'OUT_DIM': 512,
         'OUT_DIM_AS_IN_DIM': True,
         'RPN_ON': True,
         'SIZES': (64, 128, 256, 512),
         'STRIDE': 16},
 'SOLVER': {'BASE_LR': 2e-05,
            'BIAS_DOUBLE_LR': True,
            'BIAS_WEIGHT_DECAY': False,
            'GAMMA': 0.1,
            'LOG_LR_CHANGE_THRESHOLD': 1.1,
            'LRS': [],
            'LR_POLICY': 'steps_with_decay',
            'MAX_ITER': 10000,
            'MOMENTUM': 0.9,
            'SCALE_MOMENTUM': True,
            'SCALE_MOMENTUM_THRESHOLD': 1.1,
            'STEPS': [0, 5000, 8000],
            'STEP_SIZE': 30000,
            'TYPE': 'SGD',
            'WARM_UP_FACTOR': 0.3333333333333333,
            'WARM_UP_ITERS': 500,
            'WARM_UP_METHOD': 'linear',
            'WEIGHT_DECAY': 0.0001,
            'WEIGHT_DECAY_GN': 0.0},
 'TEST': {'BBOX_AUG': {'AREA_TH_HI': 32400,
                       'AREA_TH_LO': 2500,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'COORD_HEUR': 'UNION',
                       'ENABLED': False,
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False,
                       'SCORE_HEUR': 'UNION'},
          'BBOX_REG': True,
          'BBOX_VOTE': {'ENABLED': False,
                        'SCORING_METHOD': 'ID',
                        'SCORING_METHOD_BETA': 1.0,
                        'VOTE_TH': 0.8},
          'COMPETITION_MODE': True,
          'DATASETS': ('voc_2007_test',),
          'DETECTIONS_PER_IM': 100,
          'FORCE_JSON_DATASET_EVAL': False,
          'KPS_AUG': {'AREA_TH': 32400,
                      'ASPECT_RATIOS': (),
                      'ASPECT_RATIO_H_FLIP': False,
                      'ENABLED': False,
                      'HEUR': 'HM_AVG',
                      'H_FLIP': False,
                      'MAX_SIZE': 4000,
                      'SCALES': (),
                      'SCALE_H_FLIP': False,
                      'SCALE_SIZE_DEP': False},
          'MASK_AUG': {'AREA_TH': 32400,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'ENABLED': False,
                       'HEUR': 'SOFT_AVG',
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False},
          'MAX_SIZE': 1000,
          'NMS': 0.5,
          'PRECOMPUTED_PROPOSALS': False,
          'PROPOSAL_FILES': (),
          'PROPOSAL_LIMIT': 2000,
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 1000,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALE': 600,
          'SCORE_THRESH': 0.05,
          'SOFT_NMS': {'ENABLED': False, 'METHOD': 'linear', 'SIGMA': 0.5},
          'WEAK_SUPERVISE': False},
 'TRAIN': {'ASPECT_CROPPING': False,
           'ASPECT_GROUPING': True,
           'ASPECT_HI': 2,
           'ASPECT_LO': 0.5,
           'BATCH_SIZE_PER_IM': 512,
           'BBOX_INSIDE_WEIGHTS': (1.0, 1.0, 1.0, 1.0),
           'BBOX_NORMALIZE_MEANS': (0.0, 0.0, 0.0, 0.0),
           'BBOX_NORMALIZE_STDS': (0.1, 0.1, 0.2, 0.2),
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'COPY_CLS_TO_DET': False,
           'CROWD_FILTER_THRESH': 0.7,
           'DATASETS': (),
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'FREEZE_BOX_HEAD': True,
           'FREEZE_CONV_BODY': False,
           'FREEZE_RPN': False,
           'GT_MIN_AREA': -1,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_FILES': (),
           'RPN_BATCH_SIZE_PER_IM': 256,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 2000,
           'RPN_STRADDLE_THRESH': 0,
           'SCALES': (600,),
           'SNAPSHOT_ITERS': 2000,
           'SPATIAL_REG': False,
           'USE_FLIPPED': True,
           'WEAK_SUPERVISE': True,
           'WEAK_SUPERVISE_WITH_PRETRAIN': True},
 'VIS': False,
 'VIS_TH': 0.9}
loading annotations into memory...
Done (t=0.09s)
creating index...
index created!
INFO test_engine.py: 324: training mode? : False
INFO test_engine.py: 331: loading checkpoint Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step999.pth
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1/1238 0.580s + 0.001s (eta: 0:11:58)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 11/1238 0.431s + 0.002s (eta: 0:08:51)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 21/1238 0.424s + 0.001s (eta: 0:08:38)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 31/1238 0.407s + 0.001s (eta: 0:08:12)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 41/1238 0.404s + 0.001s (eta: 0:08:05)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 51/1238 0.401s + 0.001s (eta: 0:07:58)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 61/1238 0.399s + 0.001s (eta: 0:07:51)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 71/1238 0.397s + 0.001s (eta: 0:07:45)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 81/1238 0.397s + 0.001s (eta: 0:07:41)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 91/1238 0.398s + 0.001s (eta: 0:07:38)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 101/1238 0.398s + 0.001s (eta: 0:07:34)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 111/1238 0.396s + 0.001s (eta: 0:07:27)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 121/1238 0.394s + 0.001s (eta: 0:07:22)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 131/1238 0.394s + 0.001s (eta: 0:07:18)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 141/1238 0.395s + 0.001s (eta: 0:07:14)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 151/1238 0.396s + 0.001s (eta: 0:07:12)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 161/1238 0.395s + 0.001s (eta: 0:07:07)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 171/1238 0.396s + 0.001s (eta: 0:07:03)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 181/1238 0.397s + 0.001s (eta: 0:07:01)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 191/1238 0.396s + 0.001s (eta: 0:06:56)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 201/1238 0.396s + 0.001s (eta: 0:06:52)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 211/1238 0.397s + 0.001s (eta: 0:06:49)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 221/1238 0.397s + 0.001s (eta: 0:06:45)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 231/1238 0.398s + 0.001s (eta: 0:06:41)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 241/1238 0.397s + 0.001s (eta: 0:06:37)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 251/1238 0.397s + 0.001s (eta: 0:06:32)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 261/1238 0.396s + 0.001s (eta: 0:06:27)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 271/1238 0.394s + 0.001s (eta: 0:06:22)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 281/1238 0.394s + 0.001s (eta: 0:06:18)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 291/1238 0.394s + 0.001s (eta: 0:06:14)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 301/1238 0.393s + 0.001s (eta: 0:06:09)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 311/1238 0.393s + 0.001s (eta: 0:06:05)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 321/1238 0.393s + 0.001s (eta: 0:06:01)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 331/1238 0.392s + 0.001s (eta: 0:05:57)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 341/1238 0.393s + 0.001s (eta: 0:05:53)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 351/1238 0.392s + 0.001s (eta: 0:05:48)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 361/1238 0.392s + 0.001s (eta: 0:05:44)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 371/1238 0.391s + 0.001s (eta: 0:05:40)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 381/1238 0.391s + 0.001s (eta: 0:05:36)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 391/1238 0.391s + 0.001s (eta: 0:05:32)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 401/1238 0.391s + 0.001s (eta: 0:05:28)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 411/1238 0.391s + 0.001s (eta: 0:05:24)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 421/1238 0.391s + 0.001s (eta: 0:05:21)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 431/1238 0.391s + 0.001s (eta: 0:05:16)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 441/1238 0.391s + 0.001s (eta: 0:05:12)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 451/1238 0.391s + 0.001s (eta: 0:05:08)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 461/1238 0.391s + 0.001s (eta: 0:05:04)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 471/1238 0.391s + 0.001s (eta: 0:05:00)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 481/1238 0.391s + 0.001s (eta: 0:04:57)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 491/1238 0.394s + 0.001s (eta: 0:04:55)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 501/1238 0.396s + 0.001s (eta: 0:04:52)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 511/1238 0.398s + 0.001s (eta: 0:04:50)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 521/1238 0.400s + 0.001s (eta: 0:04:47)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 531/1238 0.402s + 0.001s (eta: 0:04:45)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 541/1238 0.403s + 0.002s (eta: 0:04:41)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 551/1238 0.405s + 0.002s (eta: 0:04:38)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 561/1238 0.406s + 0.002s (eta: 0:04:36)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 571/1238 0.408s + 0.002s (eta: 0:04:33)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 581/1238 0.409s + 0.002s (eta: 0:04:30)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 591/1238 0.411s + 0.002s (eta: 0:04:26)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 601/1238 0.412s + 0.002s (eta: 0:04:23)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 611/1238 0.414s + 0.002s (eta: 0:04:20)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 621/1238 0.415s + 0.002s (eta: 0:04:17)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 631/1238 0.416s + 0.002s (eta: 0:04:13)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 641/1238 0.417s + 0.002s (eta: 0:04:09)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 651/1238 0.419s + 0.002s (eta: 0:04:06)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 661/1238 0.420s + 0.002s (eta: 0:04:03)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 671/1238 0.422s + 0.002s (eta: 0:04:00)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 681/1238 0.423s + 0.002s (eta: 0:03:56)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 691/1238 0.424s + 0.002s (eta: 0:03:52)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 701/1238 0.425s + 0.002s (eta: 0:03:48)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 711/1238 0.426s + 0.002s (eta: 0:03:45)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 721/1238 0.426s + 0.002s (eta: 0:03:41)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 731/1238 0.427s + 0.002s (eta: 0:03:37)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 741/1238 0.428s + 0.002s (eta: 0:03:33)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 751/1238 0.430s + 0.002s (eta: 0:03:30)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 761/1238 0.431s + 0.002s (eta: 0:03:26)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 771/1238 0.432s + 0.002s (eta: 0:03:22)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 781/1238 0.433s + 0.002s (eta: 0:03:18)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 791/1238 0.433s + 0.002s (eta: 0:03:14)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 801/1238 0.434s + 0.002s (eta: 0:03:10)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 811/1238 0.435s + 0.002s (eta: 0:03:06)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 821/1238 0.435s + 0.002s (eta: 0:03:02)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 831/1238 0.436s + 0.002s (eta: 0:02:58)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 841/1238 0.437s + 0.002s (eta: 0:02:54)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 851/1238 0.437s + 0.002s (eta: 0:02:49)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 861/1238 0.438s + 0.002s (eta: 0:02:45)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 871/1238 0.439s + 0.002s (eta: 0:02:41)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 881/1238 0.440s + 0.002s (eta: 0:02:37)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 891/1238 0.440s + 0.002s (eta: 0:02:33)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 901/1238 0.441s + 0.002s (eta: 0:02:29)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 911/1238 0.442s + 0.002s (eta: 0:02:25)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 921/1238 0.443s + 0.002s (eta: 0:02:20)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 931/1238 0.443s + 0.002s (eta: 0:02:16)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 941/1238 0.443s + 0.002s (eta: 0:02:12)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 951/1238 0.443s + 0.002s (eta: 0:02:07)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 961/1238 0.444s + 0.002s (eta: 0:02:03)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 971/1238 0.445s + 0.002s (eta: 0:01:59)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 981/1238 0.445s + 0.002s (eta: 0:01:54)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 991/1238 0.446s + 0.002s (eta: 0:01:50)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1001/1238 0.446s + 0.002s (eta: 0:01:46)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1011/1238 0.447s + 0.002s (eta: 0:01:41)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1021/1238 0.448s + 0.002s (eta: 0:01:37)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1031/1238 0.448s + 0.002s (eta: 0:01:33)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1041/1238 0.449s + 0.002s (eta: 0:01:28)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1051/1238 0.450s + 0.002s (eta: 0:01:24)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1061/1238 0.450s + 0.002s (eta: 0:01:20)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1071/1238 0.450s + 0.002s (eta: 0:01:15)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1081/1238 0.451s + 0.002s (eta: 0:01:11)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1091/1238 0.451s + 0.002s (eta: 0:01:06)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1101/1238 0.451s + 0.002s (eta: 0:01:02)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1111/1238 0.452s + 0.002s (eta: 0:00:57)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1121/1238 0.452s + 0.002s (eta: 0:00:53)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1131/1238 0.452s + 0.002s (eta: 0:00:48)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1141/1238 0.452s + 0.002s (eta: 0:00:44)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1151/1238 0.452s + 0.002s (eta: 0:00:39)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1161/1238 0.453s + 0.002s (eta: 0:00:34)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1171/1238 0.453s + 0.002s (eta: 0:00:30)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1181/1238 0.454s + 0.002s (eta: 0:00:25)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1191/1238 0.454s + 0.002s (eta: 0:00:21)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1201/1238 0.455s + 0.002s (eta: 0:00:16)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1211/1238 0.455s + 0.002s (eta: 0:00:12)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1221/1238 0.455s + 0.002s (eta: 0:00:07)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1231/1238 0.455s + 0.002s (eta: 0:00:03)
INFO test_engine.py: 314: Wrote detections to: /home/ubuntu/Detectron.pytorch/Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_0_1238.pkl
/home/ubuntu/anaconda3/envs/pytorch41/lib/python3.7/site-packages/torch/nn/functional.py:1890: UserWarning: nn.functional.upsample is deprecated. Use nn.functional.interpolate instead.
  warnings.warn("nn.functional.upsample is deprecated. Use nn.functional.interpolate instead.")
INFO subprocess.py: 129: # ---------------------------------------------------------------------------- #
INFO subprocess.py: 131: stdout of subprocess 1 with range [1239, 2476]
INFO subprocess.py: 133: # ---------------------------------------------------------------------------- #
INFO test_net.py:  72: Called with args:
INFO test_net.py:  73: Namespace(cfg_file='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_config.yaml', dataset=None, load_ckpt='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step499.pth', load_detectron=None, multi_gpu_testing=False, num_classes=None, output_dir='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test', range=[1238, 2476], set_cfgs=['TEST.DATASETS', '("voc_2007_test",)'], vis=False)
INFO test_net.py: 130: Testing with config:
INFO test_net.py: 131: {'BBOX_XFORM_CLIP': 4.135166556742356,
 'CROP_RESIZE_WITH_MAX_POOL': True,
 'CUDA': False,
 'DATA_DIR': '/home/ubuntu/Detectron.pytorch/data',
 'DATA_LOADER': {'NUM_THREADS': 4},
 'DEBUG': False,
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXPECTED_RESULTS': [],
 'EXPECTED_RESULTS_ATOL': 0.005,
 'EXPECTED_RESULTS_EMAIL': '',
 'EXPECTED_RESULTS_RTOL': 0.1,
 'FAST_RCNN': {'BOX_OUT_STREAMS': 1,
               'CONV_HEAD_DIM': 256,
               'MLP_HEAD_DIM': 1024,
               'NUM_STACKED_CONVS': 4,
               'ROI_BOX_HEAD': 'fast_rcnn_heads.roi_2mlp_head',
               'ROI_XFORM_METHOD': 'RoIAlign',
               'ROI_XFORM_RESOLUTION': 7,
               'ROI_XFORM_SAMPLING_RATIO': 2},
 'FPN': {'COARSEST_STRIDE': 32,
         'DIM': 256,
         'EXTRA_CONV_LEVELS': False,
         'FPN_ON': True,
         'MULTILEVEL_ROIS': True,
         'MULTILEVEL_RPN': True,
         'ROI_CANONICAL_LEVEL': 4,
         'ROI_CANONICAL_SCALE': 224,
         'ROI_MAX_LEVEL': 5,
         'ROI_MIN_LEVEL': 2,
         'RPN_ANCHOR_START_SIZE': 32,
         'RPN_ASPECT_RATIOS': (0.5, 1, 2),
         'RPN_COLLECT_SCALE': 1,
         'RPN_MAX_LEVEL': 6,
         'RPN_MIN_LEVEL': 2,
         'USE_GN': False,
         'ZERO_INIT_LATERAL': False},
 'GROUP_NORM': {'DIM_PER_GP': -1, 'EPSILON': 1e-05, 'NUM_GROUPS': 32},
 'KRCNN': {'CONV_HEAD_DIM': 256,
           'CONV_HEAD_KERNEL': 3,
           'CONV_INIT': 'GaussianFill',
           'DECONV_DIM': 256,
           'DECONV_KERNEL': 4,
           'DILATION': 1,
           'HEATMAP_SIZE': -1,
           'INFERENCE_MIN_SIZE': 0,
           'KEYPOINT_CONFIDENCE': 'bbox',
           'LOSS_WEIGHT': 1.0,
           'MIN_KEYPOINT_COUNT_FOR_VALID_MINIBATCH': 20,
           'NMS_OKS': False,
           'NORMALIZE_BY_VISIBLE_KEYPOINTS': True,
           'NUM_KEYPOINTS': -1,
           'NUM_STACKED_CONVS': 8,
           'ROI_KEYPOINTS_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'UP_SCALE': -1,
           'USE_DECONV': False,
           'USE_DECONV_OUTPUT': False},
 'MATLAB': 'matlab',
 'MODEL': {'BBOX_REG_WEIGHTS': (10.0, 10.0, 5.0, 5.0),
           'CLS_AGNOSTIC_BBOX_REG': False,
           'CONV_BODY': 'FPN.fpn_ResNet101_conv5_body',
           'FASTER_RCNN': True,
           'KEYPOINTS_ON': False,
           'LOAD_IMAGENET_PRETRAINED_WEIGHTS': True,
           'MASK_ON': False,
           'NUM_CLASSES': 21,
           'RPN_ONLY': False,
           'SHARE_RES5': False,
           'TYPE': 'generalized_rcnn',
           'UNSUPERVISED_POSE': False},
 'MRCNN': {'CLS_SPECIFIC_MASK': True,
           'CONV_INIT': 'GaussianFill',
           'DILATION': 2,
           'DIM_REDUCED': 256,
           'MEMORY_EFFICIENT_LOSS': True,
           'RESOLUTION': 14,
           'ROI_MASK_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'THRESH_BINARIZE': 0.5,
           'UPSAMPLE_RATIO': 1,
           'USE_FC_OUTPUT': False,
           'WEIGHT_LOSS_MASK': 1.0},
 'NUM_GPUS': 8,
 'OUTPUT_DIR': 'Outputs',
 'PIXEL_MEANS': array([[[102.9801, 115.9465, 122.7717]]]),
 'POOLING_MODE': 'crop',
 'POOLING_SIZE': 7,
 'PYTORCH_VERSION_LESS_THAN_040': False,
 'RESNETS': {'FREEZE_AT': 2,
             'IMAGENET_PRETRAINED_WEIGHTS': 'data/pretrained_model/resnet101_caffe.pth',
             'NUM_GROUPS': 1,
             'RES5_DILATION': 1,
             'SHORTCUT_FUNC': 'basic_bn_shortcut',
             'STEM_FUNC': 'basic_bn_stem',
             'STRIDE_1X1': True,
             'TRANS_FUNC': 'bottleneck_transformation',
             'USE_GN': False,
             'WIDTH_PER_GROUP': 64},
 'RETINANET': {'ANCHOR_SCALE': 4,
               'ASPECT_RATIOS': (0.5, 1.0, 2.0),
               'BBOX_REG_BETA': 0.11,
               'BBOX_REG_WEIGHT': 1.0,
               'CLASS_SPECIFIC_BBOX': False,
               'INFERENCE_TH': 0.05,
               'LOSS_ALPHA': 0.25,
               'LOSS_GAMMA': 2.0,
               'NEGATIVE_OVERLAP': 0.4,
               'NUM_CONVS': 4,
               'POSITIVE_OVERLAP': 0.5,
               'PRE_NMS_TOP_N': 1000,
               'PRIOR_PROB': 0.01,
               'RETINANET_ON': False,
               'SCALES_PER_OCTAVE': 3,
               'SHARE_CLS_BBOX_TOWER': False,
               'SOFTMAX': False},
 'RFCN': {'PS_GRID_SIZE': 3},
 'RNG_SEED': 3,
 'ROOT_DIR': '/home/ubuntu/Detectron.pytorch',
 'RPN': {'ASPECT_RATIOS': (0.5, 1, 2),
         'CLS_ACTIVATION': 'sigmoid',
         'OUT_DIM': 512,
         'OUT_DIM_AS_IN_DIM': True,
         'RPN_ON': True,
         'SIZES': (64, 128, 256, 512),
         'STRIDE': 16},
 'SOLVER': {'BASE_LR': 2e-05,
            'BIAS_DOUBLE_LR': True,
            'BIAS_WEIGHT_DECAY': False,
            'GAMMA': 0.1,
            'LOG_LR_CHANGE_THRESHOLD': 1.1,
            'LRS': [],
            'LR_POLICY': 'steps_with_decay',
            'MAX_ITER': 10000,
            'MOMENTUM': 0.9,
            'SCALE_MOMENTUM': True,
            'SCALE_MOMENTUM_THRESHOLD': 1.1,
            'STEPS': [0, 5000, 8000],
            'STEP_SIZE': 30000,
            'TYPE': 'SGD',
            'WARM_UP_FACTOR': 0.3333333333333333,
            'WARM_UP_ITERS': 500,
            'WARM_UP_METHOD': 'linear',
            'WEIGHT_DECAY': 0.0001,
            'WEIGHT_DECAY_GN': 0.0},
 'TEST': {'BBOX_AUG': {'AREA_TH_HI': 32400,
                       'AREA_TH_LO': 2500,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'COORD_HEUR': 'UNION',
                       'ENABLED': False,
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False,
                       'SCORE_HEUR': 'UNION'},
          'BBOX_REG': True,
          'BBOX_VOTE': {'ENABLED': False,
                        'SCORING_METHOD': 'ID',
                        'SCORING_METHOD_BETA': 1.0,
                        'VOTE_TH': 0.8},
          'COMPETITION_MODE': True,
          'DATASETS': ('voc_2007_test',),
          'DETECTIONS_PER_IM': 100,
          'FORCE_JSON_DATASET_EVAL': False,
          'KPS_AUG': {'AREA_TH': 32400,
                      'ASPECT_RATIOS': (),
                      'ASPECT_RATIO_H_FLIP': False,
                      'ENABLED': False,
                      'HEUR': 'HM_AVG',
                      'H_FLIP': False,
                      'MAX_SIZE': 4000,
                      'SCALES': (),
                      'SCALE_H_FLIP': False,
                      'SCALE_SIZE_DEP': False},
          'MASK_AUG': {'AREA_TH': 32400,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'ENABLED': False,
                       'HEUR': 'SOFT_AVG',
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False},
          'MAX_SIZE': 1000,
          'NMS': 0.5,
          'PRECOMPUTED_PROPOSALS': False,
          'PROPOSAL_FILES': (),
          'PROPOSAL_LIMIT': 2000,
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 1000,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALE': 600,
          'SCORE_THRESH': 0.05,
          'SOFT_NMS': {'ENABLED': False, 'METHOD': 'linear', 'SIGMA': 0.5},
          'WEAK_SUPERVISE': False},
 'TRAIN': {'ASPECT_CROPPING': False,
           'ASPECT_GROUPING': True,
           'ASPECT_HI': 2,
           'ASPECT_LO': 0.5,
           'BATCH_SIZE_PER_IM': 512,
           'BBOX_INSIDE_WEIGHTS': (1.0, 1.0, 1.0, 1.0),
           'BBOX_NORMALIZE_MEANS': (0.0, 0.0, 0.0, 0.0),
           'BBOX_NORMALIZE_STDS': (0.1, 0.1, 0.2, 0.2),
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'COPY_CLS_TO_DET': False,
           'CROWD_FILTER_THRESH': 0.7,
           'DATASETS': (),
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'FREEZE_BOX_HEAD': True,
           'FREEZE_CONV_BODY': False,
           'FREEZE_RPN': False,
           'GT_MIN_AREA': -1,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_FILES': (),
           'RPN_BATCH_SIZE_PER_IM': 256,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 2000,
           'RPN_STRADDLE_THRESH': 0,
           'SCALES': (600,),
           'SNAPSHOT_ITERS': 2000,
           'SPATIAL_REG': False,
           'USE_FLIPPED': True,
           'WEAK_SUPERVISE': True,
           'WEAK_SUPERVISE_WITH_PRETRAIN': True},
 'VIS': False,
 'VIS_TH': 0.9}
loading annotations into memory...
Done (t=0.14s)
creating index...
index created!
INFO test_engine.py: 324: training mode? : False
INFO test_engine.py: 331: loading checkpoint Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step499.pth
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1239/2476 0.625s + 0.001s (eta: 0:12:54)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1249/2476 0.508s + 0.002s (eta: 0:10:26)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1259/2476 0.496s + 0.002s (eta: 0:10:06)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1269/2476 0.508s + 0.002s (eta: 0:10:14)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1279/2476 0.497s + 0.002s (eta: 0:09:56)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1289/2476 0.505s + 0.002s (eta: 0:10:01)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1299/2476 0.505s + 0.002s (eta: 0:09:57)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1309/2476 0.510s + 0.002s (eta: 0:09:58)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1319/2476 0.507s + 0.002s (eta: 0:09:49)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1329/2476 0.511s + 0.002s (eta: 0:09:48)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1339/2476 0.505s + 0.002s (eta: 0:09:36)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1349/2476 0.511s + 0.002s (eta: 0:09:38)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1359/2476 0.511s + 0.002s (eta: 0:09:32)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1369/2476 0.511s + 0.002s (eta: 0:09:28)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1379/2476 0.513s + 0.002s (eta: 0:09:25)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1389/2476 0.516s + 0.002s (eta: 0:09:23)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1399/2476 0.517s + 0.002s (eta: 0:09:18)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1409/2476 0.514s + 0.002s (eta: 0:09:11)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1419/2476 0.512s + 0.002s (eta: 0:09:03)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1429/2476 0.513s + 0.002s (eta: 0:08:59)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1439/2476 0.511s + 0.002s (eta: 0:08:51)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1449/2476 0.510s + 0.002s (eta: 0:08:45)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1459/2476 0.511s + 0.002s (eta: 0:08:41)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1469/2476 0.513s + 0.002s (eta: 0:08:38)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1479/2476 0.513s + 0.002s (eta: 0:08:33)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1489/2476 0.512s + 0.002s (eta: 0:08:27)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1499/2476 0.512s + 0.002s (eta: 0:08:22)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1509/2476 0.514s + 0.002s (eta: 0:08:18)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1519/2476 0.515s + 0.002s (eta: 0:08:14)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1529/2476 0.513s + 0.002s (eta: 0:08:07)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1539/2476 0.511s + 0.002s (eta: 0:08:01)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1549/2476 0.511s + 0.002s (eta: 0:07:55)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1559/2476 0.511s + 0.002s (eta: 0:07:50)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1569/2476 0.511s + 0.002s (eta: 0:07:45)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1579/2476 0.510s + 0.002s (eta: 0:07:39)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1589/2476 0.510s + 0.002s (eta: 0:07:33)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1599/2476 0.511s + 0.002s (eta: 0:07:30)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1609/2476 0.513s + 0.002s (eta: 0:07:26)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1619/2476 0.512s + 0.002s (eta: 0:07:20)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1629/2476 0.513s + 0.002s (eta: 0:07:16)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1639/2476 0.514s + 0.002s (eta: 0:07:11)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1649/2476 0.515s + 0.002s (eta: 0:07:07)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1659/2476 0.515s + 0.002s (eta: 0:07:02)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1669/2476 0.515s + 0.002s (eta: 0:06:57)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1679/2476 0.514s + 0.002s (eta: 0:06:51)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1689/2476 0.514s + 0.002s (eta: 0:06:46)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1699/2476 0.515s + 0.002s (eta: 0:06:41)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1709/2476 0.514s + 0.002s (eta: 0:06:35)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1719/2476 0.515s + 0.002s (eta: 0:06:31)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1729/2476 0.514s + 0.002s (eta: 0:06:25)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1739/2476 0.514s + 0.002s (eta: 0:06:20)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1749/2476 0.514s + 0.002s (eta: 0:06:15)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1759/2476 0.514s + 0.002s (eta: 0:06:09)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1769/2476 0.514s + 0.002s (eta: 0:06:05)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1779/2476 0.514s + 0.002s (eta: 0:05:59)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1789/2476 0.514s + 0.002s (eta: 0:05:54)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1799/2476 0.514s + 0.002s (eta: 0:05:49)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1809/2476 0.514s + 0.002s (eta: 0:05:44)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1819/2476 0.514s + 0.002s (eta: 0:05:38)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1829/2476 0.514s + 0.002s (eta: 0:05:33)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1839/2476 0.514s + 0.002s (eta: 0:05:28)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1849/2476 0.515s + 0.002s (eta: 0:05:24)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1859/2476 0.515s + 0.002s (eta: 0:05:18)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1869/2476 0.515s + 0.002s (eta: 0:05:13)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1879/2476 0.515s + 0.002s (eta: 0:05:08)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1889/2476 0.515s + 0.002s (eta: 0:05:03)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1899/2476 0.516s + 0.002s (eta: 0:04:58)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1909/2476 0.516s + 0.002s (eta: 0:04:53)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1919/2476 0.516s + 0.002s (eta: 0:04:48)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1929/2476 0.516s + 0.002s (eta: 0:04:43)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1939/2476 0.516s + 0.002s (eta: 0:04:38)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1949/2476 0.516s + 0.002s (eta: 0:04:32)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1959/2476 0.515s + 0.002s (eta: 0:04:27)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1969/2476 0.515s + 0.002s (eta: 0:04:22)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1979/2476 0.423s + 0.002s (eta: 0:03:31)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1989/2476 0.424s + 0.002s (eta: 0:03:27)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1999/2476 0.425s + 0.002s (eta: 0:03:23)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2009/2476 0.425s + 0.002s (eta: 0:03:19)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2019/2476 0.427s + 0.002s (eta: 0:03:15)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2029/2476 0.428s + 0.002s (eta: 0:03:12)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2039/2476 0.428s + 0.002s (eta: 0:03:08)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2049/2476 0.429s + 0.002s (eta: 0:03:03)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2059/2476 0.429s + 0.002s (eta: 0:02:59)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2069/2476 0.431s + 0.002s (eta: 0:02:55)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2079/2476 0.432s + 0.002s (eta: 0:02:52)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2089/2476 0.432s + 0.002s (eta: 0:02:48)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2099/2476 0.433s + 0.002s (eta: 0:02:44)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2109/2476 0.435s + 0.002s (eta: 0:02:40)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2119/2476 0.435s + 0.002s (eta: 0:02:36)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2129/2476 0.436s + 0.002s (eta: 0:02:31)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2139/2476 0.436s + 0.002s (eta: 0:02:27)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2149/2476 0.437s + 0.002s (eta: 0:02:23)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2159/2476 0.437s + 0.002s (eta: 0:02:19)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2169/2476 0.438s + 0.002s (eta: 0:02:15)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2179/2476 0.439s + 0.002s (eta: 0:02:10)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2189/2476 0.440s + 0.002s (eta: 0:02:06)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2199/2476 0.440s + 0.002s (eta: 0:02:02)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2209/2476 0.441s + 0.002s (eta: 0:01:58)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2219/2476 0.441s + 0.002s (eta: 0:01:53)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2229/2476 0.442s + 0.002s (eta: 0:01:49)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2239/2476 0.443s + 0.002s (eta: 0:01:45)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2249/2476 0.443s + 0.002s (eta: 0:01:40)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2259/2476 0.444s + 0.002s (eta: 0:01:36)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2269/2476 0.444s + 0.002s (eta: 0:01:32)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2279/2476 0.445s + 0.002s (eta: 0:01:27)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2289/2476 0.445s + 0.002s (eta: 0:01:23)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2299/2476 0.445s + 0.002s (eta: 0:01:19)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2309/2476 0.446s + 0.002s (eta: 0:01:14)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2319/2476 0.447s + 0.002s (eta: 0:01:10)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2329/2476 0.447s + 0.002s (eta: 0:01:06)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2339/2476 0.448s + 0.002s (eta: 0:01:01)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2349/2476 0.448s + 0.002s (eta: 0:00:57)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2359/2476 0.449s + 0.002s (eta: 0:00:52)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2369/2476 0.449s + 0.002s (eta: 0:00:48)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2379/2476 0.449s + 0.002s (eta: 0:00:43)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2389/2476 0.449s + 0.002s (eta: 0:00:39)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2399/2476 0.449s + 0.002s (eta: 0:00:34)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2409/2476 0.449s + 0.002s (eta: 0:00:30)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2419/2476 0.450s + 0.002s (eta: 0:00:25)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2429/2476 0.449s + 0.002s (eta: 0:00:21)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2439/2476 0.449s + 0.002s (eta: 0:00:16)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2449/2476 0.450s + 0.002s (eta: 0:00:12)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2459/2476 0.450s + 0.002s (eta: 0:00:07)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2469/2476 0.451s + 0.002s (eta: 0:00:03)
INFO test_engine.py: 314: Wrote detections to: /home/ubuntu/Detectron.pytorch/Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_1238_2476.pkl
/home/ubuntu/anaconda3/envs/pytorch41/lib/python3.7/site-packages/torch/nn/functional.py:1890: UserWarning: nn.functional.upsample is deprecated. Use nn.functional.interpolate instead.
  warnings.warn("nn.functional.upsample is deprecated. Use nn.functional.interpolate instead.")

INFO subprocess.py: 129: # ---------------------------------------------------------------------------- #
INFO subprocess.py: 131: stdout of subprocess 2 with range [2477, 3714]
INFO subprocess.py: 133: # ---------------------------------------------------------------------------- #
INFO test_net.py:  72: Called with args:
INFO test_net.py:  73: Namespace(cfg_file='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_config.yaml', dataset=None, load_ckpt='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step499.pth', load_detectron=None, multi_gpu_testing=False, num_classes=None, output_dir='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test', range=[2476, 3714], set_cfgs=['TEST.DATASETS', '("voc_2007_test",)'], vis=False)
INFO test_net.py: 130: Testing with config:
INFO test_net.py: 131: {'BBOX_XFORM_CLIP': 4.135166556742356,
 'CROP_RESIZE_WITH_MAX_POOL': True,
 'CUDA': False,
 'DATA_DIR': '/home/ubuntu/Detectron.pytorch/data',
 'DATA_LOADER': {'NUM_THREADS': 4},
 'DEBUG': False,
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXPECTED_RESULTS': [],
 'EXPECTED_RESULTS_ATOL': 0.005,
 'EXPECTED_RESULTS_EMAIL': '',
 'EXPECTED_RESULTS_RTOL': 0.1,
 'FAST_RCNN': {'BOX_OUT_STREAMS': 1,
               'CONV_HEAD_DIM': 256,
               'MLP_HEAD_DIM': 1024,
               'NUM_STACKED_CONVS': 4,
               'ROI_BOX_HEAD': 'fast_rcnn_heads.roi_2mlp_head',
               'ROI_XFORM_METHOD': 'RoIAlign',
               'ROI_XFORM_RESOLUTION': 7,
               'ROI_XFORM_SAMPLING_RATIO': 2},
 'FPN': {'COARSEST_STRIDE': 32,
         'DIM': 256,
         'EXTRA_CONV_LEVELS': False,
         'FPN_ON': True,
         'MULTILEVEL_ROIS': True,
         'MULTILEVEL_RPN': True,
         'ROI_CANONICAL_LEVEL': 4,
         'ROI_CANONICAL_SCALE': 224,
         'ROI_MAX_LEVEL': 5,
         'ROI_MIN_LEVEL': 2,
         'RPN_ANCHOR_START_SIZE': 32,
         'RPN_ASPECT_RATIOS': (0.5, 1, 2),
         'RPN_COLLECT_SCALE': 1,
         'RPN_MAX_LEVEL': 6,
         'RPN_MIN_LEVEL': 2,
         'USE_GN': False,
         'ZERO_INIT_LATERAL': False},
 'GROUP_NORM': {'DIM_PER_GP': -1, 'EPSILON': 1e-05, 'NUM_GROUPS': 32},
 'KRCNN': {'CONV_HEAD_DIM': 256,
           'CONV_HEAD_KERNEL': 3,
           'CONV_INIT': 'GaussianFill',
           'DECONV_DIM': 256,
           'DECONV_KERNEL': 4,
           'DILATION': 1,
           'HEATMAP_SIZE': -1,
           'INFERENCE_MIN_SIZE': 0,
           'KEYPOINT_CONFIDENCE': 'bbox',
           'LOSS_WEIGHT': 1.0,
           'MIN_KEYPOINT_COUNT_FOR_VALID_MINIBATCH': 20,
           'NMS_OKS': False,
           'NORMALIZE_BY_VISIBLE_KEYPOINTS': True,
           'NUM_KEYPOINTS': -1,
           'NUM_STACKED_CONVS': 8,
           'ROI_KEYPOINTS_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'UP_SCALE': -1,
           'USE_DECONV': False,
           'USE_DECONV_OUTPUT': False},
 'MATLAB': 'matlab',
 'MODEL': {'BBOX_REG_WEIGHTS': (10.0, 10.0, 5.0, 5.0),
           'CLS_AGNOSTIC_BBOX_REG': False,
           'CONV_BODY': 'FPN.fpn_ResNet101_conv5_body',
           'FASTER_RCNN': True,
           'KEYPOINTS_ON': False,
           'LOAD_IMAGENET_PRETRAINED_WEIGHTS': True,
           'MASK_ON': False,
           'NUM_CLASSES': 21,
           'RPN_ONLY': False,
           'SHARE_RES5': False,
           'TYPE': 'generalized_rcnn',
           'UNSUPERVISED_POSE': False},
 'MRCNN': {'CLS_SPECIFIC_MASK': True,
           'CONV_INIT': 'GaussianFill',
           'DILATION': 2,
           'DIM_REDUCED': 256,
           'MEMORY_EFFICIENT_LOSS': True,
           'RESOLUTION': 14,
           'ROI_MASK_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'THRESH_BINARIZE': 0.5,
           'UPSAMPLE_RATIO': 1,
           'USE_FC_OUTPUT': False,
           'WEIGHT_LOSS_MASK': 1.0},
 'NUM_GPUS': 8,
 'OUTPUT_DIR': 'Outputs',
 'PIXEL_MEANS': array([[[102.9801, 115.9465, 122.7717]]]),
 'POOLING_MODE': 'crop',
 'POOLING_SIZE': 7,
 'PYTORCH_VERSION_LESS_THAN_040': False,
 'RESNETS': {'FREEZE_AT': 2,
             'IMAGENET_PRETRAINED_WEIGHTS': 'data/pretrained_model/resnet101_caffe.pth',
             'NUM_GROUPS': 1,
             'RES5_DILATION': 1,
             'SHORTCUT_FUNC': 'basic_bn_shortcut',
             'STEM_FUNC': 'basic_bn_stem',
             'STRIDE_1X1': True,
             'TRANS_FUNC': 'bottleneck_transformation',
             'USE_GN': False,
             'WIDTH_PER_GROUP': 64},
 'RETINANET': {'ANCHOR_SCALE': 4,
               'ASPECT_RATIOS': (0.5, 1.0, 2.0),
               'BBOX_REG_BETA': 0.11,
               'BBOX_REG_WEIGHT': 1.0,
               'CLASS_SPECIFIC_BBOX': False,
               'INFERENCE_TH': 0.05,
               'LOSS_ALPHA': 0.25,
               'LOSS_GAMMA': 2.0,
               'NEGATIVE_OVERLAP': 0.4,
               'NUM_CONVS': 4,
               'POSITIVE_OVERLAP': 0.5,
               'PRE_NMS_TOP_N': 1000,
               'PRIOR_PROB': 0.01,
               'RETINANET_ON': False,
               'SCALES_PER_OCTAVE': 3,
               'SHARE_CLS_BBOX_TOWER': False,
               'SOFTMAX': False},
 'RFCN': {'PS_GRID_SIZE': 3},
 'RNG_SEED': 3,
 'ROOT_DIR': '/home/ubuntu/Detectron.pytorch',
 'RPN': {'ASPECT_RATIOS': (0.5, 1, 2),
         'CLS_ACTIVATION': 'sigmoid',
         'OUT_DIM': 512,
         'OUT_DIM_AS_IN_DIM': True,
         'RPN_ON': True,
         'SIZES': (64, 128, 256, 512),
         'STRIDE': 16},
 'SOLVER': {'BASE_LR': 2e-05,
            'BIAS_DOUBLE_LR': True,
            'BIAS_WEIGHT_DECAY': False,
            'GAMMA': 0.1,
            'LOG_LR_CHANGE_THRESHOLD': 1.1,
            'LRS': [],
            'LR_POLICY': 'steps_with_decay',
            'MAX_ITER': 10000,
            'MOMENTUM': 0.9,
            'SCALE_MOMENTUM': True,
            'SCALE_MOMENTUM_THRESHOLD': 1.1,
            'STEPS': [0, 5000, 8000],
            'STEP_SIZE': 30000,
            'TYPE': 'SGD',
            'WARM_UP_FACTOR': 0.3333333333333333,
            'WARM_UP_ITERS': 500,
            'WARM_UP_METHOD': 'linear',
            'WEIGHT_DECAY': 0.0001,
            'WEIGHT_DECAY_GN': 0.0},
 'TEST': {'BBOX_AUG': {'AREA_TH_HI': 32400,
                       'AREA_TH_LO': 2500,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'COORD_HEUR': 'UNION',
                       'ENABLED': False,
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False,
                       'SCORE_HEUR': 'UNION'},
          'BBOX_REG': True,
          'BBOX_VOTE': {'ENABLED': False,
                        'SCORING_METHOD': 'ID',
                        'SCORING_METHOD_BETA': 1.0,
                        'VOTE_TH': 0.8},
          'COMPETITION_MODE': True,
          'DATASETS': ('voc_2007_test',),
          'DETECTIONS_PER_IM': 100,
          'FORCE_JSON_DATASET_EVAL': False,
          'KPS_AUG': {'AREA_TH': 32400,
                      'ASPECT_RATIOS': (),
                      'ASPECT_RATIO_H_FLIP': False,
                      'ENABLED': False,
                      'HEUR': 'HM_AVG',
                      'H_FLIP': False,
                      'MAX_SIZE': 4000,
                      'SCALES': (),
                      'SCALE_H_FLIP': False,
                      'SCALE_SIZE_DEP': False},
          'MASK_AUG': {'AREA_TH': 32400,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'ENABLED': False,
                       'HEUR': 'SOFT_AVG',
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False},
          'MAX_SIZE': 1000,
          'NMS': 0.5,
          'PRECOMPUTED_PROPOSALS': False,
          'PROPOSAL_FILES': (),
          'PROPOSAL_LIMIT': 2000,
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 1000,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALE': 600,
          'SCORE_THRESH': 0.05,
          'SOFT_NMS': {'ENABLED': False, 'METHOD': 'linear', 'SIGMA': 0.5},
          'WEAK_SUPERVISE': False},
 'TRAIN': {'ASPECT_CROPPING': False,
           'ASPECT_GROUPING': True,
           'ASPECT_HI': 2,
           'ASPECT_LO': 0.5,
           'BATCH_SIZE_PER_IM': 512,
           'BBOX_INSIDE_WEIGHTS': (1.0, 1.0, 1.0, 1.0),
           'BBOX_NORMALIZE_MEANS': (0.0, 0.0, 0.0, 0.0),
           'BBOX_NORMALIZE_STDS': (0.1, 0.1, 0.2, 0.2),
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'COPY_CLS_TO_DET': False,
           'CROWD_FILTER_THRESH': 0.7,
           'DATASETS': (),
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'FREEZE_BOX_HEAD': True,
           'FREEZE_CONV_BODY': False,
           'FREEZE_RPN': False,
           'GT_MIN_AREA': -1,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_FILES': (),
           'RPN_BATCH_SIZE_PER_IM': 256,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 2000,
           'RPN_STRADDLE_THRESH': 0,
           'SCALES': (600,),
           'SNAPSHOT_ITERS': 2000,
           'SPATIAL_REG': False,
           'USE_FLIPPED': True,
           'WEAK_SUPERVISE': True,
           'WEAK_SUPERVISE_WITH_PRETRAIN': True},
 'VIS': False,
 'VIS_TH': 0.9}
loading annotations into memory...
Done (t=0.20s)
creating index...
index created!
INFO test_engine.py: 324: training mode? : False
INFO test_engine.py: 331: loading checkpoint Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step499.pth
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2477/3714 0.670s + 0.001s (eta: 0:13:49)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2487/3714 0.540s + 0.002s (eta: 0:11:05)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2497/3714 0.534s + 0.001s (eta: 0:10:51)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2507/3714 0.536s + 0.002s (eta: 0:10:49)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2517/3714 0.538s + 0.002s (eta: 0:10:45)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2527/3714 0.523s + 0.002s (eta: 0:10:23)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2537/3714 0.519s + 0.002s (eta: 0:10:13)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2547/3714 0.511s + 0.002s (eta: 0:09:59)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2557/3714 0.513s + 0.003s (eta: 0:09:57)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2567/3714 0.516s + 0.003s (eta: 0:09:54)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2577/3714 0.517s + 0.003s (eta: 0:09:50)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2587/3714 0.519s + 0.003s (eta: 0:09:47)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2597/3714 0.515s + 0.002s (eta: 0:09:37)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2607/3714 0.517s + 0.002s (eta: 0:09:34)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2617/3714 0.517s + 0.002s (eta: 0:09:29)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2627/3714 0.520s + 0.002s (eta: 0:09:27)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2637/3714 0.520s + 0.002s (eta: 0:09:23)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2647/3714 0.520s + 0.002s (eta: 0:09:17)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2657/3714 0.520s + 0.002s (eta: 0:09:12)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2667/3714 0.520s + 0.002s (eta: 0:09:07)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2677/3714 0.520s + 0.002s (eta: 0:09:01)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2687/3714 0.522s + 0.002s (eta: 0:08:58)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2697/3714 0.521s + 0.002s (eta: 0:08:52)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2707/3714 0.521s + 0.002s (eta: 0:08:46)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2717/3714 0.522s + 0.002s (eta: 0:08:42)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2727/3714 0.522s + 0.002s (eta: 0:08:37)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2737/3714 0.522s + 0.002s (eta: 0:08:31)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2747/3714 0.521s + 0.002s (eta: 0:08:25)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2757/3714 0.521s + 0.002s (eta: 0:08:20)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2767/3714 0.521s + 0.002s (eta: 0:08:14)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2777/3714 0.520s + 0.002s (eta: 0:08:08)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2787/3714 0.520s + 0.002s (eta: 0:08:03)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2797/3714 0.521s + 0.002s (eta: 0:07:59)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2807/3714 0.521s + 0.002s (eta: 0:07:53)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2817/3714 0.520s + 0.002s (eta: 0:07:48)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2827/3714 0.520s + 0.002s (eta: 0:07:42)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2837/3714 0.518s + 0.002s (eta: 0:07:36)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2847/3714 0.518s + 0.002s (eta: 0:07:30)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2857/3714 0.518s + 0.002s (eta: 0:07:25)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2867/3714 0.518s + 0.002s (eta: 0:07:20)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2877/3714 0.518s + 0.002s (eta: 0:07:15)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2887/3714 0.518s + 0.002s (eta: 0:07:09)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2897/3714 0.517s + 0.002s (eta: 0:07:04)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2907/3714 0.517s + 0.002s (eta: 0:06:59)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2917/3714 0.517s + 0.002s (eta: 0:06:53)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2927/3714 0.518s + 0.002s (eta: 0:06:49)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2937/3714 0.518s + 0.002s (eta: 0:06:43)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2947/3714 0.518s + 0.002s (eta: 0:06:39)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2957/3714 0.520s + 0.002s (eta: 0:06:34)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2967/3714 0.520s + 0.002s (eta: 0:06:30)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2977/3714 0.520s + 0.002s (eta: 0:06:24)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2987/3714 0.519s + 0.002s (eta: 0:06:18)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2997/3714 0.519s + 0.002s (eta: 0:06:13)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3007/3714 0.518s + 0.002s (eta: 0:06:07)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3017/3714 0.517s + 0.002s (eta: 0:06:02)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3027/3714 0.517s + 0.002s (eta: 0:05:56)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3037/3714 0.517s + 0.002s (eta: 0:05:51)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3047/3714 0.518s + 0.002s (eta: 0:05:46)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3057/3714 0.518s + 0.002s (eta: 0:05:41)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3067/3714 0.518s + 0.002s (eta: 0:05:36)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3077/3714 0.517s + 0.002s (eta: 0:05:30)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3087/3714 0.518s + 0.002s (eta: 0:05:25)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3097/3714 0.518s + 0.002s (eta: 0:05:21)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3107/3714 0.518s + 0.002s (eta: 0:05:15)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3117/3714 0.518s + 0.002s (eta: 0:05:10)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3127/3714 0.517s + 0.002s (eta: 0:05:04)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3137/3714 0.517s + 0.002s (eta: 0:04:59)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3147/3714 0.517s + 0.002s (eta: 0:04:54)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3157/3714 0.518s + 0.002s (eta: 0:04:49)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3167/3714 0.518s + 0.002s (eta: 0:04:44)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3177/3714 0.518s + 0.002s (eta: 0:04:39)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3187/3714 0.518s + 0.002s (eta: 0:04:34)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3197/3714 0.518s + 0.002s (eta: 0:04:28)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3207/3714 0.517s + 0.002s (eta: 0:04:23)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3217/3714 0.422s + 0.002s (eta: 0:03:30)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3227/3714 0.423s + 0.002s (eta: 0:03:26)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3237/3714 0.424s + 0.002s (eta: 0:03:23)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3247/3714 0.426s + 0.002s (eta: 0:03:19)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3257/3714 0.427s + 0.002s (eta: 0:03:15)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3267/3714 0.428s + 0.002s (eta: 0:03:12)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3277/3714 0.430s + 0.002s (eta: 0:03:08)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3287/3714 0.431s + 0.002s (eta: 0:03:04)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3297/3714 0.431s + 0.002s (eta: 0:03:00)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3307/3714 0.432s + 0.002s (eta: 0:02:56)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3317/3714 0.433s + 0.002s (eta: 0:02:52)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3327/3714 0.434s + 0.002s (eta: 0:02:48)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3337/3714 0.435s + 0.002s (eta: 0:02:44)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3347/3714 0.435s + 0.002s (eta: 0:02:40)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3357/3714 0.436s + 0.002s (eta: 0:02:36)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3367/3714 0.437s + 0.002s (eta: 0:02:32)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3377/3714 0.438s + 0.002s (eta: 0:02:28)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3387/3714 0.438s + 0.002s (eta: 0:02:23)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3397/3714 0.439s + 0.002s (eta: 0:02:19)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3407/3714 0.439s + 0.002s (eta: 0:02:15)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3417/3714 0.440s + 0.002s (eta: 0:02:11)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3427/3714 0.440s + 0.002s (eta: 0:02:06)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3437/3714 0.441s + 0.002s (eta: 0:02:02)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3447/3714 0.442s + 0.002s (eta: 0:01:58)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3457/3714 0.443s + 0.002s (eta: 0:01:54)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3467/3714 0.444s + 0.002s (eta: 0:01:50)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3477/3714 0.444s + 0.002s (eta: 0:01:45)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3487/3714 0.445s + 0.002s (eta: 0:01:41)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3497/3714 0.445s + 0.002s (eta: 0:01:36)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3507/3714 0.446s + 0.002s (eta: 0:01:32)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3517/3714 0.447s + 0.002s (eta: 0:01:28)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3527/3714 0.448s + 0.002s (eta: 0:01:24)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3537/3714 0.448s + 0.002s (eta: 0:01:19)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3547/3714 0.449s + 0.002s (eta: 0:01:15)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3557/3714 0.450s + 0.002s (eta: 0:01:10)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3567/3714 0.451s + 0.002s (eta: 0:01:06)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3577/3714 0.451s + 0.002s (eta: 0:01:01)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3587/3714 0.452s + 0.002s (eta: 0:00:57)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3597/3714 0.452s + 0.002s (eta: 0:00:53)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3607/3714 0.452s + 0.002s (eta: 0:00:48)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3617/3714 0.453s + 0.002s (eta: 0:00:44)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3627/3714 0.453s + 0.002s (eta: 0:00:39)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3637/3714 0.454s + 0.002s (eta: 0:00:35)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3647/3714 0.455s + 0.002s (eta: 0:00:30)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3657/3714 0.455s + 0.002s (eta: 0:00:26)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3667/3714 0.456s + 0.002s (eta: 0:00:21)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3677/3714 0.457s + 0.002s (eta: 0:00:16)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3687/3714 0.457s + 0.002s (eta: 0:00:12)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3697/3714 0.458s + 0.002s (eta: 0:00:07)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3707/3714 0.458s + 0.002s (eta: 0:00:03)
INFO test_engine.py: 314: Wrote detections to: /home/ubuntu/Detectron.pytorch/Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_2476_3714.pkl
/home/ubuntu/anaconda3/envs/pytorch41/lib/python3.7/site-packages/torch/nn/functional.py:1890: UserWarning: nn.functional.upsample is deprecated. Use nn.functional.interpolate instead.
  warnings.warn("nn.functional.upsample is deprecated. Use nn.functional.interpolate instead.")

INFO subprocess.py: 129: # ---------------------------------------------------------------------------- #
INFO subprocess.py: 131: stdout of subprocess 3 with range [3715, 4952]
INFO subprocess.py: 133: # ---------------------------------------------------------------------------- #
INFO test_net.py:  72: Called with args:
INFO test_net.py:  73: Namespace(cfg_file='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_config.yaml', dataset=None, load_ckpt='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step499.pth', load_detectron=None, multi_gpu_testing=False, num_classes=None, output_dir='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test', range=[3714, 4952], set_cfgs=['TEST.DATASETS', '("voc_2007_test",)'], vis=False)
INFO test_net.py: 130: Testing with config:
INFO test_net.py: 131: {'BBOX_XFORM_CLIP': 4.135166556742356,
 'CROP_RESIZE_WITH_MAX_POOL': True,
 'CUDA': False,
 'DATA_DIR': '/home/ubuntu/Detectron.pytorch/data',
 'DATA_LOADER': {'NUM_THREADS': 4},
 'DEBUG': False,
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXPECTED_RESULTS': [],
 'EXPECTED_RESULTS_ATOL': 0.005,
 'EXPECTED_RESULTS_EMAIL': '',
 'EXPECTED_RESULTS_RTOL': 0.1,
 'FAST_RCNN': {'BOX_OUT_STREAMS': 1,
               'CONV_HEAD_DIM': 256,
               'MLP_HEAD_DIM': 1024,
               'NUM_STACKED_CONVS': 4,
               'ROI_BOX_HEAD': 'fast_rcnn_heads.roi_2mlp_head',
               'ROI_XFORM_METHOD': 'RoIAlign',
               'ROI_XFORM_RESOLUTION': 7,
               'ROI_XFORM_SAMPLING_RATIO': 2},
 'FPN': {'COARSEST_STRIDE': 32,
         'DIM': 256,
         'EXTRA_CONV_LEVELS': False,
         'FPN_ON': True,
         'MULTILEVEL_ROIS': True,
         'MULTILEVEL_RPN': True,
         'ROI_CANONICAL_LEVEL': 4,
         'ROI_CANONICAL_SCALE': 224,
         'ROI_MAX_LEVEL': 5,
         'ROI_MIN_LEVEL': 2,
         'RPN_ANCHOR_START_SIZE': 32,
         'RPN_ASPECT_RATIOS': (0.5, 1, 2),
         'RPN_COLLECT_SCALE': 1,
         'RPN_MAX_LEVEL': 6,
         'RPN_MIN_LEVEL': 2,
         'USE_GN': False,
         'ZERO_INIT_LATERAL': False},
 'GROUP_NORM': {'DIM_PER_GP': -1, 'EPSILON': 1e-05, 'NUM_GROUPS': 32},
 'KRCNN': {'CONV_HEAD_DIM': 256,
           'CONV_HEAD_KERNEL': 3,
           'CONV_INIT': 'GaussianFill',
           'DECONV_DIM': 256,
           'DECONV_KERNEL': 4,
           'DILATION': 1,
           'HEATMAP_SIZE': -1,
           'INFERENCE_MIN_SIZE': 0,
           'KEYPOINT_CONFIDENCE': 'bbox',
           'LOSS_WEIGHT': 1.0,
           'MIN_KEYPOINT_COUNT_FOR_VALID_MINIBATCH': 20,
           'NMS_OKS': False,
           'NORMALIZE_BY_VISIBLE_KEYPOINTS': True,
           'NUM_KEYPOINTS': -1,
           'NUM_STACKED_CONVS': 8,
           'ROI_KEYPOINTS_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'UP_SCALE': -1,
           'USE_DECONV': False,
           'USE_DECONV_OUTPUT': False},
 'MATLAB': 'matlab',
 'MODEL': {'BBOX_REG_WEIGHTS': (10.0, 10.0, 5.0, 5.0),
           'CLS_AGNOSTIC_BBOX_REG': False,
           'CONV_BODY': 'FPN.fpn_ResNet101_conv5_body',
           'FASTER_RCNN': True,
           'KEYPOINTS_ON': False,
           'LOAD_IMAGENET_PRETRAINED_WEIGHTS': True,
           'MASK_ON': False,
           'NUM_CLASSES': 21,
           'RPN_ONLY': False,
           'SHARE_RES5': False,
           'TYPE': 'generalized_rcnn',
           'UNSUPERVISED_POSE': False},
 'MRCNN': {'CLS_SPECIFIC_MASK': True,
           'CONV_INIT': 'GaussianFill',
           'DILATION': 2,
           'DIM_REDUCED': 256,
           'MEMORY_EFFICIENT_LOSS': True,
           'RESOLUTION': 14,
           'ROI_MASK_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'THRESH_BINARIZE': 0.5,
           'UPSAMPLE_RATIO': 1,
           'USE_FC_OUTPUT': False,
           'WEIGHT_LOSS_MASK': 1.0},
 'NUM_GPUS': 8,
 'OUTPUT_DIR': 'Outputs',
 'PIXEL_MEANS': array([[[102.9801, 115.9465, 122.7717]]]),
 'POOLING_MODE': 'crop',
 'POOLING_SIZE': 7,
 'PYTORCH_VERSION_LESS_THAN_040': False,
 'RESNETS': {'FREEZE_AT': 2,
             'IMAGENET_PRETRAINED_WEIGHTS': 'data/pretrained_model/resnet101_caffe.pth',
             'NUM_GROUPS': 1,
             'RES5_DILATION': 1,
             'SHORTCUT_FUNC': 'basic_bn_shortcut',
             'STEM_FUNC': 'basic_bn_stem',
             'STRIDE_1X1': True,
             'TRANS_FUNC': 'bottleneck_transformation',
             'USE_GN': False,
             'WIDTH_PER_GROUP': 64},
 'RETINANET': {'ANCHOR_SCALE': 4,
               'ASPECT_RATIOS': (0.5, 1.0, 2.0),
               'BBOX_REG_BETA': 0.11,
               'BBOX_REG_WEIGHT': 1.0,
               'CLASS_SPECIFIC_BBOX': False,
               'INFERENCE_TH': 0.05,
               'LOSS_ALPHA': 0.25,
               'LOSS_GAMMA': 2.0,
               'NEGATIVE_OVERLAP': 0.4,
               'NUM_CONVS': 4,
               'POSITIVE_OVERLAP': 0.5,
               'PRE_NMS_TOP_N': 1000,
               'PRIOR_PROB': 0.01,
               'RETINANET_ON': False,
               'SCALES_PER_OCTAVE': 3,
               'SHARE_CLS_BBOX_TOWER': False,
               'SOFTMAX': False},
 'RFCN': {'PS_GRID_SIZE': 3},
 'RNG_SEED': 3,
 'ROOT_DIR': '/home/ubuntu/Detectron.pytorch',
 'RPN': {'ASPECT_RATIOS': (0.5, 1, 2),
         'CLS_ACTIVATION': 'sigmoid',
         'OUT_DIM': 512,
         'OUT_DIM_AS_IN_DIM': True,
         'RPN_ON': True,
         'SIZES': (64, 128, 256, 512),
         'STRIDE': 16},
 'SOLVER': {'BASE_LR': 2e-05,
            'BIAS_DOUBLE_LR': True,
            'BIAS_WEIGHT_DECAY': False,
            'GAMMA': 0.1,
            'LOG_LR_CHANGE_THRESHOLD': 1.1,
            'LRS': [],
            'LR_POLICY': 'steps_with_decay',
            'MAX_ITER': 10000,
            'MOMENTUM': 0.9,
            'SCALE_MOMENTUM': True,
            'SCALE_MOMENTUM_THRESHOLD': 1.1,
            'STEPS': [0, 5000, 8000],
            'STEP_SIZE': 30000,
            'TYPE': 'SGD',
            'WARM_UP_FACTOR': 0.3333333333333333,
            'WARM_UP_ITERS': 500,
            'WARM_UP_METHOD': 'linear',
            'WEIGHT_DECAY': 0.0001,
            'WEIGHT_DECAY_GN': 0.0},
 'TEST': {'BBOX_AUG': {'AREA_TH_HI': 32400,
                       'AREA_TH_LO': 2500,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'COORD_HEUR': 'UNION',
                       'ENABLED': False,
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False,
                       'SCORE_HEUR': 'UNION'},
          'BBOX_REG': True,
          'BBOX_VOTE': {'ENABLED': False,
                        'SCORING_METHOD': 'ID',
                        'SCORING_METHOD_BETA': 1.0,
                        'VOTE_TH': 0.8},
          'COMPETITION_MODE': True,
          'DATASETS': ('voc_2007_test',),
          'DETECTIONS_PER_IM': 100,
          'FORCE_JSON_DATASET_EVAL': False,
          'KPS_AUG': {'AREA_TH': 32400,
                      'ASPECT_RATIOS': (),
                      'ASPECT_RATIO_H_FLIP': False,
                      'ENABLED': False,
                      'HEUR': 'HM_AVG',
                      'H_FLIP': False,
                      'MAX_SIZE': 4000,
                      'SCALES': (),
                      'SCALE_H_FLIP': False,
                      'SCALE_SIZE_DEP': False},
          'MASK_AUG': {'AREA_TH': 32400,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'ENABLED': False,
                       'HEUR': 'SOFT_AVG',
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False},
          'MAX_SIZE': 1000,
          'NMS': 0.5,
          'PRECOMPUTED_PROPOSALS': False,
          'PROPOSAL_FILES': (),
          'PROPOSAL_LIMIT': 2000,
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 1000,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALE': 600,
          'SCORE_THRESH': 0.05,
          'SOFT_NMS': {'ENABLED': False, 'METHOD': 'linear', 'SIGMA': 0.5},
          'WEAK_SUPERVISE': False},
 'TRAIN': {'ASPECT_CROPPING': False,
           'ASPECT_GROUPING': True,
           'ASPECT_HI': 2,
           'ASPECT_LO': 0.5,
           'BATCH_SIZE_PER_IM': 512,
           'BBOX_INSIDE_WEIGHTS': (1.0, 1.0, 1.0, 1.0),
           'BBOX_NORMALIZE_MEANS': (0.0, 0.0, 0.0, 0.0),
           'BBOX_NORMALIZE_STDS': (0.1, 0.1, 0.2, 0.2),
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'COPY_CLS_TO_DET': False,
           'CROWD_FILTER_THRESH': 0.7,
           'DATASETS': (),
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'FREEZE_BOX_HEAD': True,
           'FREEZE_CONV_BODY': False,
           'FREEZE_RPN': False,
           'GT_MIN_AREA': -1,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_FILES': (),
           'RPN_BATCH_SIZE_PER_IM': 256,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 2000,
           'RPN_STRADDLE_THRESH': 0,
           'SCALES': (600,),
           'SNAPSHOT_ITERS': 2000,
           'SPATIAL_REG': False,
           'USE_FLIPPED': True,
           'WEAK_SUPERVISE': True,
           'WEAK_SUPERVISE_WITH_PRETRAIN': True},
 'VIS': False,
 'VIS_TH': 0.9}
loading annotations into memory...
Done (t=0.21s)
creating index...
index created!
INFO test_engine.py: 324: training mode? : False
INFO test_engine.py: 331: loading checkpoint Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step499.pth
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3715/4952 0.731s + 0.002s (eta: 0:15:05)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3725/4952 0.549s + 0.002s (eta: 0:11:16)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3735/4952 0.551s + 0.002s (eta: 0:11:12)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3745/4952 0.538s + 0.002s (eta: 0:10:51)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3755/4952 0.528s + 0.002s (eta: 0:10:34)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3765/4952 0.521s + 0.002s (eta: 0:10:20)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3775/4952 0.518s + 0.002s (eta: 0:10:11)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3785/4952 0.523s + 0.002s (eta: 0:10:11)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3795/4952 0.516s + 0.002s (eta: 0:09:59)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3805/4952 0.519s + 0.002s (eta: 0:09:57)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3815/4952 0.522s + 0.002s (eta: 0:09:55)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3825/4952 0.521s + 0.002s (eta: 0:09:48)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3835/4952 0.518s + 0.002s (eta: 0:09:40)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3845/4952 0.518s + 0.002s (eta: 0:09:35)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3855/4952 0.514s + 0.002s (eta: 0:09:25)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3865/4952 0.512s + 0.002s (eta: 0:09:18)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3875/4952 0.511s + 0.002s (eta: 0:09:12)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3885/4952 0.511s + 0.002s (eta: 0:09:07)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3895/4952 0.512s + 0.002s (eta: 0:09:02)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3905/4952 0.514s + 0.002s (eta: 0:09:00)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3915/4952 0.513s + 0.002s (eta: 0:08:53)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3925/4952 0.514s + 0.002s (eta: 0:08:49)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3935/4952 0.513s + 0.002s (eta: 0:08:43)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3945/4952 0.513s + 0.002s (eta: 0:08:38)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3955/4952 0.512s + 0.002s (eta: 0:08:31)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3965/4952 0.511s + 0.002s (eta: 0:08:26)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3975/4952 0.514s + 0.002s (eta: 0:08:23)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3985/4952 0.513s + 0.002s (eta: 0:08:18)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3995/4952 0.512s + 0.002s (eta: 0:08:11)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4005/4952 0.510s + 0.002s (eta: 0:08:05)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4015/4952 0.510s + 0.002s (eta: 0:08:00)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4025/4952 0.511s + 0.002s (eta: 0:07:55)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4035/4952 0.511s + 0.002s (eta: 0:07:50)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4045/4952 0.511s + 0.002s (eta: 0:07:45)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4055/4952 0.512s + 0.002s (eta: 0:07:41)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4065/4952 0.512s + 0.002s (eta: 0:07:35)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4075/4952 0.512s + 0.002s (eta: 0:07:31)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4085/4952 0.512s + 0.002s (eta: 0:07:25)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4095/4952 0.511s + 0.002s (eta: 0:07:19)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4105/4952 0.512s + 0.002s (eta: 0:07:15)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4115/4952 0.512s + 0.002s (eta: 0:07:09)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4125/4952 0.512s + 0.002s (eta: 0:07:04)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4135/4952 0.512s + 0.002s (eta: 0:06:59)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4145/4952 0.512s + 0.002s (eta: 0:06:54)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4155/4952 0.513s + 0.002s (eta: 0:06:50)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4165/4952 0.514s + 0.002s (eta: 0:06:46)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4175/4952 0.513s + 0.002s (eta: 0:06:40)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4185/4952 0.513s + 0.002s (eta: 0:06:34)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4195/4952 0.513s + 0.002s (eta: 0:06:29)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4205/4952 0.515s + 0.002s (eta: 0:06:25)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4215/4952 0.515s + 0.002s (eta: 0:06:21)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4225/4952 0.514s + 0.002s (eta: 0:06:15)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4235/4952 0.514s + 0.002s (eta: 0:06:09)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4245/4952 0.513s + 0.002s (eta: 0:06:04)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4255/4952 0.513s + 0.002s (eta: 0:05:59)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4265/4952 0.513s + 0.002s (eta: 0:05:53)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4275/4952 0.513s + 0.002s (eta: 0:05:48)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4285/4952 0.513s + 0.002s (eta: 0:05:43)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4295/4952 0.512s + 0.002s (eta: 0:05:37)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4305/4952 0.513s + 0.002s (eta: 0:05:33)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4315/4952 0.513s + 0.002s (eta: 0:05:27)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4325/4952 0.513s + 0.002s (eta: 0:05:22)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4335/4952 0.513s + 0.002s (eta: 0:05:17)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4345/4952 0.513s + 0.002s (eta: 0:05:12)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4355/4952 0.512s + 0.002s (eta: 0:05:07)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4365/4952 0.512s + 0.002s (eta: 0:05:02)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4375/4952 0.512s + 0.002s (eta: 0:04:56)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4385/4952 0.511s + 0.002s (eta: 0:04:51)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4395/4952 0.512s + 0.002s (eta: 0:04:46)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4405/4952 0.512s + 0.002s (eta: 0:04:41)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4415/4952 0.512s + 0.002s (eta: 0:04:35)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4425/4952 0.511s + 0.002s (eta: 0:04:30)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4435/4952 0.512s + 0.002s (eta: 0:04:25)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4445/4952 0.511s + 0.002s (eta: 0:04:20)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4455/4952 0.510s + 0.002s (eta: 0:04:14)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4465/4952 0.421s + 0.002s (eta: 0:03:25)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4475/4952 0.422s + 0.002s (eta: 0:03:22)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4485/4952 0.424s + 0.002s (eta: 0:03:18)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4495/4952 0.425s + 0.002s (eta: 0:03:14)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4505/4952 0.426s + 0.002s (eta: 0:03:10)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4515/4952 0.427s + 0.002s (eta: 0:03:07)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4525/4952 0.428s + 0.002s (eta: 0:03:03)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4535/4952 0.430s + 0.002s (eta: 0:02:59)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4545/4952 0.430s + 0.002s (eta: 0:02:55)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4555/4952 0.431s + 0.002s (eta: 0:02:51)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4565/4952 0.431s + 0.002s (eta: 0:02:47)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4575/4952 0.431s + 0.002s (eta: 0:02:43)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4585/4952 0.432s + 0.002s (eta: 0:02:39)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4595/4952 0.433s + 0.002s (eta: 0:02:35)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4605/4952 0.434s + 0.002s (eta: 0:02:31)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4615/4952 0.435s + 0.002s (eta: 0:02:27)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4625/4952 0.435s + 0.002s (eta: 0:02:22)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4635/4952 0.436s + 0.002s (eta: 0:02:18)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4645/4952 0.437s + 0.002s (eta: 0:02:14)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4655/4952 0.438s + 0.002s (eta: 0:02:10)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4665/4952 0.439s + 0.002s (eta: 0:02:06)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4675/4952 0.439s + 0.002s (eta: 0:02:02)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4685/4952 0.439s + 0.002s (eta: 0:01:57)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4695/4952 0.440s + 0.002s (eta: 0:01:53)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4705/4952 0.441s + 0.002s (eta: 0:01:49)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4715/4952 0.442s + 0.002s (eta: 0:01:45)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4725/4952 0.443s + 0.002s (eta: 0:01:40)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4735/4952 0.444s + 0.002s (eta: 0:01:36)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4745/4952 0.444s + 0.002s (eta: 0:01:32)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4755/4952 0.444s + 0.002s (eta: 0:01:27)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4765/4952 0.445s + 0.002s (eta: 0:01:23)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4775/4952 0.446s + 0.002s (eta: 0:01:19)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4785/4952 0.446s + 0.002s (eta: 0:01:14)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4795/4952 0.447s + 0.002s (eta: 0:01:10)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4805/4952 0.448s + 0.002s (eta: 0:01:06)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4815/4952 0.448s + 0.002s (eta: 0:01:01)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4825/4952 0.449s + 0.002s (eta: 0:00:57)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4835/4952 0.449s + 0.002s (eta: 0:00:52)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4845/4952 0.450s + 0.002s (eta: 0:00:48)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4855/4952 0.450s + 0.002s (eta: 0:00:43)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4865/4952 0.451s + 0.002s (eta: 0:00:39)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4875/4952 0.452s + 0.002s (eta: 0:00:34)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4885/4952 0.452s + 0.002s (eta: 0:00:30)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4895/4952 0.452s + 0.002s (eta: 0:00:25)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4905/4952 0.453s + 0.002s (eta: 0:00:21)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4915/4952 0.453s + 0.002s (eta: 0:00:16)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4925/4952 0.453s + 0.002s (eta: 0:00:12)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4935/4952 0.454s + 0.002s (eta: 0:00:07)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4945/4952 0.454s + 0.002s (eta: 0:00:03)
INFO test_engine.py: 314: Wrote detections to: /home/ubuntu/Detectron.pytorch/Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_3714_4952.pkl
/home/ubuntu/anaconda3/envs/pytorch41/lib/python3.7/site-packages/torch/nn/functional.py:1890: UserWarning: nn.functional.upsample is deprecated. Use nn.functional.interpolate instead.
  warnings.warn("nn.functional.upsample is deprecated. Use nn.functional.interpolate instead.")

INFO test_engine.py: 211: Wrote detections to: /home/ubuntu/Detectron.pytorch/Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detections.pkl
INFO test_engine.py: 161: Total inference time: 588.196s
INFO task_evaluation.py:  77: Evaluating detections
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: aeroplane
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: bicycle
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: bird
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: boat
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: bottle
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: bus
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: car
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: cat
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: chair
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: cow
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: diningtable
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: dog
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: horse
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: motorbike
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: person
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: pottedplant
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: sheep
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: sofa
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: train
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: tvmonitor
INFO voc_dataset_evaluator.py: 115: VOC07 metric? Yes
INFO voc_eval.py: 171: [1565 1514  931 ... 1541 1099 1544]
INFO voc_dataset_evaluator.py: 127: AP for aeroplane = 0.7756
INFO voc_eval.py: 171: [362 233 713 ...  41 563 197]
INFO voc_dataset_evaluator.py: 127: AP for bicycle = 0.7967
INFO voc_eval.py: 171: [1330 1730 2368 ... 2615 1634 2944]
INFO voc_dataset_evaluator.py: 127: AP for bird = 0.7730
INFO voc_eval.py: 171: [1853 2633   98 ...  668 2393 2340]
INFO voc_dataset_evaluator.py: 127: AP for boat = 0.6127
INFO voc_eval.py: 171: [1152 2210  757 ...  204  986 2758]
INFO voc_dataset_evaluator.py: 127: AP for bottle = 0.6780
INFO voc_eval.py: 171: [ 421 1138  175 ...  192  767  820]
INFO voc_dataset_evaluator.py: 127: AP for bus = 0.7780
INFO voc_eval.py: 171: [1347  248 5359 ... 3539  629 5723]
INFO voc_dataset_evaluator.py: 127: AP for car = 0.8563
INFO voc_eval.py: 171: [1012 1101  378 ... 1314  969  363]
INFO voc_dataset_evaluator.py: 127: AP for cat = 0.8606
INFO voc_eval.py: 171: [ 154  155 2577 ... 4381 2845 4580]
INFO voc_dataset_evaluator.py: 127: AP for chair = 0.6111
INFO voc_eval.py: 171: [1489  849  584 ... 1905 1122   70]
INFO voc_dataset_evaluator.py: 127: AP for cow = 0.7635
INFO voc_eval.py: 171: [1019 1393  613 ...  105  146 1447]
INFO voc_dataset_evaluator.py: 127: AP for diningtable = 0.6337
INFO voc_eval.py: 171: [ 150  576 1443 ... 2008 1341 1182]
INFO voc_dataset_evaluator.py: 127: AP for dog = 0.8283
INFO voc_eval.py: 171: [  37  184  581 ... 1113  780 1259]
INFO voc_dataset_evaluator.py: 127: AP for horse = 0.8126
INFO voc_eval.py: 171: [1326  401  261 ...  792 1330  263]
INFO voc_dataset_evaluator.py: 127: AP for motorbike = 0.7630
INFO voc_eval.py: 171: [12786 17682 22648 ... 17688  3218  3595]
INFO voc_dataset_evaluator.py: 127: AP for person = 0.8390
INFO voc_eval.py: 171: [ 539  300 2370 ... 2962  188 1847]
INFO voc_dataset_evaluator.py: 127: AP for pottedplant = 0.4543
INFO voc_eval.py: 171: [ 691  670  352 ... 2041 1156 2144]
INFO voc_dataset_evaluator.py: 127: AP for sheep = 0.7755
INFO voc_eval.py: 171: [ 849 1294 1010 ... 1250  641 1292]
INFO voc_dataset_evaluator.py: 127: AP for sofa = 0.7056
INFO voc_eval.py: 171: [ 208   37 1536 ...  229  319 1304]
INFO voc_dataset_evaluator.py: 127: AP for train = 0.7632
INFO voc_eval.py: 171: [524 316 693 348 499 777 794 265  68 115 205 462  28 658 109 282 916 521
 639 570 219 519 140 427 572 763 493 259 657 502 762  87 287 191 548 670
 624 299  49 328 529 387 842 258 184 416 114 180 307 875 938 550  43 857
 133 272  74 795 468 193 767 376 165 750 640 781 530 446 336  65 411 641
 596 919 166 803 375 139 294  24  86 560  85 162 448 503 811  99 860 100
 828 199 344 705 155 742 951 147 593 385   7 798 456 664 581  29 153 454
  23 788  12 758 450 321 341 888 853 890  53 869 504  47 701 594 731 597
 322 756 124 346  82   3 561 195 895 296   6 774 764 188 905 736 495 656
 156 213 145 891 352 880 127 537 727 630 152 505 354 546 776 494  98 567
 481 613 698 858 506 807 595 398 817 928 959 707 323 440 660 465 146 178
  73 353 956 549 768 110 402 231 787 939 326 930   2 600 906 250 471 908
 234 408 940 542 349 220 172 452 212 691 237  55 825 475  93 740 554 370
 479 222 686 429 791 708  70 514 618 645 679 868 783 216 958 709 568 474
 672 912 647 896 836 275 806 466 809 902  91  80 266 281 254 901 223 482
 305 841 391 404 617 960 377  90 426 362 488 128 564 350 164 557 815 818
 430  26 913 149 607 847 796 780 729 819 739 730 712 935 830 476 609 382
 812  41 650  75 540 497 167 926 922 228 604 320  32 394  42 104 261 168
 933 873 673 695 899  13 642 467 277 713 368 716 176 865 421 845 334 655
 357  39 531  96 138 224 954 749 177 221 381 397 111 383 161 616 121 603
 843 163 769 789 615 137 937 627 927 734 473 711 559 339 103 631  76 472
 126 490 824 872 489 298 194 512 945 116 170 644 953 117 917 399 925 225
 785 403 753 273 491 710  22 870 884  52 821 775 852 511 626 578 687 280
  56 728 921  69 726 859 669 610 606 189 434   5 239 134 251 721  38 181
 532 478 685 662 680 722 765 253 169 636 432 848 361 755 217 484 425 944
 424 388 308 635 941 900  36 154 700 816 793 135 278 844 378 569 854 866
  59 386 363 185 759 417 359 703 202 171  92 582 676 285 538 733 829 877
 470 389 108 507 574 227 393 897  10 390 255 580 862 525 799 268 745 527
 236 863 849 840  77 923 773 463 401  63 629 577 267 808 879  72 276 699
 396 500 142 148 157 311 209 447 243 477 611 628 801 461   8 400 196  50
 455 543 136  81 826 229 741 332  88 407 614 508 480 867 666 541 211 883
 823 717 302 688 312 179 233 551 583  62 283 464 215 760 918 443 300 351
 586 914 412  33  67 889 846 132 144 523 556  20  45 903 190 428 909 360
 515  57  30 263 410 704 621 724 436 364 246 547 579 486 637 943   0  44
 123 555 295 380 232  61 720 957 118  84 834 682 786 766  58 602 689 365
 638 715 886  79 218 324 837 692 915  37 934 355  18 318 314 605  94 358
 942 723 379 601  11 242 297 498 533 589 702 643 337 331 797 125 881 325
 782 513 313 444 625 653 406 208 838 158 827  25 327 706 633 374 264 459
 301 366 345 520  19 369 310 315 565 632 483 453 674 458 820 659  34 539
 333  21 433 894 874 249 778 235 839 608 439 599 932 279 761 192 441 893
 719 535 451 748 910 622 904   1 573 173 714 784 112 330 885 271 678 367
 738 457 871 920 718 771 392 620 517 553 592 563 304 449 143 160 861 214
 437 516 248 835 882 289 929 262 373 492 924 141 571 950  35  14 544 405
 757 948 952 634 675 822 648 665 864 274 598 955 309 102 423 612 122 746
 151 106  89 105 696  31 961 509 303 419 418 651 510 747 690 833 534 590
 663 588 445 683 911 661 576   4 260 772 684 585 238 107 667 652 371 201
 562 790  64 671 947 204 203 130 850 575 566 120 150 501 487 654 770 159
 619 290 187 198 206 395 129 340 356 887 257 804 526 422 697 558 813 435
 186 131 855 876  48  71  83 245 810 751  97 725 792 329 878 284 946 732
 288 409 754 694  78 677 113 197 270 800 306  16 752 907  95 292 805 831
 343 384 851 485 338   9 668 244 207 552 649 584 293 175 319 230 241 252
  54 814 438 936 545 587  15 735 335 460  66 317 744 269 496 536 898 892
 119 737 681 623 200  17 802 431  40 779 442 182 286 256 832 415  60 372
 420  27  51 342 247 291 240 210 743 347 226 949 183 856  46 414 469 101
 413 591 174 528 646 931 522 518]
INFO voc_dataset_evaluator.py: 127: AP for tvmonitor = 0.7254
INFO voc_dataset_evaluator.py: 130: Mean AP = 0.7403
INFO voc_dataset_evaluator.py: 131: ~~~~~~~~
INFO voc_dataset_evaluator.py: 132: Results:
INFO voc_dataset_evaluator.py: 134: 0.776
INFO voc_dataset_evaluator.py: 134: 0.797
INFO voc_dataset_evaluator.py: 134: 0.773
INFO voc_dataset_evaluator.py: 134: 0.613
INFO voc_dataset_evaluator.py: 134: 0.678
INFO voc_dataset_evaluator.py: 134: 0.778
INFO voc_dataset_evaluator.py: 134: 0.856
INFO voc_dataset_evaluator.py: 134: 0.861
INFO voc_dataset_evaluator.py: 134: 0.611
INFO voc_dataset_evaluator.py: 134: 0.764
INFO voc_dataset_evaluator.py: 134: 0.634
INFO voc_dataset_evaluator.py: 134: 0.828
INFO voc_dataset_evaluator.py: 134: 0.813
INFO voc_dataset_evaluator.py: 134: 0.763
INFO voc_dataset_evaluator.py: 134: 0.839
INFO voc_dataset_evaluator.py: 134: 0.454
INFO voc_dataset_evaluator.py: 134: 0.776
INFO voc_dataset_evaluator.py: 134: 0.706
INFO voc_dataset_evaluator.py: 134: 0.763
INFO voc_dataset_evaluator.py: 134: 0.725
INFO voc_dataset_evaluator.py: 135: 0.740
INFO voc_dataset_evaluator.py: 136: ~~~~~~~~
INFO voc_dataset_evaluator.py: 137: 
INFO voc_dataset_evaluator.py: 138: ----------------------------------------------------------
INFO voc_dataset_evaluator.py: 139: Results computed with the **unofficial** Python eval code.
INFO voc_dataset_evaluator.py: 140: Results should be very close to the official MATLAB code.
INFO voc_dataset_evaluator.py: 141: Use `./tools/reval.py --matlab ...` for your paper.
INFO voc_dataset_evaluator.py: 142: -- Thanks, The Management
INFO voc_dataset_evaluator.py: 143: ----------------------------------------------------------
INFO task_evaluation.py:  63: Evaluating bounding boxes is done!
INFO task_evaluation.py: 189: copypaste: Dataset: voc_2007_test
INFO task_evaluation.py: 191: copypaste: Task: box
INFO task_evaluation.py: 194: copypaste: AP,AP50,AP75,APs,APm,APl
INFO task_evaluation.py: 195: copypaste: -1.0000,-1.0000,-1.0000,-1.0000,-1.0000,-1.0000
Start testing on iteration 1499
INFO test_net.py:  72: Called with args:
INFO test_net.py:  73: Namespace(cfg_file='configs/dt/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv.yaml', dataset='voc2007', load_ckpt='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step1499.pth', load_detectron=None, multi_gpu_testing=True, num_classes=None, output_dir=None, range=None, set_cfgs=[], vis=False)
INFO test_net.py:  83: Automatically set output directory to Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test
INFO test_net.py: 130: Testing with config:
INFO test_net.py: 131: {'BBOX_XFORM_CLIP': 4.135166556742356,
 'CROP_RESIZE_WITH_MAX_POOL': True,
 'CUDA': False,
 'DATA_DIR': '/home/ubuntu/Detectron.pytorch/data',
 'DATA_LOADER': {'NUM_THREADS': 4},
 'DEBUG': False,
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXPECTED_RESULTS': [],
 'EXPECTED_RESULTS_ATOL': 0.005,
 'EXPECTED_RESULTS_EMAIL': '',
 'EXPECTED_RESULTS_RTOL': 0.1,
 'FAST_RCNN': {'BOX_OUT_STREAMS': 1,
               'CONV_HEAD_DIM': 256,
               'MLP_HEAD_DIM': 1024,
               'NUM_STACKED_CONVS': 4,
               'ROI_BOX_HEAD': 'fast_rcnn_heads.roi_2mlp_head',
               'ROI_XFORM_METHOD': 'RoIAlign',
               'ROI_XFORM_RESOLUTION': 7,
               'ROI_XFORM_SAMPLING_RATIO': 2},
 'FPN': {'COARSEST_STRIDE': 32,
         'DIM': 256,
         'EXTRA_CONV_LEVELS': False,
         'FPN_ON': True,
         'MULTILEVEL_ROIS': True,
         'MULTILEVEL_RPN': True,
         'ROI_CANONICAL_LEVEL': 4,
         'ROI_CANONICAL_SCALE': 224,
         'ROI_MAX_LEVEL': 5,
         'ROI_MIN_LEVEL': 2,
         'RPN_ANCHOR_START_SIZE': 32,
         'RPN_ASPECT_RATIOS': (0.5, 1, 2),
         'RPN_COLLECT_SCALE': 1,
         'RPN_MAX_LEVEL': 6,
         'RPN_MIN_LEVEL': 2,
         'USE_GN': False,
         'ZERO_INIT_LATERAL': False},
 'GROUP_NORM': {'DIM_PER_GP': -1, 'EPSILON': 1e-05, 'NUM_GROUPS': 32},
 'KRCNN': {'CONV_HEAD_DIM': 256,
           'CONV_HEAD_KERNEL': 3,
           'CONV_INIT': 'GaussianFill',
           'DECONV_DIM': 256,
           'DECONV_KERNEL': 4,
           'DILATION': 1,
           'HEATMAP_SIZE': -1,
           'INFERENCE_MIN_SIZE': 0,
           'KEYPOINT_CONFIDENCE': 'bbox',
           'LOSS_WEIGHT': 1.0,
           'MIN_KEYPOINT_COUNT_FOR_VALID_MINIBATCH': 20,
           'NMS_OKS': False,
           'NORMALIZE_BY_VISIBLE_KEYPOINTS': True,
           'NUM_KEYPOINTS': -1,
           'NUM_STACKED_CONVS': 8,
           'ROI_KEYPOINTS_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'UP_SCALE': -1,
           'USE_DECONV': False,
           'USE_DECONV_OUTPUT': False},
 'MATLAB': 'matlab',
 'MODEL': {'BBOX_REG_WEIGHTS': (10.0, 10.0, 5.0, 5.0),
           'CLS_AGNOSTIC_BBOX_REG': False,
           'CONV_BODY': 'FPN.fpn_ResNet101_conv5_body',
           'FASTER_RCNN': True,
           'KEYPOINTS_ON': False,
           'LOAD_IMAGENET_PRETRAINED_WEIGHTS': True,
           'MASK_ON': False,
           'NUM_CLASSES': 21,
           'RPN_ONLY': False,
           'SHARE_RES5': False,
           'TYPE': 'generalized_rcnn',
           'UNSUPERVISED_POSE': False},
 'MRCNN': {'CLS_SPECIFIC_MASK': True,
           'CONV_INIT': 'GaussianFill',
           'DILATION': 2,
           'DIM_REDUCED': 256,
           'MEMORY_EFFICIENT_LOSS': True,
           'RESOLUTION': 14,
           'ROI_MASK_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'THRESH_BINARIZE': 0.5,
           'UPSAMPLE_RATIO': 1,
           'USE_FC_OUTPUT': False,
           'WEIGHT_LOSS_MASK': 1.0},
 'NUM_GPUS': 8,
 'OUTPUT_DIR': 'Outputs',
 'PIXEL_MEANS': array([[[102.9801, 115.9465, 122.7717]]]),
 'POOLING_MODE': 'crop',
 'POOLING_SIZE': 7,
 'PYTORCH_VERSION_LESS_THAN_040': False,
 'RESNETS': {'FREEZE_AT': 2,
             'IMAGENET_PRETRAINED_WEIGHTS': 'data/pretrained_model/resnet101_caffe.pth',
             'NUM_GROUPS': 1,
             'RES5_DILATION': 1,
             'SHORTCUT_FUNC': 'basic_bn_shortcut',
             'STEM_FUNC': 'basic_bn_stem',
             'STRIDE_1X1': True,
             'TRANS_FUNC': 'bottleneck_transformation',
             'USE_GN': False,
             'WIDTH_PER_GROUP': 64},
 'RETINANET': {'ANCHOR_SCALE': 4,
               'ASPECT_RATIOS': (0.5, 1.0, 2.0),
               'BBOX_REG_BETA': 0.11,
               'BBOX_REG_WEIGHT': 1.0,
               'CLASS_SPECIFIC_BBOX': False,
               'INFERENCE_TH': 0.05,
               'LOSS_ALPHA': 0.25,
               'LOSS_GAMMA': 2.0,
               'NEGATIVE_OVERLAP': 0.4,
               'NUM_CONVS': 4,
               'POSITIVE_OVERLAP': 0.5,
               'PRE_NMS_TOP_N': 1000,
               'PRIOR_PROB': 0.01,
               'RETINANET_ON': False,
               'SCALES_PER_OCTAVE': 3,
               'SHARE_CLS_BBOX_TOWER': False,
               'SOFTMAX': False},
 'RFCN': {'PS_GRID_SIZE': 3},
 'RNG_SEED': 3,
 'ROOT_DIR': '/home/ubuntu/Detectron.pytorch',
 'RPN': {'ASPECT_RATIOS': (0.5, 1, 2),
         'CLS_ACTIVATION': 'sigmoid',
         'OUT_DIM': 512,
         'OUT_DIM_AS_IN_DIM': True,
         'RPN_ON': True,
         'SIZES': (64, 128, 256, 512),
         'STRIDE': 16},
 'SOLVER': {'BASE_LR': 2e-05,
            'BIAS_DOUBLE_LR': True,
            'BIAS_WEIGHT_DECAY': False,
            'GAMMA': 0.1,
            'LOG_LR_CHANGE_THRESHOLD': 1.1,
            'LRS': [],
            'LR_POLICY': 'steps_with_decay',
            'MAX_ITER': 10000,
            'MOMENTUM': 0.9,
            'SCALE_MOMENTUM': True,
            'SCALE_MOMENTUM_THRESHOLD': 1.1,
            'STEPS': [0, 5000, 8000],
            'STEP_SIZE': 30000,
            'TYPE': 'SGD',
            'WARM_UP_FACTOR': 0.3333333333333333,
            'WARM_UP_ITERS': 500,
            'WARM_UP_METHOD': 'linear',
            'WEIGHT_DECAY': 0.0001,
            'WEIGHT_DECAY_GN': 0.0},
 'TEST': {'BBOX_AUG': {'AREA_TH_HI': 32400,
                       'AREA_TH_LO': 2500,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'COORD_HEUR': 'UNION',
                       'ENABLED': False,
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False,
                       'SCORE_HEUR': 'UNION'},
          'BBOX_REG': True,
          'BBOX_VOTE': {'ENABLED': False,
                        'SCORING_METHOD': 'ID',
                        'SCORING_METHOD_BETA': 1.0,
                        'VOTE_TH': 0.8},
          'COMPETITION_MODE': True,
          'DATASETS': ('voc_2007_test',),
          'DETECTIONS_PER_IM': 100,
          'FORCE_JSON_DATASET_EVAL': False,
          'KPS_AUG': {'AREA_TH': 32400,
                      'ASPECT_RATIOS': (),
                      'ASPECT_RATIO_H_FLIP': False,
                      'ENABLED': False,
                      'HEUR': 'HM_AVG',
                      'H_FLIP': False,
                      'MAX_SIZE': 4000,
                      'SCALES': (),
                      'SCALE_H_FLIP': False,
                      'SCALE_SIZE_DEP': False},
          'MASK_AUG': {'AREA_TH': 32400,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'ENABLED': False,
                       'HEUR': 'SOFT_AVG',
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False},
          'MAX_SIZE': 1000,
          'NMS': 0.5,
          'PRECOMPUTED_PROPOSALS': False,
          'PROPOSAL_FILES': (),
          'PROPOSAL_LIMIT': 2000,
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 1000,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALE': 600,
          'SCORE_THRESH': 0.05,
          'SOFT_NMS': {'ENABLED': False, 'METHOD': 'linear', 'SIGMA': 0.5},
          'WEAK_SUPERVISE': False},
 'TRAIN': {'ASPECT_CROPPING': False,
           'ASPECT_GROUPING': True,
           'ASPECT_HI': 2,
           'ASPECT_LO': 0.5,
           'BATCH_SIZE_PER_IM': 512,
           'BBOX_INSIDE_WEIGHTS': (1.0, 1.0, 1.0, 1.0),
           'BBOX_NORMALIZE_MEANS': (0.0, 0.0, 0.0, 0.0),
           'BBOX_NORMALIZE_STDS': (0.1, 0.1, 0.2, 0.2),
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'COPY_CLS_TO_DET': False,
           'CROWD_FILTER_THRESH': 0.7,
           'DATASETS': (),
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'FREEZE_BOX_HEAD': True,
           'FREEZE_CONV_BODY': False,
           'FREEZE_RPN': False,
           'GT_MIN_AREA': -1,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_FILES': (),
           'RPN_BATCH_SIZE_PER_IM': 256,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 2000,
           'RPN_STRADDLE_THRESH': 0,
           'SCALES': (600,),
           'SNAPSHOT_ITERS': 2000,
           'SPATIAL_REG': False,
           'USE_FLIPPED': True,
           'WEAK_SUPERVISE': True,
           'WEAK_SUPERVISE_WITH_PRETRAIN': True},
 'VIS': False,
 'VIS_TH': 0.9}
loading annotations into memory...
Done (t=0.13s)
creating index...
index created!
INFO subprocess.py:  59: 0,1,2,3
INFO subprocess.py:  67: gpu_inds: [0, 1, 2, 3]
INFO subprocess.py:  89: detection range command 0: python /home/ubuntu/Detectron.pytorch/tools/test_net.py --range 0 1238 --cfg Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_config.yaml --set TEST.DATASETS '("voc_2007_test",)' --output_dir Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test --load_ckpt Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step1499.pth
INFO subprocess.py:  89: detection range command 1: python /home/ubuntu/Detectron.pytorch/tools/test_net.py --range 1238 2476 --cfg Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_config.yaml --set TEST.DATASETS '("voc_2007_test",)' --output_dir Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test --load_ckpt Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step1499.pth
INFO subprocess.py:  89: detection range command 2: python /home/ubuntu/Detectron.pytorch/tools/test_net.py --range 2476 3714 --cfg Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_config.yaml --set TEST.DATASETS '("voc_2007_test",)' --output_dir Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test --load_ckpt Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step1499.pth
INFO subprocess.py:  89: detection range command 3: python /home/ubuntu/Detectron.pytorch/tools/test_net.py --range 3714 4952 --cfg Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_config.yaml --set TEST.DATASETS '("voc_2007_test",)' --output_dir Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test --load_ckpt Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step1499.pth
INFO subprocess.py: 129: # ---------------------------------------------------------------------------- #
INFO subprocess.py: 131: stdout of subprocess 0 with range [1, 1238]
INFO subprocess.py: 133: # ---------------------------------------------------------------------------- #
INFO test_net.py:  72: Called with args:
INFO test_net.py:  73: Namespace(cfg_file='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_config.yaml', dataset=None, load_ckpt='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step1499.pth', load_detectron=None, multi_gpu_testing=False, num_classes=None, output_dir='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test', range=[0, 1238], set_cfgs=['TEST.DATASETS', '("voc_2007_test",)'], vis=False)
INFO test_net.py: 130: Testing with config:
INFO test_net.py: 131: {'BBOX_XFORM_CLIP': 4.135166556742356,
 'CROP_RESIZE_WITH_MAX_POOL': True,
 'CUDA': False,
 'DATA_DIR': '/home/ubuntu/Detectron.pytorch/data',
 'DATA_LOADER': {'NUM_THREADS': 4},
 'DEBUG': False,
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXPECTED_RESULTS': [],
 'EXPECTED_RESULTS_ATOL': 0.005,
 'EXPECTED_RESULTS_EMAIL': '',
 'EXPECTED_RESULTS_RTOL': 0.1,
 'FAST_RCNN': {'BOX_OUT_STREAMS': 1,
               'CONV_HEAD_DIM': 256,
               'MLP_HEAD_DIM': 1024,
               'NUM_STACKED_CONVS': 4,
               'ROI_BOX_HEAD': 'fast_rcnn_heads.roi_2mlp_head',
               'ROI_XFORM_METHOD': 'RoIAlign',
               'ROI_XFORM_RESOLUTION': 7,
               'ROI_XFORM_SAMPLING_RATIO': 2},
 'FPN': {'COARSEST_STRIDE': 32,
         'DIM': 256,
         'EXTRA_CONV_LEVELS': False,
         'FPN_ON': True,
         'MULTILEVEL_ROIS': True,
         'MULTILEVEL_RPN': True,
         'ROI_CANONICAL_LEVEL': 4,
         'ROI_CANONICAL_SCALE': 224,
         'ROI_MAX_LEVEL': 5,
         'ROI_MIN_LEVEL': 2,
         'RPN_ANCHOR_START_SIZE': 32,
         'RPN_ASPECT_RATIOS': (0.5, 1, 2),
         'RPN_COLLECT_SCALE': 1,
         'RPN_MAX_LEVEL': 6,
         'RPN_MIN_LEVEL': 2,
         'USE_GN': False,
         'ZERO_INIT_LATERAL': False},
 'GROUP_NORM': {'DIM_PER_GP': -1, 'EPSILON': 1e-05, 'NUM_GROUPS': 32},
 'KRCNN': {'CONV_HEAD_DIM': 256,
           'CONV_HEAD_KERNEL': 3,
           'CONV_INIT': 'GaussianFill',
           'DECONV_DIM': 256,
           'DECONV_KERNEL': 4,
           'DILATION': 1,
           'HEATMAP_SIZE': -1,
           'INFERENCE_MIN_SIZE': 0,
           'KEYPOINT_CONFIDENCE': 'bbox',
           'LOSS_WEIGHT': 1.0,
           'MIN_KEYPOINT_COUNT_FOR_VALID_MINIBATCH': 20,
           'NMS_OKS': False,
           'NORMALIZE_BY_VISIBLE_KEYPOINTS': True,
           'NUM_KEYPOINTS': -1,
           'NUM_STACKED_CONVS': 8,
           'ROI_KEYPOINTS_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'UP_SCALE': -1,
           'USE_DECONV': False,
           'USE_DECONV_OUTPUT': False},
 'MATLAB': 'matlab',
 'MODEL': {'BBOX_REG_WEIGHTS': (10.0, 10.0, 5.0, 5.0),
           'CLS_AGNOSTIC_BBOX_REG': False,
           'CONV_BODY': 'FPN.fpn_ResNet101_conv5_body',
           'FASTER_RCNN': True,
           'KEYPOINTS_ON': False,
           'LOAD_IMAGENET_PRETRAINED_WEIGHTS': True,
           'MASK_ON': False,
           'NUM_CLASSES': 21,
           'RPN_ONLY': False,
           'SHARE_RES5': False,
           'TYPE': 'generalized_rcnn',
           'UNSUPERVISED_POSE': False},
 'MRCNN': {'CLS_SPECIFIC_MASK': True,
           'CONV_INIT': 'GaussianFill',
           'DILATION': 2,
           'DIM_REDUCED': 256,
           'MEMORY_EFFICIENT_LOSS': True,
           'RESOLUTION': 14,
           'ROI_MASK_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'THRESH_BINARIZE': 0.5,
           'UPSAMPLE_RATIO': 1,
           'USE_FC_OUTPUT': False,
           'WEIGHT_LOSS_MASK': 1.0},
 'NUM_GPUS': 8,
 'OUTPUT_DIR': 'Outputs',
 'PIXEL_MEANS': array([[[102.9801, 115.9465, 122.7717]]]),
 'POOLING_MODE': 'crop',
 'POOLING_SIZE': 7,
 'PYTORCH_VERSION_LESS_THAN_040': False,
 'RESNETS': {'FREEZE_AT': 2,
             'IMAGENET_PRETRAINED_WEIGHTS': 'data/pretrained_model/resnet101_caffe.pth',
             'NUM_GROUPS': 1,
             'RES5_DILATION': 1,
             'SHORTCUT_FUNC': 'basic_bn_shortcut',
             'STEM_FUNC': 'basic_bn_stem',
             'STRIDE_1X1': True,
             'TRANS_FUNC': 'bottleneck_transformation',
             'USE_GN': False,
             'WIDTH_PER_GROUP': 64},
 'RETINANET': {'ANCHOR_SCALE': 4,
               'ASPECT_RATIOS': (0.5, 1.0, 2.0),
               'BBOX_REG_BETA': 0.11,
               'BBOX_REG_WEIGHT': 1.0,
               'CLASS_SPECIFIC_BBOX': False,
               'INFERENCE_TH': 0.05,
               'LOSS_ALPHA': 0.25,
               'LOSS_GAMMA': 2.0,
               'NEGATIVE_OVERLAP': 0.4,
               'NUM_CONVS': 4,
               'POSITIVE_OVERLAP': 0.5,
               'PRE_NMS_TOP_N': 1000,
               'PRIOR_PROB': 0.01,
               'RETINANET_ON': False,
               'SCALES_PER_OCTAVE': 3,
               'SHARE_CLS_BBOX_TOWER': False,
               'SOFTMAX': False},
 'RFCN': {'PS_GRID_SIZE': 3},
 'RNG_SEED': 3,
 'ROOT_DIR': '/home/ubuntu/Detectron.pytorch',
 'RPN': {'ASPECT_RATIOS': (0.5, 1, 2),
         'CLS_ACTIVATION': 'sigmoid',
         'OUT_DIM': 512,
         'OUT_DIM_AS_IN_DIM': True,
         'RPN_ON': True,
         'SIZES': (64, 128, 256, 512),
         'STRIDE': 16},
 'SOLVER': {'BASE_LR': 2e-05,
            'BIAS_DOUBLE_LR': True,
            'BIAS_WEIGHT_DECAY': False,
            'GAMMA': 0.1,
            'LOG_LR_CHANGE_THRESHOLD': 1.1,
            'LRS': [],
            'LR_POLICY': 'steps_with_decay',
            'MAX_ITER': 10000,
            'MOMENTUM': 0.9,
            'SCALE_MOMENTUM': True,
            'SCALE_MOMENTUM_THRESHOLD': 1.1,
            'STEPS': [0, 5000, 8000],
            'STEP_SIZE': 30000,
            'TYPE': 'SGD',
            'WARM_UP_FACTOR': 0.3333333333333333,
            'WARM_UP_ITERS': 500,
            'WARM_UP_METHOD': 'linear',
            'WEIGHT_DECAY': 0.0001,
            'WEIGHT_DECAY_GN': 0.0},
 'TEST': {'BBOX_AUG': {'AREA_TH_HI': 32400,
                       'AREA_TH_LO': 2500,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'COORD_HEUR': 'UNION',
                       'ENABLED': False,
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False,
                       'SCORE_HEUR': 'UNION'},
          'BBOX_REG': True,
          'BBOX_VOTE': {'ENABLED': False,
                        'SCORING_METHOD': 'ID',
                        'SCORING_METHOD_BETA': 1.0,
                        'VOTE_TH': 0.8},
          'COMPETITION_MODE': True,
          'DATASETS': ('voc_2007_test',),
          'DETECTIONS_PER_IM': 100,
          'FORCE_JSON_DATASET_EVAL': False,
          'KPS_AUG': {'AREA_TH': 32400,
                      'ASPECT_RATIOS': (),
                      'ASPECT_RATIO_H_FLIP': False,
                      'ENABLED': False,
                      'HEUR': 'HM_AVG',
                      'H_FLIP': False,
                      'MAX_SIZE': 4000,
                      'SCALES': (),
                      'SCALE_H_FLIP': False,
                      'SCALE_SIZE_DEP': False},
          'MASK_AUG': {'AREA_TH': 32400,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'ENABLED': False,
                       'HEUR': 'SOFT_AVG',
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False},
          'MAX_SIZE': 1000,
          'NMS': 0.5,
          'PRECOMPUTED_PROPOSALS': False,
          'PROPOSAL_FILES': (),
          'PROPOSAL_LIMIT': 2000,
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 1000,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALE': 600,
          'SCORE_THRESH': 0.05,
          'SOFT_NMS': {'ENABLED': False, 'METHOD': 'linear', 'SIGMA': 0.5},
          'WEAK_SUPERVISE': False},
 'TRAIN': {'ASPECT_CROPPING': False,
           'ASPECT_GROUPING': True,
           'ASPECT_HI': 2,
           'ASPECT_LO': 0.5,
           'BATCH_SIZE_PER_IM': 512,
           'BBOX_INSIDE_WEIGHTS': (1.0, 1.0, 1.0, 1.0),
           'BBOX_NORMALIZE_MEANS': (0.0, 0.0, 0.0, 0.0),
           'BBOX_NORMALIZE_STDS': (0.1, 0.1, 0.2, 0.2),
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'COPY_CLS_TO_DET': False,
           'CROWD_FILTER_THRESH': 0.7,
           'DATASETS': (),
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'FREEZE_BOX_HEAD': True,
           'FREEZE_CONV_BODY': False,
           'FREEZE_RPN': False,
           'GT_MIN_AREA': -1,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_FILES': (),
           'RPN_BATCH_SIZE_PER_IM': 256,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 2000,
           'RPN_STRADDLE_THRESH': 0,
           'SCALES': (600,),
           'SNAPSHOT_ITERS': 2000,
           'SPATIAL_REG': False,
           'USE_FLIPPED': True,
           'WEAK_SUPERVISE': True,
           'WEAK_SUPERVISE_WITH_PRETRAIN': True},
 'VIS': False,
 'VIS_TH': 0.9}
loading annotations into memory...
Done (t=0.22s)
creating index...
index created!
INFO test_engine.py: 324: training mode? : False
INFO test_engine.py: 331: loading checkpoint Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step1499.pth
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1/1238 0.678s + 0.001s (eta: 0:13:59)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 11/1238 0.530s + 0.001s (eta: 0:10:51)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 21/1238 0.555s + 0.002s (eta: 0:11:17)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 31/1238 0.549s + 0.002s (eta: 0:11:04)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 41/1238 0.545s + 0.002s (eta: 0:10:54)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 51/1238 0.540s + 0.002s (eta: 0:10:43)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 61/1238 0.534s + 0.002s (eta: 0:10:30)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 71/1238 0.535s + 0.002s (eta: 0:10:26)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 81/1238 0.534s + 0.002s (eta: 0:10:20)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 91/1238 0.533s + 0.002s (eta: 0:10:13)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 101/1238 0.534s + 0.002s (eta: 0:10:10)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 111/1238 0.534s + 0.002s (eta: 0:10:03)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 121/1238 0.534s + 0.002s (eta: 0:09:58)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 131/1238 0.534s + 0.002s (eta: 0:09:53)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 141/1238 0.532s + 0.002s (eta: 0:09:45)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 151/1238 0.530s + 0.002s (eta: 0:09:38)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 161/1238 0.532s + 0.002s (eta: 0:09:34)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 171/1238 0.532s + 0.002s (eta: 0:09:29)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 181/1238 0.531s + 0.002s (eta: 0:09:23)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 191/1238 0.532s + 0.002s (eta: 0:09:18)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 201/1238 0.531s + 0.002s (eta: 0:09:12)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 211/1238 0.529s + 0.002s (eta: 0:09:05)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 221/1238 0.527s + 0.002s (eta: 0:08:58)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 231/1238 0.526s + 0.002s (eta: 0:08:51)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 241/1238 0.526s + 0.002s (eta: 0:08:46)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 251/1238 0.525s + 0.002s (eta: 0:08:40)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 261/1238 0.523s + 0.002s (eta: 0:08:33)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 271/1238 0.522s + 0.002s (eta: 0:08:26)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 281/1238 0.521s + 0.002s (eta: 0:08:20)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 291/1238 0.521s + 0.002s (eta: 0:08:15)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 301/1238 0.521s + 0.002s (eta: 0:08:10)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 311/1238 0.522s + 0.002s (eta: 0:08:05)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 321/1238 0.520s + 0.002s (eta: 0:07:59)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 331/1238 0.520s + 0.002s (eta: 0:07:53)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 341/1238 0.518s + 0.002s (eta: 0:07:46)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 351/1238 0.517s + 0.002s (eta: 0:07:40)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 361/1238 0.517s + 0.002s (eta: 0:07:35)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 371/1238 0.517s + 0.002s (eta: 0:07:30)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 381/1238 0.518s + 0.002s (eta: 0:07:26)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 391/1238 0.517s + 0.002s (eta: 0:07:19)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 401/1238 0.516s + 0.002s (eta: 0:07:13)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 411/1238 0.515s + 0.002s (eta: 0:07:07)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 421/1238 0.513s + 0.002s (eta: 0:07:00)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 431/1238 0.510s + 0.002s (eta: 0:06:53)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 441/1238 0.507s + 0.002s (eta: 0:06:46)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 451/1238 0.505s + 0.002s (eta: 0:06:39)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 461/1238 0.502s + 0.002s (eta: 0:06:32)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 471/1238 0.500s + 0.002s (eta: 0:06:25)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 481/1238 0.498s + 0.002s (eta: 0:06:18)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 491/1238 0.496s + 0.002s (eta: 0:06:12)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 501/1238 0.497s + 0.002s (eta: 0:06:07)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 511/1238 0.497s + 0.002s (eta: 0:06:02)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 521/1238 0.496s + 0.002s (eta: 0:05:57)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 531/1238 0.496s + 0.002s (eta: 0:05:52)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 541/1238 0.497s + 0.002s (eta: 0:05:47)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 551/1238 0.498s + 0.002s (eta: 0:05:43)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 561/1238 0.499s + 0.002s (eta: 0:05:39)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 571/1238 0.499s + 0.002s (eta: 0:05:34)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 581/1238 0.499s + 0.002s (eta: 0:05:29)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 591/1238 0.499s + 0.002s (eta: 0:05:23)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 601/1238 0.499s + 0.002s (eta: 0:05:19)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 611/1238 0.498s + 0.002s (eta: 0:05:13)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 621/1238 0.499s + 0.002s (eta: 0:05:08)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 631/1238 0.499s + 0.002s (eta: 0:05:03)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 641/1238 0.499s + 0.002s (eta: 0:04:59)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 651/1238 0.499s + 0.002s (eta: 0:04:54)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 661/1238 0.500s + 0.002s (eta: 0:04:49)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 671/1238 0.500s + 0.002s (eta: 0:04:44)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 681/1238 0.500s + 0.002s (eta: 0:04:39)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 691/1238 0.500s + 0.002s (eta: 0:04:34)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 701/1238 0.500s + 0.002s (eta: 0:04:29)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 711/1238 0.500s + 0.002s (eta: 0:04:24)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 721/1238 0.500s + 0.002s (eta: 0:04:19)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 731/1238 0.500s + 0.002s (eta: 0:04:14)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 741/1238 0.500s + 0.002s (eta: 0:04:09)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 751/1238 0.500s + 0.002s (eta: 0:04:04)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 761/1238 0.500s + 0.002s (eta: 0:03:59)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 771/1238 0.500s + 0.002s (eta: 0:03:54)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 781/1238 0.500s + 0.002s (eta: 0:03:49)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 791/1238 0.501s + 0.002s (eta: 0:03:44)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 801/1238 0.500s + 0.002s (eta: 0:03:39)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 811/1238 0.500s + 0.002s (eta: 0:03:34)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 821/1238 0.500s + 0.002s (eta: 0:03:29)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 831/1238 0.501s + 0.002s (eta: 0:03:24)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 841/1238 0.501s + 0.002s (eta: 0:03:19)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 851/1238 0.501s + 0.002s (eta: 0:03:14)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 861/1238 0.501s + 0.002s (eta: 0:03:09)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 871/1238 0.501s + 0.002s (eta: 0:03:04)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 881/1238 0.501s + 0.002s (eta: 0:02:59)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 891/1238 0.501s + 0.002s (eta: 0:02:54)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 901/1238 0.501s + 0.002s (eta: 0:02:49)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 911/1238 0.501s + 0.002s (eta: 0:02:44)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 921/1238 0.501s + 0.002s (eta: 0:02:39)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 931/1238 0.501s + 0.002s (eta: 0:02:34)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 941/1238 0.501s + 0.002s (eta: 0:02:29)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 951/1238 0.501s + 0.002s (eta: 0:02:24)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 961/1238 0.501s + 0.002s (eta: 0:02:19)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 971/1238 0.500s + 0.002s (eta: 0:02:14)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 981/1238 0.500s + 0.002s (eta: 0:02:09)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 991/1238 0.500s + 0.002s (eta: 0:02:04)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1001/1238 0.500s + 0.002s (eta: 0:01:59)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1011/1238 0.500s + 0.002s (eta: 0:01:54)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1021/1238 0.500s + 0.002s (eta: 0:01:49)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1031/1238 0.500s + 0.002s (eta: 0:01:44)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1041/1238 0.500s + 0.002s (eta: 0:01:38)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1051/1238 0.500s + 0.002s (eta: 0:01:33)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1061/1238 0.500s + 0.002s (eta: 0:01:28)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1071/1238 0.500s + 0.002s (eta: 0:01:23)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1081/1238 0.500s + 0.002s (eta: 0:01:18)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1091/1238 0.501s + 0.002s (eta: 0:01:13)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1101/1238 0.501s + 0.002s (eta: 0:01:08)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1111/1238 0.500s + 0.002s (eta: 0:01:03)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1121/1238 0.500s + 0.002s (eta: 0:00:58)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1131/1238 0.500s + 0.002s (eta: 0:00:53)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1141/1238 0.500s + 0.002s (eta: 0:00:48)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1151/1238 0.500s + 0.002s (eta: 0:00:43)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1161/1238 0.500s + 0.002s (eta: 0:00:38)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1171/1238 0.500s + 0.002s (eta: 0:00:33)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1181/1238 0.500s + 0.002s (eta: 0:00:28)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1191/1238 0.500s + 0.002s (eta: 0:00:23)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1201/1238 0.500s + 0.002s (eta: 0:00:18)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1211/1238 0.500s + 0.002s (eta: 0:00:13)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1221/1238 0.500s + 0.002s (eta: 0:00:08)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1231/1238 0.500s + 0.002s (eta: 0:00:03)
INFO test_engine.py: 314: Wrote detections to: /home/ubuntu/Detectron.pytorch/Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_0_1238.pkl
/home/ubuntu/anaconda3/envs/pytorch41/lib/python3.7/site-packages/torch/nn/functional.py:1890: UserWarning: nn.functional.upsample is deprecated. Use nn.functional.interpolate instead.
  warnings.warn("nn.functional.upsample is deprecated. Use nn.functional.interpolate instead.")
INFO subprocess.py: 129: # ---------------------------------------------------------------------------- #
INFO subprocess.py: 131: stdout of subprocess 1 with range [1239, 2476]
INFO subprocess.py: 133: # ---------------------------------------------------------------------------- #
INFO test_net.py:  72: Called with args:
INFO test_net.py:  73: Namespace(cfg_file='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_config.yaml', dataset=None, load_ckpt='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step999.pth', load_detectron=None, multi_gpu_testing=False, num_classes=None, output_dir='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test', range=[1238, 2476], set_cfgs=['TEST.DATASETS', '("voc_2007_test",)'], vis=False)
INFO test_net.py: 130: Testing with config:
INFO test_net.py: 131: {'BBOX_XFORM_CLIP': 4.135166556742356,
 'CROP_RESIZE_WITH_MAX_POOL': True,
 'CUDA': False,
 'DATA_DIR': '/home/ubuntu/Detectron.pytorch/data',
 'DATA_LOADER': {'NUM_THREADS': 4},
 'DEBUG': False,
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXPECTED_RESULTS': [],
 'EXPECTED_RESULTS_ATOL': 0.005,
 'EXPECTED_RESULTS_EMAIL': '',
 'EXPECTED_RESULTS_RTOL': 0.1,
 'FAST_RCNN': {'BOX_OUT_STREAMS': 1,
               'CONV_HEAD_DIM': 256,
               'MLP_HEAD_DIM': 1024,
               'NUM_STACKED_CONVS': 4,
               'ROI_BOX_HEAD': 'fast_rcnn_heads.roi_2mlp_head',
               'ROI_XFORM_METHOD': 'RoIAlign',
               'ROI_XFORM_RESOLUTION': 7,
               'ROI_XFORM_SAMPLING_RATIO': 2},
 'FPN': {'COARSEST_STRIDE': 32,
         'DIM': 256,
         'EXTRA_CONV_LEVELS': False,
         'FPN_ON': True,
         'MULTILEVEL_ROIS': True,
         'MULTILEVEL_RPN': True,
         'ROI_CANONICAL_LEVEL': 4,
         'ROI_CANONICAL_SCALE': 224,
         'ROI_MAX_LEVEL': 5,
         'ROI_MIN_LEVEL': 2,
         'RPN_ANCHOR_START_SIZE': 32,
         'RPN_ASPECT_RATIOS': (0.5, 1, 2),
         'RPN_COLLECT_SCALE': 1,
         'RPN_MAX_LEVEL': 6,
         'RPN_MIN_LEVEL': 2,
         'USE_GN': False,
         'ZERO_INIT_LATERAL': False},
 'GROUP_NORM': {'DIM_PER_GP': -1, 'EPSILON': 1e-05, 'NUM_GROUPS': 32},
 'KRCNN': {'CONV_HEAD_DIM': 256,
           'CONV_HEAD_KERNEL': 3,
           'CONV_INIT': 'GaussianFill',
           'DECONV_DIM': 256,
           'DECONV_KERNEL': 4,
           'DILATION': 1,
           'HEATMAP_SIZE': -1,
           'INFERENCE_MIN_SIZE': 0,
           'KEYPOINT_CONFIDENCE': 'bbox',
           'LOSS_WEIGHT': 1.0,
           'MIN_KEYPOINT_COUNT_FOR_VALID_MINIBATCH': 20,
           'NMS_OKS': False,
           'NORMALIZE_BY_VISIBLE_KEYPOINTS': True,
           'NUM_KEYPOINTS': -1,
           'NUM_STACKED_CONVS': 8,
           'ROI_KEYPOINTS_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'UP_SCALE': -1,
           'USE_DECONV': False,
           'USE_DECONV_OUTPUT': False},
 'MATLAB': 'matlab',
 'MODEL': {'BBOX_REG_WEIGHTS': (10.0, 10.0, 5.0, 5.0),
           'CLS_AGNOSTIC_BBOX_REG': False,
           'CONV_BODY': 'FPN.fpn_ResNet101_conv5_body',
           'FASTER_RCNN': True,
           'KEYPOINTS_ON': False,
           'LOAD_IMAGENET_PRETRAINED_WEIGHTS': True,
           'MASK_ON': False,
           'NUM_CLASSES': 21,
           'RPN_ONLY': False,
           'SHARE_RES5': False,
           'TYPE': 'generalized_rcnn',
           'UNSUPERVISED_POSE': False},
 'MRCNN': {'CLS_SPECIFIC_MASK': True,
           'CONV_INIT': 'GaussianFill',
           'DILATION': 2,
           'DIM_REDUCED': 256,
           'MEMORY_EFFICIENT_LOSS': True,
           'RESOLUTION': 14,
           'ROI_MASK_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'THRESH_BINARIZE': 0.5,
           'UPSAMPLE_RATIO': 1,
           'USE_FC_OUTPUT': False,
           'WEIGHT_LOSS_MASK': 1.0},
 'NUM_GPUS': 8,
 'OUTPUT_DIR': 'Outputs',
 'PIXEL_MEANS': array([[[102.9801, 115.9465, 122.7717]]]),
 'POOLING_MODE': 'crop',
 'POOLING_SIZE': 7,
 'PYTORCH_VERSION_LESS_THAN_040': False,
 'RESNETS': {'FREEZE_AT': 2,
             'IMAGENET_PRETRAINED_WEIGHTS': 'data/pretrained_model/resnet101_caffe.pth',
             'NUM_GROUPS': 1,
             'RES5_DILATION': 1,
             'SHORTCUT_FUNC': 'basic_bn_shortcut',
             'STEM_FUNC': 'basic_bn_stem',
             'STRIDE_1X1': True,
             'TRANS_FUNC': 'bottleneck_transformation',
             'USE_GN': False,
             'WIDTH_PER_GROUP': 64},
 'RETINANET': {'ANCHOR_SCALE': 4,
               'ASPECT_RATIOS': (0.5, 1.0, 2.0),
               'BBOX_REG_BETA': 0.11,
               'BBOX_REG_WEIGHT': 1.0,
               'CLASS_SPECIFIC_BBOX': False,
               'INFERENCE_TH': 0.05,
               'LOSS_ALPHA': 0.25,
               'LOSS_GAMMA': 2.0,
               'NEGATIVE_OVERLAP': 0.4,
               'NUM_CONVS': 4,
               'POSITIVE_OVERLAP': 0.5,
               'PRE_NMS_TOP_N': 1000,
               'PRIOR_PROB': 0.01,
               'RETINANET_ON': False,
               'SCALES_PER_OCTAVE': 3,
               'SHARE_CLS_BBOX_TOWER': False,
               'SOFTMAX': False},
 'RFCN': {'PS_GRID_SIZE': 3},
 'RNG_SEED': 3,
 'ROOT_DIR': '/home/ubuntu/Detectron.pytorch',
 'RPN': {'ASPECT_RATIOS': (0.5, 1, 2),
         'CLS_ACTIVATION': 'sigmoid',
         'OUT_DIM': 512,
         'OUT_DIM_AS_IN_DIM': True,
         'RPN_ON': True,
         'SIZES': (64, 128, 256, 512),
         'STRIDE': 16},
 'SOLVER': {'BASE_LR': 2e-05,
            'BIAS_DOUBLE_LR': True,
            'BIAS_WEIGHT_DECAY': False,
            'GAMMA': 0.1,
            'LOG_LR_CHANGE_THRESHOLD': 1.1,
            'LRS': [],
            'LR_POLICY': 'steps_with_decay',
            'MAX_ITER': 10000,
            'MOMENTUM': 0.9,
            'SCALE_MOMENTUM': True,
            'SCALE_MOMENTUM_THRESHOLD': 1.1,
            'STEPS': [0, 5000, 8000],
            'STEP_SIZE': 30000,
            'TYPE': 'SGD',
            'WARM_UP_FACTOR': 0.3333333333333333,
            'WARM_UP_ITERS': 500,
            'WARM_UP_METHOD': 'linear',
            'WEIGHT_DECAY': 0.0001,
            'WEIGHT_DECAY_GN': 0.0},
 'TEST': {'BBOX_AUG': {'AREA_TH_HI': 32400,
                       'AREA_TH_LO': 2500,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'COORD_HEUR': 'UNION',
                       'ENABLED': False,
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False,
                       'SCORE_HEUR': 'UNION'},
          'BBOX_REG': True,
          'BBOX_VOTE': {'ENABLED': False,
                        'SCORING_METHOD': 'ID',
                        'SCORING_METHOD_BETA': 1.0,
                        'VOTE_TH': 0.8},
          'COMPETITION_MODE': True,
          'DATASETS': ('voc_2007_test',),
          'DETECTIONS_PER_IM': 100,
          'FORCE_JSON_DATASET_EVAL': False,
          'KPS_AUG': {'AREA_TH': 32400,
                      'ASPECT_RATIOS': (),
                      'ASPECT_RATIO_H_FLIP': False,
                      'ENABLED': False,
                      'HEUR': 'HM_AVG',
                      'H_FLIP': False,
                      'MAX_SIZE': 4000,
                      'SCALES': (),
                      'SCALE_H_FLIP': False,
                      'SCALE_SIZE_DEP': False},
          'MASK_AUG': {'AREA_TH': 32400,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'ENABLED': False,
                       'HEUR': 'SOFT_AVG',
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False},
          'MAX_SIZE': 1000,
          'NMS': 0.5,
          'PRECOMPUTED_PROPOSALS': False,
          'PROPOSAL_FILES': (),
          'PROPOSAL_LIMIT': 2000,
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 1000,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALE': 600,
          'SCORE_THRESH': 0.05,
          'SOFT_NMS': {'ENABLED': False, 'METHOD': 'linear', 'SIGMA': 0.5},
          'WEAK_SUPERVISE': False},
 'TRAIN': {'ASPECT_CROPPING': False,
           'ASPECT_GROUPING': True,
           'ASPECT_HI': 2,
           'ASPECT_LO': 0.5,
           'BATCH_SIZE_PER_IM': 512,
           'BBOX_INSIDE_WEIGHTS': (1.0, 1.0, 1.0, 1.0),
           'BBOX_NORMALIZE_MEANS': (0.0, 0.0, 0.0, 0.0),
           'BBOX_NORMALIZE_STDS': (0.1, 0.1, 0.2, 0.2),
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'COPY_CLS_TO_DET': False,
           'CROWD_FILTER_THRESH': 0.7,
           'DATASETS': (),
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'FREEZE_BOX_HEAD': True,
           'FREEZE_CONV_BODY': False,
           'FREEZE_RPN': False,
           'GT_MIN_AREA': -1,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_FILES': (),
           'RPN_BATCH_SIZE_PER_IM': 256,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 2000,
           'RPN_STRADDLE_THRESH': 0,
           'SCALES': (600,),
           'SNAPSHOT_ITERS': 2000,
           'SPATIAL_REG': False,
           'USE_FLIPPED': True,
           'WEAK_SUPERVISE': True,
           'WEAK_SUPERVISE_WITH_PRETRAIN': True},
 'VIS': False,
 'VIS_TH': 0.9}
loading annotations into memory...
Done (t=0.22s)
creating index...
index created!
INFO test_engine.py: 324: training mode? : False
INFO test_engine.py: 331: loading checkpoint Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step999.pth
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1239/2476 0.631s + 0.006s (eta: 0:13:07)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1249/2476 0.461s + 0.002s (eta: 0:09:27)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1259/2476 0.471s + 0.002s (eta: 0:09:35)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1269/2476 0.494s + 0.002s (eta: 0:09:58)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1279/2476 0.478s + 0.002s (eta: 0:09:34)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1289/2476 0.483s + 0.002s (eta: 0:09:35)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1299/2476 0.477s + 0.002s (eta: 0:09:24)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1309/2476 0.478s + 0.002s (eta: 0:09:19)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1319/2476 0.480s + 0.002s (eta: 0:09:17)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1329/2476 0.478s + 0.002s (eta: 0:09:09)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1339/2476 0.480s + 0.002s (eta: 0:09:07)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1349/2476 0.479s + 0.002s (eta: 0:09:02)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1359/2476 0.485s + 0.002s (eta: 0:09:03)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1369/2476 0.488s + 0.002s (eta: 0:09:02)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1379/2476 0.490s + 0.002s (eta: 0:08:59)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1389/2476 0.492s + 0.002s (eta: 0:08:56)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1399/2476 0.492s + 0.002s (eta: 0:08:52)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1409/2476 0.492s + 0.002s (eta: 0:08:47)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1419/2476 0.493s + 0.002s (eta: 0:08:43)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1429/2476 0.494s + 0.002s (eta: 0:08:38)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1439/2476 0.493s + 0.002s (eta: 0:08:32)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1449/2476 0.492s + 0.002s (eta: 0:08:27)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1459/2476 0.492s + 0.002s (eta: 0:08:22)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1469/2476 0.492s + 0.002s (eta: 0:08:16)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1479/2476 0.491s + 0.002s (eta: 0:08:11)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1489/2476 0.491s + 0.002s (eta: 0:08:06)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1499/2476 0.490s + 0.002s (eta: 0:08:00)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1509/2476 0.491s + 0.002s (eta: 0:07:56)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1519/2476 0.491s + 0.002s (eta: 0:07:51)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1529/2476 0.493s + 0.002s (eta: 0:07:48)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1539/2476 0.494s + 0.002s (eta: 0:07:44)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1549/2476 0.495s + 0.002s (eta: 0:07:40)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1559/2476 0.494s + 0.002s (eta: 0:07:34)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1569/2476 0.494s + 0.002s (eta: 0:07:29)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1579/2476 0.493s + 0.002s (eta: 0:07:23)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1589/2476 0.494s + 0.002s (eta: 0:07:19)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1599/2476 0.494s + 0.002s (eta: 0:07:14)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1609/2476 0.493s + 0.002s (eta: 0:07:09)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1619/2476 0.493s + 0.002s (eta: 0:07:04)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1629/2476 0.494s + 0.002s (eta: 0:06:59)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1639/2476 0.493s + 0.002s (eta: 0:06:54)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1649/2476 0.492s + 0.002s (eta: 0:06:48)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1659/2476 0.492s + 0.002s (eta: 0:06:43)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1669/2476 0.493s + 0.002s (eta: 0:06:39)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1679/2476 0.493s + 0.002s (eta: 0:06:34)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1689/2476 0.493s + 0.002s (eta: 0:06:29)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1699/2476 0.494s + 0.002s (eta: 0:06:25)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1709/2476 0.495s + 0.002s (eta: 0:06:20)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1719/2476 0.495s + 0.002s (eta: 0:06:15)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1729/2476 0.495s + 0.002s (eta: 0:06:11)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1739/2476 0.495s + 0.002s (eta: 0:06:06)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1749/2476 0.495s + 0.002s (eta: 0:06:01)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1759/2476 0.495s + 0.002s (eta: 0:05:56)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1769/2476 0.495s + 0.002s (eta: 0:05:50)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1779/2476 0.495s + 0.002s (eta: 0:05:46)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1789/2476 0.495s + 0.002s (eta: 0:05:41)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1799/2476 0.496s + 0.002s (eta: 0:05:36)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1809/2476 0.495s + 0.002s (eta: 0:05:31)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1819/2476 0.496s + 0.002s (eta: 0:05:26)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1829/2476 0.496s + 0.002s (eta: 0:05:22)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1839/2476 0.496s + 0.002s (eta: 0:05:17)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1849/2476 0.496s + 0.002s (eta: 0:05:12)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1859/2476 0.496s + 0.002s (eta: 0:05:07)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1869/2476 0.495s + 0.002s (eta: 0:05:01)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1879/2476 0.495s + 0.002s (eta: 0:04:56)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1889/2476 0.495s + 0.002s (eta: 0:04:51)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1899/2476 0.495s + 0.002s (eta: 0:04:46)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1909/2476 0.495s + 0.002s (eta: 0:04:41)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1919/2476 0.495s + 0.002s (eta: 0:04:36)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1929/2476 0.495s + 0.002s (eta: 0:04:31)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1939/2476 0.496s + 0.002s (eta: 0:04:27)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1949/2476 0.495s + 0.002s (eta: 0:04:21)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1959/2476 0.495s + 0.002s (eta: 0:04:17)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1969/2476 0.496s + 0.002s (eta: 0:04:12)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1979/2476 0.495s + 0.002s (eta: 0:04:07)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1989/2476 0.495s + 0.002s (eta: 0:04:02)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1999/2476 0.494s + 0.002s (eta: 0:03:56)
)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2009/2476 0.491s + 0.002s (eta: 0:03:50)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2019/2476 0.491s + 0.002s (eta: 0:03:45)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2029/2476 0.491s + 0.002s (eta: 0:03:40)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2039/2476 0.491s + 0.002s (eta: 0:03:35)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2049/2476 0.491s + 0.002s (eta: 0:03:30)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2059/2476 0.491s + 0.002s (eta: 0:03:25)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2069/2476 0.491s + 0.002s (eta: 0:03:20)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2079/2476 0.491s + 0.002s (eta: 0:03:15)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2089/2476 0.491s + 0.002s (eta: 0:03:10)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2099/2476 0.491s + 0.002s (eta: 0:03:05)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2109/2476 0.492s + 0.002s (eta: 0:03:01)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2119/2476 0.492s + 0.002s (eta: 0:02:56)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2129/2476 0.492s + 0.002s (eta: 0:02:51)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2139/2476 0.492s + 0.002s (eta: 0:02:46)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2149/2476 0.491s + 0.002s (eta: 0:02:41)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2159/2476 0.491s + 0.002s (eta: 0:02:36)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2169/2476 0.491s + 0.002s (eta: 0:02:31)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2179/2476 0.491s + 0.002s (eta: 0:02:26)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2189/2476 0.492s + 0.002s (eta: 0:02:21)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2199/2476 0.492s + 0.002s (eta: 0:02:16)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2209/2476 0.492s + 0.002s (eta: 0:02:11)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2219/2476 0.491s + 0.002s (eta: 0:02:06)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2229/2476 0.492s + 0.002s (eta: 0:02:01)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2239/2476 0.492s + 0.002s (eta: 0:01:56)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2249/2476 0.492s + 0.002s (eta: 0:01:52)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2259/2476 0.492s + 0.002s (eta: 0:01:47)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2269/2476 0.492s + 0.002s (eta: 0:01:42)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2279/2476 0.492s + 0.002s (eta: 0:01:37)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2289/2476 0.492s + 0.002s (eta: 0:01:32)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2299/2476 0.492s + 0.002s (eta: 0:01:27)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2309/2476 0.492s + 0.002s (eta: 0:01:22)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2319/2476 0.492s + 0.002s (eta: 0:01:17)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2329/2476 0.492s + 0.002s (eta: 0:01:12)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2339/2476 0.492s + 0.002s (eta: 0:01:07)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2349/2476 0.492s + 0.002s (eta: 0:01:02)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2359/2476 0.493s + 0.002s (eta: 0:00:57)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2369/2476 0.492s + 0.002s (eta: 0:00:52)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2379/2476 0.493s + 0.002s (eta: 0:00:47)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2389/2476 0.493s + 0.002s (eta: 0:00:43)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2399/2476 0.493s + 0.002s (eta: 0:00:38)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2409/2476 0.493s + 0.002s (eta: 0:00:33)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2419/2476 0.493s + 0.002s (eta: 0:00:28)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2429/2476 0.494s + 0.002s (eta: 0:00:23)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2439/2476 0.494s + 0.002s (eta: 0:00:18)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2449/2476 0.494s + 0.002s (eta: 0:00:13)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2459/2476 0.493s + 0.002s (eta: 0:00:08)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2469/2476 0.494s + 0.002s (eta: 0:00:03)
INFO test_engine.py: 314: Wrote detections to: /home/ubuntu/Detectron.pytorch/Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_1238_2476.pkl
/home/ubuntu/anaconda3/envs/pytorch41/lib/python3.7/site-packages/torch/nn/functional.py:1890: UserWarning: nn.functional.upsample is deprecated. Use nn.functional.interpolate instead.
  warnings.warn("nn.functional.upsample is deprecated. Use nn.functional.interpolate instead.")

INFO subprocess.py: 129: # ---------------------------------------------------------------------------- #
INFO subprocess.py: 131: stdout of subprocess 2 with range [2477, 3714]
INFO subprocess.py: 133: # ---------------------------------------------------------------------------- #
INFO test_net.py:  72: Called with args:
INFO test_net.py:  73: Namespace(cfg_file='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_config.yaml', dataset=None, load_ckpt='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step999.pth', load_detectron=None, multi_gpu_testing=False, num_classes=None, output_dir='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test', range=[2476, 3714], set_cfgs=['TEST.DATASETS', '("voc_2007_test",)'], vis=False)
INFO test_net.py: 130: Testing with config:
INFO test_net.py: 131: {'BBOX_XFORM_CLIP': 4.135166556742356,
 'CROP_RESIZE_WITH_MAX_POOL': True,
 'CUDA': False,
 'DATA_DIR': '/home/ubuntu/Detectron.pytorch/data',
 'DATA_LOADER': {'NUM_THREADS': 4},
 'DEBUG': False,
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXPECTED_RESULTS': [],
 'EXPECTED_RESULTS_ATOL': 0.005,
 'EXPECTED_RESULTS_EMAIL': '',
 'EXPECTED_RESULTS_RTOL': 0.1,
 'FAST_RCNN': {'BOX_OUT_STREAMS': 1,
               'CONV_HEAD_DIM': 256,
               'MLP_HEAD_DIM': 1024,
               'NUM_STACKED_CONVS': 4,
               'ROI_BOX_HEAD': 'fast_rcnn_heads.roi_2mlp_head',
               'ROI_XFORM_METHOD': 'RoIAlign',
               'ROI_XFORM_RESOLUTION': 7,
               'ROI_XFORM_SAMPLING_RATIO': 2},
 'FPN': {'COARSEST_STRIDE': 32,
         'DIM': 256,
         'EXTRA_CONV_LEVELS': False,
         'FPN_ON': True,
         'MULTILEVEL_ROIS': True,
         'MULTILEVEL_RPN': True,
         'ROI_CANONICAL_LEVEL': 4,
         'ROI_CANONICAL_SCALE': 224,
         'ROI_MAX_LEVEL': 5,
         'ROI_MIN_LEVEL': 2,
         'RPN_ANCHOR_START_SIZE': 32,
         'RPN_ASPECT_RATIOS': (0.5, 1, 2),
         'RPN_COLLECT_SCALE': 1,
         'RPN_MAX_LEVEL': 6,
         'RPN_MIN_LEVEL': 2,
         'USE_GN': False,
         'ZERO_INIT_LATERAL': False},
 'GROUP_NORM': {'DIM_PER_GP': -1, 'EPSILON': 1e-05, 'NUM_GROUPS': 32},
 'KRCNN': {'CONV_HEAD_DIM': 256,
           'CONV_HEAD_KERNEL': 3,
           'CONV_INIT': 'GaussianFill',
           'DECONV_DIM': 256,
           'DECONV_KERNEL': 4,
           'DILATION': 1,
           'HEATMAP_SIZE': -1,
           'INFERENCE_MIN_SIZE': 0,
           'KEYPOINT_CONFIDENCE': 'bbox',
           'LOSS_WEIGHT': 1.0,
           'MIN_KEYPOINT_COUNT_FOR_VALID_MINIBATCH': 20,
           'NMS_OKS': False,
           'NORMALIZE_BY_VISIBLE_KEYPOINTS': True,
           'NUM_KEYPOINTS': -1,
           'NUM_STACKED_CONVS': 8,
           'ROI_KEYPOINTS_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'UP_SCALE': -1,
           'USE_DECONV': False,
           'USE_DECONV_OUTPUT': False},
 'MATLAB': 'matlab',
 'MODEL': {'BBOX_REG_WEIGHTS': (10.0, 10.0, 5.0, 5.0),
           'CLS_AGNOSTIC_BBOX_REG': False,
           'CONV_BODY': 'FPN.fpn_ResNet101_conv5_body',
           'FASTER_RCNN': True,
           'KEYPOINTS_ON': False,
           'LOAD_IMAGENET_PRETRAINED_WEIGHTS': True,
           'MASK_ON': False,
           'NUM_CLASSES': 21,
           'RPN_ONLY': False,
           'SHARE_RES5': False,
           'TYPE': 'generalized_rcnn',
           'UNSUPERVISED_POSE': False},
 'MRCNN': {'CLS_SPECIFIC_MASK': True,
           'CONV_INIT': 'GaussianFill',
           'DILATION': 2,
           'DIM_REDUCED': 256,
           'MEMORY_EFFICIENT_LOSS': True,
           'RESOLUTION': 14,
           'ROI_MASK_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'THRESH_BINARIZE': 0.5,
           'UPSAMPLE_RATIO': 1,
           'USE_FC_OUTPUT': False,
           'WEIGHT_LOSS_MASK': 1.0},
 'NUM_GPUS': 8,
 'OUTPUT_DIR': 'Outputs',
 'PIXEL_MEANS': array([[[102.9801, 115.9465, 122.7717]]]),
 'POOLING_MODE': 'crop',
 'POOLING_SIZE': 7,
 'PYTORCH_VERSION_LESS_THAN_040': False,
 'RESNETS': {'FREEZE_AT': 2,
             'IMAGENET_PRETRAINED_WEIGHTS': 'data/pretrained_model/resnet101_caffe.pth',
             'NUM_GROUPS': 1,
             'RES5_DILATION': 1,
             'SHORTCUT_FUNC': 'basic_bn_shortcut',
             'STEM_FUNC': 'basic_bn_stem',
             'STRIDE_1X1': True,
             'TRANS_FUNC': 'bottleneck_transformation',
             'USE_GN': False,
             'WIDTH_PER_GROUP': 64},
 'RETINANET': {'ANCHOR_SCALE': 4,
               'ASPECT_RATIOS': (0.5, 1.0, 2.0),
               'BBOX_REG_BETA': 0.11,
               'BBOX_REG_WEIGHT': 1.0,
               'CLASS_SPECIFIC_BBOX': False,
               'INFERENCE_TH': 0.05,
               'LOSS_ALPHA': 0.25,
               'LOSS_GAMMA': 2.0,
               'NEGATIVE_OVERLAP': 0.4,
               'NUM_CONVS': 4,
               'POSITIVE_OVERLAP': 0.5,
               'PRE_NMS_TOP_N': 1000,
               'PRIOR_PROB': 0.01,
               'RETINANET_ON': False,
               'SCALES_PER_OCTAVE': 3,
               'SHARE_CLS_BBOX_TOWER': False,
               'SOFTMAX': False},
 'RFCN': {'PS_GRID_SIZE': 3},
 'RNG_SEED': 3,
 'ROOT_DIR': '/home/ubuntu/Detectron.pytorch',
 'RPN': {'ASPECT_RATIOS': (0.5, 1, 2),
         'CLS_ACTIVATION': 'sigmoid',
         'OUT_DIM': 512,
         'OUT_DIM_AS_IN_DIM': True,
         'RPN_ON': True,
         'SIZES': (64, 128, 256, 512),
         'STRIDE': 16},
 'SOLVER': {'BASE_LR': 2e-05,
            'BIAS_DOUBLE_LR': True,
            'BIAS_WEIGHT_DECAY': False,
            'GAMMA': 0.1,
            'LOG_LR_CHANGE_THRESHOLD': 1.1,
            'LRS': [],
            'LR_POLICY': 'steps_with_decay',
            'MAX_ITER': 10000,
            'MOMENTUM': 0.9,
            'SCALE_MOMENTUM': True,
            'SCALE_MOMENTUM_THRESHOLD': 1.1,
            'STEPS': [0, 5000, 8000],
            'STEP_SIZE': 30000,
            'TYPE': 'SGD',
            'WARM_UP_FACTOR': 0.3333333333333333,
            'WARM_UP_ITERS': 500,
            'WARM_UP_METHOD': 'linear',
            'WEIGHT_DECAY': 0.0001,
            'WEIGHT_DECAY_GN': 0.0},
 'TEST': {'BBOX_AUG': {'AREA_TH_HI': 32400,
                       'AREA_TH_LO': 2500,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'COORD_HEUR': 'UNION',
                       'ENABLED': False,
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False,
                       'SCORE_HEUR': 'UNION'},
          'BBOX_REG': True,
          'BBOX_VOTE': {'ENABLED': False,
                        'SCORING_METHOD': 'ID',
                        'SCORING_METHOD_BETA': 1.0,
                        'VOTE_TH': 0.8},
          'COMPETITION_MODE': True,
          'DATASETS': ('voc_2007_test',),
          'DETECTIONS_PER_IM': 100,
          'FORCE_JSON_DATASET_EVAL': False,
          'KPS_AUG': {'AREA_TH': 32400,
                      'ASPECT_RATIOS': (),
                      'ASPECT_RATIO_H_FLIP': False,
                      'ENABLED': False,
                      'HEUR': 'HM_AVG',
                      'H_FLIP': False,
                      'MAX_SIZE': 4000,
                      'SCALES': (),
                      'SCALE_H_FLIP': False,
                      'SCALE_SIZE_DEP': False},
          'MASK_AUG': {'AREA_TH': 32400,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'ENABLED': False,
                       'HEUR': 'SOFT_AVG',
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False},
          'MAX_SIZE': 1000,
          'NMS': 0.5,
          'PRECOMPUTED_PROPOSALS': False,
          'PROPOSAL_FILES': (),
          'PROPOSAL_LIMIT': 2000,
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 1000,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALE': 600,
          'SCORE_THRESH': 0.05,
          'SOFT_NMS': {'ENABLED': False, 'METHOD': 'linear', 'SIGMA': 0.5},
          'WEAK_SUPERVISE': False},
 'TRAIN': {'ASPECT_CROPPING': False,
           'ASPECT_GROUPING': True,
           'ASPECT_HI': 2,
           'ASPECT_LO': 0.5,
           'BATCH_SIZE_PER_IM': 512,
           'BBOX_INSIDE_WEIGHTS': (1.0, 1.0, 1.0, 1.0),
           'BBOX_NORMALIZE_MEANS': (0.0, 0.0, 0.0, 0.0),
           'BBOX_NORMALIZE_STDS': (0.1, 0.1, 0.2, 0.2),
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'COPY_CLS_TO_DET': False,
           'CROWD_FILTER_THRESH': 0.7,
           'DATASETS': (),
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'FREEZE_BOX_HEAD': True,
           'FREEZE_CONV_BODY': False,
           'FREEZE_RPN': False,
           'GT_MIN_AREA': -1,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_FILES': (),
           'RPN_BATCH_SIZE_PER_IM': 256,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 2000,
           'RPN_STRADDLE_THRESH': 0,
           'SCALES': (600,),
           'SNAPSHOT_ITERS': 2000,
           'SPATIAL_REG': False,
           'USE_FLIPPED': True,
           'WEAK_SUPERVISE': True,
           'WEAK_SUPERVISE_WITH_PRETRAIN': True},
 'VIS': False,
 'VIS_TH': 0.9}
loading annotations into memory...
Done (t=0.27s)
creating index...
index created!
INFO test_engine.py: 324: training mode? : False
INFO test_engine.py: 331: loading checkpoint Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step999.pth
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2477/3714 0.704s + 0.002s (eta: 0:14:32)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2487/3714 0.496s + 0.003s (eta: 0:10:11)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2497/3714 0.505s + 0.002s (eta: 0:10:16)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2507/3714 0.509s + 0.002s (eta: 0:10:16)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2517/3714 0.517s + 0.002s (eta: 0:10:21)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2527/3714 0.505s + 0.002s (eta: 0:10:01)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2537/3714 0.501s + 0.002s (eta: 0:09:51)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2547/3714 0.495s + 0.002s (eta: 0:09:39)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2557/3714 0.495s + 0.002s (eta: 0:09:34)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2567/3714 0.497s + 0.002s (eta: 0:09:32)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2577/3714 0.498s + 0.002s (eta: 0:09:29)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2587/3714 0.504s + 0.002s (eta: 0:09:29)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2597/3714 0.506s + 0.002s (eta: 0:09:27)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2607/3714 0.506s + 0.002s (eta: 0:09:21)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2617/3714 0.505s + 0.002s (eta: 0:09:15)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2627/3714 0.506s + 0.002s (eta: 0:09:11)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2637/3714 0.503s + 0.002s (eta: 0:09:03)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2647/3714 0.502s + 0.002s (eta: 0:08:57)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2657/3714 0.502s + 0.002s (eta: 0:08:52)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2667/3714 0.501s + 0.002s (eta: 0:08:46)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2677/3714 0.501s + 0.002s (eta: 0:08:41)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2687/3714 0.501s + 0.002s (eta: 0:08:36)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2697/3714 0.502s + 0.002s (eta: 0:08:32)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2707/3714 0.504s + 0.002s (eta: 0:08:29)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2717/3714 0.504s + 0.002s (eta: 0:08:24)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2727/3714 0.504s + 0.002s (eta: 0:08:19)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2737/3714 0.503s + 0.002s (eta: 0:08:12)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2747/3714 0.500s + 0.002s (eta: 0:08:05)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2757/3714 0.500s + 0.002s (eta: 0:08:00)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2767/3714 0.498s + 0.002s (eta: 0:07:53)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2777/3714 0.499s + 0.002s (eta: 0:07:48)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2787/3714 0.501s + 0.002s (eta: 0:07:45)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2797/3714 0.502s + 0.002s (eta: 0:07:41)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2807/3714 0.501s + 0.002s (eta: 0:07:36)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2817/3714 0.501s + 0.002s (eta: 0:07:31)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2827/3714 0.502s + 0.002s (eta: 0:07:26)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2837/3714 0.502s + 0.002s (eta: 0:07:21)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2847/3714 0.501s + 0.002s (eta: 0:07:16)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2857/3714 0.501s + 0.002s (eta: 0:07:11)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2867/3714 0.502s + 0.002s (eta: 0:07:07)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2877/3714 0.502s + 0.002s (eta: 0:07:01)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2887/3714 0.503s + 0.002s (eta: 0:06:57)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2897/3714 0.502s + 0.002s (eta: 0:06:52)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2907/3714 0.503s + 0.002s (eta: 0:06:47)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2917/3714 0.503s + 0.002s (eta: 0:06:42)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2927/3714 0.505s + 0.002s (eta: 0:06:38)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2937/3714 0.504s + 0.002s (eta: 0:06:33)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2947/3714 0.504s + 0.002s (eta: 0:06:28)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2957/3714 0.506s + 0.002s (eta: 0:06:24)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2967/3714 0.506s + 0.002s (eta: 0:06:19)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2977/3714 0.505s + 0.002s (eta: 0:06:13)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2987/3714 0.506s + 0.002s (eta: 0:06:09)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2997/3714 0.506s + 0.002s (eta: 0:06:04)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3007/3714 0.506s + 0.002s (eta: 0:05:58)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3017/3714 0.506s + 0.002s (eta: 0:05:53)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3027/3714 0.505s + 0.002s (eta: 0:05:47)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3037/3714 0.505s + 0.002s (eta: 0:05:43)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3047/3714 0.505s + 0.002s (eta: 0:05:38)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3057/3714 0.506s + 0.002s (eta: 0:05:33)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3067/3714 0.506s + 0.002s (eta: 0:05:28)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3077/3714 0.505s + 0.002s (eta: 0:05:23)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3087/3714 0.506s + 0.002s (eta: 0:05:18)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3097/3714 0.505s + 0.002s (eta: 0:05:12)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3107/3714 0.505s + 0.002s (eta: 0:05:07)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3117/3714 0.505s + 0.002s (eta: 0:05:02)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3127/3714 0.505s + 0.002s (eta: 0:04:57)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3137/3714 0.505s + 0.002s (eta: 0:04:52)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3147/3714 0.505s + 0.002s (eta: 0:04:47)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3157/3714 0.505s + 0.002s (eta: 0:04:42)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3167/3714 0.505s + 0.002s (eta: 0:04:37)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3177/3714 0.506s + 0.002s (eta: 0:04:32)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3187/3714 0.506s + 0.002s (eta: 0:04:27)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3197/3714 0.506s + 0.002s (eta: 0:04:22)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3207/3714 0.506s + 0.002s (eta: 0:04:17)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3217/3714 0.505s + 0.002s (eta: 0:04:12)
)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3227/3714 0.492s + 0.002s (eta: 0:04:00)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3237/3714 0.493s + 0.002s (eta: 0:03:55)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3247/3714 0.493s + 0.002s (eta: 0:03:51)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3257/3714 0.493s + 0.002s (eta: 0:03:46)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3267/3714 0.493s + 0.002s (eta: 0:03:41)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3277/3714 0.493s + 0.002s (eta: 0:03:36)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3287/3714 0.493s + 0.002s (eta: 0:03:31)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3297/3714 0.493s + 0.002s (eta: 0:03:26)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3307/3714 0.494s + 0.002s (eta: 0:03:21)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3317/3714 0.494s + 0.002s (eta: 0:03:16)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3327/3714 0.494s + 0.002s (eta: 0:03:11)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3337/3714 0.494s + 0.002s (eta: 0:03:06)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3347/3714 0.494s + 0.002s (eta: 0:03:01)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3357/3714 0.494s + 0.002s (eta: 0:02:56)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3367/3714 0.494s + 0.002s (eta: 0:02:51)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3377/3714 0.493s + 0.002s (eta: 0:02:46)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3387/3714 0.493s + 0.002s (eta: 0:02:41)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3397/3714 0.493s + 0.002s (eta: 0:02:36)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3407/3714 0.493s + 0.002s (eta: 0:02:31)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3417/3714 0.493s + 0.002s (eta: 0:02:26)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3427/3714 0.492s + 0.002s (eta: 0:02:21)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3437/3714 0.492s + 0.002s (eta: 0:02:16)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3447/3714 0.492s + 0.002s (eta: 0:02:11)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3457/3714 0.492s + 0.002s (eta: 0:02:06)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3467/3714 0.492s + 0.002s (eta: 0:02:02)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3477/3714 0.492s + 0.002s (eta: 0:01:57)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3487/3714 0.492s + 0.002s (eta: 0:01:52)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3497/3714 0.492s + 0.002s (eta: 0:01:47)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3507/3714 0.492s + 0.002s (eta: 0:01:42)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3517/3714 0.492s + 0.002s (eta: 0:01:37)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3527/3714 0.492s + 0.002s (eta: 0:01:32)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3537/3714 0.492s + 0.002s (eta: 0:01:27)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3547/3714 0.492s + 0.002s (eta: 0:01:22)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3557/3714 0.491s + 0.002s (eta: 0:01:17)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3567/3714 0.491s + 0.002s (eta: 0:01:12)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3577/3714 0.491s + 0.002s (eta: 0:01:07)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3587/3714 0.491s + 0.002s (eta: 0:01:02)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3597/3714 0.491s + 0.002s (eta: 0:00:57)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3607/3714 0.492s + 0.002s (eta: 0:00:52)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3617/3714 0.492s + 0.002s (eta: 0:00:47)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3627/3714 0.492s + 0.002s (eta: 0:00:43)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3637/3714 0.492s + 0.002s (eta: 0:00:38)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3647/3714 0.493s + 0.002s (eta: 0:00:33)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3657/3714 0.493s + 0.002s (eta: 0:00:28)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3667/3714 0.493s + 0.002s (eta: 0:00:23)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3677/3714 0.493s + 0.002s (eta: 0:00:18)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3687/3714 0.493s + 0.002s (eta: 0:00:13)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3697/3714 0.494s + 0.002s (eta: 0:00:08)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3707/3714 0.494s + 0.002s (eta: 0:00:03)
INFO test_engine.py: 314: Wrote detections to: /home/ubuntu/Detectron.pytorch/Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_2476_3714.pkl
/home/ubuntu/anaconda3/envs/pytorch41/lib/python3.7/site-packages/torch/nn/functional.py:1890: UserWarning: nn.functional.upsample is deprecated. Use nn.functional.interpolate instead.
  warnings.warn("nn.functional.upsample is deprecated. Use nn.functional.interpolate instead.")

INFO subprocess.py: 129: # ---------------------------------------------------------------------------- #
INFO subprocess.py: 131: stdout of subprocess 3 with range [3715, 4952]
INFO subprocess.py: 133: # ---------------------------------------------------------------------------- #
INFO test_net.py:  72: Called with args:
INFO test_net.py:  73: Namespace(cfg_file='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_config.yaml', dataset=None, load_ckpt='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step999.pth', load_detectron=None, multi_gpu_testing=False, num_classes=None, output_dir='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test', range=[3714, 4952], set_cfgs=['TEST.DATASETS', '("voc_2007_test",)'], vis=False)
INFO test_net.py: 130: Testing with config:
INFO test_net.py: 131: {'BBOX_XFORM_CLIP': 4.135166556742356,
 'CROP_RESIZE_WITH_MAX_POOL': True,
 'CUDA': False,
 'DATA_DIR': '/home/ubuntu/Detectron.pytorch/data',
 'DATA_LOADER': {'NUM_THREADS': 4},
 'DEBUG': False,
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXPECTED_RESULTS': [],
 'EXPECTED_RESULTS_ATOL': 0.005,
 'EXPECTED_RESULTS_EMAIL': '',
 'EXPECTED_RESULTS_RTOL': 0.1,
 'FAST_RCNN': {'BOX_OUT_STREAMS': 1,
               'CONV_HEAD_DIM': 256,
               'MLP_HEAD_DIM': 1024,
               'NUM_STACKED_CONVS': 4,
               'ROI_BOX_HEAD': 'fast_rcnn_heads.roi_2mlp_head',
               'ROI_XFORM_METHOD': 'RoIAlign',
               'ROI_XFORM_RESOLUTION': 7,
               'ROI_XFORM_SAMPLING_RATIO': 2},
 'FPN': {'COARSEST_STRIDE': 32,
         'DIM': 256,
         'EXTRA_CONV_LEVELS': False,
         'FPN_ON': True,
         'MULTILEVEL_ROIS': True,
         'MULTILEVEL_RPN': True,
         'ROI_CANONICAL_LEVEL': 4,
         'ROI_CANONICAL_SCALE': 224,
         'ROI_MAX_LEVEL': 5,
         'ROI_MIN_LEVEL': 2,
         'RPN_ANCHOR_START_SIZE': 32,
         'RPN_ASPECT_RATIOS': (0.5, 1, 2),
         'RPN_COLLECT_SCALE': 1,
         'RPN_MAX_LEVEL': 6,
         'RPN_MIN_LEVEL': 2,
         'USE_GN': False,
         'ZERO_INIT_LATERAL': False},
 'GROUP_NORM': {'DIM_PER_GP': -1, 'EPSILON': 1e-05, 'NUM_GROUPS': 32},
 'KRCNN': {'CONV_HEAD_DIM': 256,
           'CONV_HEAD_KERNEL': 3,
           'CONV_INIT': 'GaussianFill',
           'DECONV_DIM': 256,
           'DECONV_KERNEL': 4,
           'DILATION': 1,
           'HEATMAP_SIZE': -1,
           'INFERENCE_MIN_SIZE': 0,
           'KEYPOINT_CONFIDENCE': 'bbox',
           'LOSS_WEIGHT': 1.0,
           'MIN_KEYPOINT_COUNT_FOR_VALID_MINIBATCH': 20,
           'NMS_OKS': False,
           'NORMALIZE_BY_VISIBLE_KEYPOINTS': True,
           'NUM_KEYPOINTS': -1,
           'NUM_STACKED_CONVS': 8,
           'ROI_KEYPOINTS_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'UP_SCALE': -1,
           'USE_DECONV': False,
           'USE_DECONV_OUTPUT': False},
 'MATLAB': 'matlab',
 'MODEL': {'BBOX_REG_WEIGHTS': (10.0, 10.0, 5.0, 5.0),
           'CLS_AGNOSTIC_BBOX_REG': False,
           'CONV_BODY': 'FPN.fpn_ResNet101_conv5_body',
           'FASTER_RCNN': True,
           'KEYPOINTS_ON': False,
           'LOAD_IMAGENET_PRETRAINED_WEIGHTS': True,
           'MASK_ON': False,
           'NUM_CLASSES': 21,
           'RPN_ONLY': False,
           'SHARE_RES5': False,
           'TYPE': 'generalized_rcnn',
           'UNSUPERVISED_POSE': False},
 'MRCNN': {'CLS_SPECIFIC_MASK': True,
           'CONV_INIT': 'GaussianFill',
           'DILATION': 2,
           'DIM_REDUCED': 256,
           'MEMORY_EFFICIENT_LOSS': True,
           'RESOLUTION': 14,
           'ROI_MASK_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'THRESH_BINARIZE': 0.5,
           'UPSAMPLE_RATIO': 1,
           'USE_FC_OUTPUT': False,
           'WEIGHT_LOSS_MASK': 1.0},
 'NUM_GPUS': 8,
 'OUTPUT_DIR': 'Outputs',
 'PIXEL_MEANS': array([[[102.9801, 115.9465, 122.7717]]]),
 'POOLING_MODE': 'crop',
 'POOLING_SIZE': 7,
 'PYTORCH_VERSION_LESS_THAN_040': False,
 'RESNETS': {'FREEZE_AT': 2,
             'IMAGENET_PRETRAINED_WEIGHTS': 'data/pretrained_model/resnet101_caffe.pth',
             'NUM_GROUPS': 1,
             'RES5_DILATION': 1,
             'SHORTCUT_FUNC': 'basic_bn_shortcut',
             'STEM_FUNC': 'basic_bn_stem',
             'STRIDE_1X1': True,
             'TRANS_FUNC': 'bottleneck_transformation',
             'USE_GN': False,
             'WIDTH_PER_GROUP': 64},
 'RETINANET': {'ANCHOR_SCALE': 4,
               'ASPECT_RATIOS': (0.5, 1.0, 2.0),
               'BBOX_REG_BETA': 0.11,
               'BBOX_REG_WEIGHT': 1.0,
               'CLASS_SPECIFIC_BBOX': False,
               'INFERENCE_TH': 0.05,
               'LOSS_ALPHA': 0.25,
               'LOSS_GAMMA': 2.0,
               'NEGATIVE_OVERLAP': 0.4,
               'NUM_CONVS': 4,
               'POSITIVE_OVERLAP': 0.5,
               'PRE_NMS_TOP_N': 1000,
               'PRIOR_PROB': 0.01,
               'RETINANET_ON': False,
               'SCALES_PER_OCTAVE': 3,
               'SHARE_CLS_BBOX_TOWER': False,
               'SOFTMAX': False},
 'RFCN': {'PS_GRID_SIZE': 3},
 'RNG_SEED': 3,
 'ROOT_DIR': '/home/ubuntu/Detectron.pytorch',
 'RPN': {'ASPECT_RATIOS': (0.5, 1, 2),
         'CLS_ACTIVATION': 'sigmoid',
         'OUT_DIM': 512,
         'OUT_DIM_AS_IN_DIM': True,
         'RPN_ON': True,
         'SIZES': (64, 128, 256, 512),
         'STRIDE': 16},
 'SOLVER': {'BASE_LR': 2e-05,
            'BIAS_DOUBLE_LR': True,
            'BIAS_WEIGHT_DECAY': False,
            'GAMMA': 0.1,
            'LOG_LR_CHANGE_THRESHOLD': 1.1,
            'LRS': [],
            'LR_POLICY': 'steps_with_decay',
            'MAX_ITER': 10000,
            'MOMENTUM': 0.9,
            'SCALE_MOMENTUM': True,
            'SCALE_MOMENTUM_THRESHOLD': 1.1,
            'STEPS': [0, 5000, 8000],
            'STEP_SIZE': 30000,
            'TYPE': 'SGD',
            'WARM_UP_FACTOR': 0.3333333333333333,
            'WARM_UP_ITERS': 500,
            'WARM_UP_METHOD': 'linear',
            'WEIGHT_DECAY': 0.0001,
            'WEIGHT_DECAY_GN': 0.0},
 'TEST': {'BBOX_AUG': {'AREA_TH_HI': 32400,
                       'AREA_TH_LO': 2500,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'COORD_HEUR': 'UNION',
                       'ENABLED': False,
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False,
                       'SCORE_HEUR': 'UNION'},
          'BBOX_REG': True,
          'BBOX_VOTE': {'ENABLED': False,
                        'SCORING_METHOD': 'ID',
                        'SCORING_METHOD_BETA': 1.0,
                        'VOTE_TH': 0.8},
          'COMPETITION_MODE': True,
          'DATASETS': ('voc_2007_test',),
          'DETECTIONS_PER_IM': 100,
          'FORCE_JSON_DATASET_EVAL': False,
          'KPS_AUG': {'AREA_TH': 32400,
                      'ASPECT_RATIOS': (),
                      'ASPECT_RATIO_H_FLIP': False,
                      'ENABLED': False,
                      'HEUR': 'HM_AVG',
                      'H_FLIP': False,
                      'MAX_SIZE': 4000,
                      'SCALES': (),
                      'SCALE_H_FLIP': False,
                      'SCALE_SIZE_DEP': False},
          'MASK_AUG': {'AREA_TH': 32400,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'ENABLED': False,
                       'HEUR': 'SOFT_AVG',
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False},
          'MAX_SIZE': 1000,
          'NMS': 0.5,
          'PRECOMPUTED_PROPOSALS': False,
          'PROPOSAL_FILES': (),
          'PROPOSAL_LIMIT': 2000,
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 1000,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALE': 600,
          'SCORE_THRESH': 0.05,
          'SOFT_NMS': {'ENABLED': False, 'METHOD': 'linear', 'SIGMA': 0.5},
          'WEAK_SUPERVISE': False},
 'TRAIN': {'ASPECT_CROPPING': False,
           'ASPECT_GROUPING': True,
           'ASPECT_HI': 2,
           'ASPECT_LO': 0.5,
           'BATCH_SIZE_PER_IM': 512,
           'BBOX_INSIDE_WEIGHTS': (1.0, 1.0, 1.0, 1.0),
           'BBOX_NORMALIZE_MEANS': (0.0, 0.0, 0.0, 0.0),
           'BBOX_NORMALIZE_STDS': (0.1, 0.1, 0.2, 0.2),
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'COPY_CLS_TO_DET': False,
           'CROWD_FILTER_THRESH': 0.7,
           'DATASETS': (),
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'FREEZE_BOX_HEAD': True,
           'FREEZE_CONV_BODY': False,
           'FREEZE_RPN': False,
           'GT_MIN_AREA': -1,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_FILES': (),
           'RPN_BATCH_SIZE_PER_IM': 256,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 2000,
           'RPN_STRADDLE_THRESH': 0,
           'SCALES': (600,),
           'SNAPSHOT_ITERS': 2000,
           'SPATIAL_REG': False,
           'USE_FLIPPED': True,
           'WEAK_SUPERVISE': True,
           'WEAK_SUPERVISE_WITH_PRETRAIN': True},
 'VIS': False,
 'VIS_TH': 0.9}
loading annotations into memory...
Done (t=0.18s)
creating index...
index created!
INFO test_engine.py: 324: training mode? : False
INFO test_engine.py: 331: loading checkpoint Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step999.pth
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3715/4952 0.796s + 0.002s (eta: 0:16:26)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3725/4952 0.530s + 0.001s (eta: 0:10:52)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3735/4952 0.497s + 0.001s (eta: 0:10:06)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3745/4952 0.489s + 0.002s (eta: 0:09:51)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3755/4952 0.489s + 0.002s (eta: 0:09:47)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3765/4952 0.488s + 0.002s (eta: 0:09:40)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3775/4952 0.489s + 0.001s (eta: 0:09:37)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3785/4952 0.497s + 0.001s (eta: 0:09:42)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3795/4952 0.495s + 0.001s (eta: 0:09:34)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3805/4952 0.500s + 0.001s (eta: 0:09:35)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3815/4952 0.502s + 0.002s (eta: 0:09:32)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3825/4952 0.504s + 0.002s (eta: 0:09:30)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3835/4952 0.506s + 0.002s (eta: 0:09:27)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3845/4952 0.505s + 0.002s (eta: 0:09:20)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3855/4952 0.508s + 0.002s (eta: 0:09:19)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3865/4952 0.508s + 0.002s (eta: 0:09:13)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3875/4952 0.507s + 0.002s (eta: 0:09:07)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3885/4952 0.505s + 0.002s (eta: 0:09:00)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3895/4952 0.505s + 0.002s (eta: 0:08:55)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3905/4952 0.504s + 0.002s (eta: 0:08:49)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3915/4952 0.505s + 0.002s (eta: 0:08:45)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3925/4952 0.506s + 0.002s (eta: 0:08:41)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3935/4952 0.506s + 0.002s (eta: 0:08:36)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3945/4952 0.505s + 0.002s (eta: 0:08:30)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3955/4952 0.506s + 0.002s (eta: 0:08:26)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3965/4952 0.506s + 0.002s (eta: 0:08:21)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3975/4952 0.507s + 0.002s (eta: 0:08:17)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3985/4952 0.507s + 0.002s (eta: 0:08:11)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3995/4952 0.507s + 0.002s (eta: 0:08:07)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4005/4952 0.507s + 0.002s (eta: 0:08:01)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4015/4952 0.507s + 0.002s (eta: 0:07:56)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4025/4952 0.508s + 0.002s (eta: 0:07:52)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4035/4952 0.508s + 0.002s (eta: 0:07:47)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4045/4952 0.509s + 0.002s (eta: 0:07:43)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4055/4952 0.508s + 0.002s (eta: 0:07:37)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4065/4952 0.507s + 0.002s (eta: 0:07:31)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4075/4952 0.507s + 0.002s (eta: 0:07:26)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4085/4952 0.508s + 0.002s (eta: 0:07:22)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4095/4952 0.509s + 0.002s (eta: 0:07:18)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4105/4952 0.510s + 0.002s (eta: 0:07:14)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4115/4952 0.511s + 0.002s (eta: 0:07:09)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4125/4952 0.509s + 0.002s (eta: 0:07:02)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4135/4952 0.510s + 0.002s (eta: 0:06:58)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4145/4952 0.510s + 0.002s (eta: 0:06:52)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4155/4952 0.510s + 0.002s (eta: 0:06:48)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4165/4952 0.510s + 0.002s (eta: 0:06:42)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4175/4952 0.509s + 0.002s (eta: 0:06:36)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4185/4952 0.510s + 0.002s (eta: 0:06:32)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4195/4952 0.511s + 0.002s (eta: 0:06:28)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4205/4952 0.511s + 0.002s (eta: 0:06:23)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4215/4952 0.511s + 0.002s (eta: 0:06:17)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4225/4952 0.511s + 0.002s (eta: 0:06:12)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4235/4952 0.510s + 0.002s (eta: 0:06:07)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4245/4952 0.510s + 0.002s (eta: 0:06:01)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4255/4952 0.509s + 0.002s (eta: 0:05:56)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4265/4952 0.510s + 0.002s (eta: 0:05:51)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4275/4952 0.511s + 0.002s (eta: 0:05:47)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4285/4952 0.511s + 0.002s (eta: 0:05:42)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4295/4952 0.511s + 0.002s (eta: 0:05:36)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4305/4952 0.511s + 0.002s (eta: 0:05:32)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4315/4952 0.511s + 0.002s (eta: 0:05:27)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4325/4952 0.511s + 0.002s (eta: 0:05:21)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4335/4952 0.510s + 0.002s (eta: 0:05:15)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4345/4952 0.510s + 0.002s (eta: 0:05:10)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4355/4952 0.509s + 0.002s (eta: 0:05:05)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4365/4952 0.508s + 0.002s (eta: 0:04:59)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4375/4952 0.508s + 0.002s (eta: 0:04:54)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4385/4952 0.508s + 0.002s (eta: 0:04:49)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4395/4952 0.508s + 0.002s (eta: 0:04:44)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4405/4952 0.508s + 0.002s (eta: 0:04:39)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4415/4952 0.508s + 0.002s (eta: 0:04:33)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4425/4952 0.507s + 0.002s (eta: 0:04:28)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4435/4952 0.507s + 0.002s (eta: 0:04:23)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4445/4952 0.507s + 0.002s (eta: 0:04:17)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4455/4952 0.506s + 0.002s (eta: 0:04:12)
)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4465/4952 0.498s + 0.002s (eta: 0:04:03)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4475/4952 0.498s + 0.002s (eta: 0:03:58)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4485/4952 0.498s + 0.002s (eta: 0:03:53)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4495/4952 0.498s + 0.002s (eta: 0:03:48)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4505/4952 0.499s + 0.002s (eta: 0:03:43)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4515/4952 0.499s + 0.002s (eta: 0:03:38)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4525/4952 0.500s + 0.002s (eta: 0:03:34)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4535/4952 0.500s + 0.002s (eta: 0:03:29)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4545/4952 0.500s + 0.002s (eta: 0:03:24)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4555/4952 0.500s + 0.002s (eta: 0:03:19)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4565/4952 0.500s + 0.002s (eta: 0:03:14)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4575/4952 0.500s + 0.002s (eta: 0:03:09)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4585/4952 0.499s + 0.002s (eta: 0:03:03)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4595/4952 0.500s + 0.002s (eta: 0:02:59)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4605/4952 0.500s + 0.002s (eta: 0:02:54)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4615/4952 0.500s + 0.002s (eta: 0:02:49)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4625/4952 0.501s + 0.002s (eta: 0:02:44)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4635/4952 0.501s + 0.002s (eta: 0:02:39)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4645/4952 0.501s + 0.002s (eta: 0:02:34)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4655/4952 0.500s + 0.002s (eta: 0:02:29)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4665/4952 0.500s + 0.002s (eta: 0:02:24)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4675/4952 0.500s + 0.002s (eta: 0:02:18)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4685/4952 0.499s + 0.002s (eta: 0:02:13)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4695/4952 0.499s + 0.002s (eta: 0:02:08)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4705/4952 0.499s + 0.002s (eta: 0:02:03)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4715/4952 0.499s + 0.002s (eta: 0:01:58)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4725/4952 0.499s + 0.002s (eta: 0:01:53)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4735/4952 0.499s + 0.002s (eta: 0:01:48)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4745/4952 0.499s + 0.002s (eta: 0:01:43)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4755/4952 0.499s + 0.002s (eta: 0:01:38)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4765/4952 0.499s + 0.002s (eta: 0:01:33)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4775/4952 0.499s + 0.002s (eta: 0:01:28)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4785/4952 0.499s + 0.002s (eta: 0:01:23)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4795/4952 0.499s + 0.002s (eta: 0:01:18)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4805/4952 0.499s + 0.002s (eta: 0:01:13)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4815/4952 0.500s + 0.002s (eta: 0:01:08)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4825/4952 0.500s + 0.002s (eta: 0:01:03)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4835/4952 0.499s + 0.002s (eta: 0:00:58)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4845/4952 0.500s + 0.002s (eta: 0:00:53)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4855/4952 0.499s + 0.002s (eta: 0:00:48)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4865/4952 0.499s + 0.002s (eta: 0:00:43)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4875/4952 0.499s + 0.002s (eta: 0:00:38)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4885/4952 0.499s + 0.002s (eta: 0:00:33)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4895/4952 0.499s + 0.002s (eta: 0:00:28)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4905/4952 0.499s + 0.002s (eta: 0:00:23)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4915/4952 0.498s + 0.002s (eta: 0:00:18)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4925/4952 0.498s + 0.002s (eta: 0:00:13)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4935/4952 0.498s + 0.002s (eta: 0:00:08)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4945/4952 0.498s + 0.002s (eta: 0:00:03)
INFO test_engine.py: 314: Wrote detections to: /home/ubuntu/Detectron.pytorch/Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_3714_4952.pkl
/home/ubuntu/anaconda3/envs/pytorch41/lib/python3.7/site-packages/torch/nn/functional.py:1890: UserWarning: nn.functional.upsample is deprecated. Use nn.functional.interpolate instead.
  warnings.warn("nn.functional.upsample is deprecated. Use nn.functional.interpolate instead.")

INFO test_engine.py: 211: Wrote detections to: /home/ubuntu/Detectron.pytorch/Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detections.pkl
INFO test_engine.py: 161: Total inference time: 644.630s
INFO task_evaluation.py:  77: Evaluating detections
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: aeroplane
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: bicycle
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: bird
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: boat
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: bottle
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: bus
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: car
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: cat
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: chair
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: cow
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: diningtable
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: dog
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: horse
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: motorbike
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: person
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: pottedplant
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: sheep
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: sofa
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: train
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: tvmonitor
INFO voc_dataset_evaluator.py: 115: VOC07 metric? Yes
INFO voc_eval.py: 171: [1327 1370  465 ... 1528  253  940]
INFO voc_dataset_evaluator.py: 127: AP for aeroplane = 0.7708
INFO voc_eval.py: 171: [326 207 126 ... 771 966  36]
INFO voc_dataset_evaluator.py: 127: AP for bicycle = 0.7841
INFO voc_eval.py: 171: [1309 1692 2031 ...   58 1037 1841]
INFO voc_dataset_evaluator.py: 127: AP for bird = 0.7856
INFO voc_eval.py: 171: [1675 2366   86 ...  243 1235 1479]
INFO voc_dataset_evaluator.py: 127: AP for boat = 0.6250
INFO voc_eval.py: 171: [1068 2001  701 ... 1226 1067 2618]
INFO voc_dataset_evaluator.py: 127: AP for bottle = 0.6764
INFO voc_eval.py: 171: [ 391 1019  324 ...  486  765  325]
INFO voc_dataset_evaluator.py: 127: AP for bus = 0.7738
INFO voc_eval.py: 171: [5906 3952 3871 ... 3340 2734 2958]
INFO voc_dataset_evaluator.py: 127: AP for car = 0.8552
INFO voc_eval.py: 171: [ 937 1023  629 ...  202 1015  506]
INFO voc_dataset_evaluator.py: 127: AP for cat = 0.8608
INFO voc_eval.py: 171: [ 140  139 3462 ... 4619 2878  698]
INFO voc_dataset_evaluator.py: 127: AP for chair = 0.6143
INFO voc_eval.py: 171: [1459 1765  840 ... 1657 1412 1169]
INFO voc_dataset_evaluator.py: 127: AP for cow = 0.7636
INFO voc_eval.py: 171: [1045 1440 2176 ... 2919 1143  916]
INFO voc_dataset_evaluator.py: 127: AP for diningtable = 0.6190
INFO voc_eval.py: 171: [ 127  514 1297 ...  623 1342  689]
INFO voc_dataset_evaluator.py: 127: AP for dog = 0.8274
INFO voc_eval.py: 171: [  27  162  544 ...  214   71 1102]
INFO voc_dataset_evaluator.py: 127: AP for horse = 0.8244
INFO voc_eval.py: 171: [1165  350  235 ...  699  169  186]
INFO voc_dataset_evaluator.py: 127: AP for motorbike = 0.7298
INFO voc_eval.py: 171: [21048  8144  9084 ...   333  6771  3844]
INFO voc_dataset_evaluator.py: 127: AP for person = 0.8395
INFO voc_eval.py: 171: [2116  278  491 ...  850  179 2338]
INFO voc_dataset_evaluator.py: 127: AP for pottedplant = 0.4526
INFO voc_eval.py: 171: [ 675  340  655 ... 1586 1308 1824]
INFO voc_dataset_evaluator.py: 127: AP for sheep = 0.7659
INFO voc_eval.py: 171: [1251  827  983 ...  778 1121  832]
INFO voc_dataset_evaluator.py: 127: AP for sofa = 0.7010
INFO voc_eval.py: 171: [ 189  590 1430 ...  520  290 1169]
INFO voc_dataset_evaluator.py: 127: AP for train = 0.7637
INFO voc_eval.py: 171: [469 287 621 312 108 702  26 445 719 238  67 591 187 411 467 827 103 508
 253 382 510 464 200 572 128 688 232 447 687 490 440 590 267 558 600  84
 256  48 297  42 473 175 761 231 349 374 847 169 166 277 492 243 675 107
 696 792 775 417 121 339 178 720 397 152 706 575 474  72 574 531  64 372
 153 262 830 304 127 500 727  83 778 338 448   8  82 724 750 733 399 635
 310 528 149  23  96 143 347  97 859 517 264 667 596 290 183 713 406 404
  22 135 805  12 179 307 141  52 529  27 401 683 787 291 628 773 311 658
 532 684 115 449  79 808 501   7 700 689 801   3 172 450 589 442 194  46
 316 145 488 795 662 319 564 655 451  95 118 505 480 441 806 530 360 776
 429 392 703 549 729 867 839 140 292 133 414 625 164  71 636 738 134 491
 693 592 850 817 295 712 841 364 864 210 848 618 215 535 819 419 104  90
 202 423 816 313 665 370 323 193 403 159 427   2 495 746 335 614 226 639
 548 486 812 459 384 731 332 813 866 708 197  77 506 220 246 602 732  70
  88 609 756 581 204 823 273 422 430 415 228 578 562 760 353  55 498 868
 252 550 541 314 786 239 328 751  86 340 385 381 435 656 345 705 366 150
 824 137 736 670 640 119 629 766 377 809 583 482 424 721 180 657 734 837
 539 739 573 356 503 845  73 833  13 716 646 443  29 154 740 206  41  40
 533 764 622 325 576 642 762 289  93 783 416 551 247 420 714 205 209  99
 234 790 641 843 156 674 694 607 105 588 162 561 359 547 344 862 126 125
 203 811 846  39 112 475 303 543 163  98 244 306 109 110 499 116 633 747
 421 661  74 342 615 659 836 322 217  56 346 146 799  50 560 828 436 788
 514 838 437 737 438 579 174 148 709 466 157 326  21 860 651 851 771 201
 279 650 361  38  89 386 266  53 832 701 723 476 690 692 777 810 743 569
 594 387 198 507 350 678 854   5 542 605 511 249 426 763 631 184 610 660
 373 341 599 431 278 227 142 671 768 767 229 418 122 752 324 516 518 568
 699 281  59 481 123 130 248 791 780 654 224 168 685  60 380 317 241 834
 375 255 849 251 793 177 230 352 613 457 398 637  62 240 666 679 730 362
 221 379 351 470 242 355 616 214 453 456 102  37 452 512 412 759 471 493
 136 170 446 318 638 627 425 781 207 545 348 405  44 513  31 410  69  85
 726 151 158 597 546 797  10 522 192 784 358 155  32   9 369  49 537 363
 212 718 413 774 748 394 165 814 270 333 829  75 196 282 484  57 124 190
 208 630 626 608 181 236 301 383 559  68 254 745 428 485 434 691 552 540
 497 804 785  61  33 754 468 389  81 489  54 120  28 173 825 271 315 722
 648 556  19 132 820 826 525  43 619 796 460 757 652 515 649   0 320  66
 211 496 223 463 844 853 444 577  30 263  78 586 293 294 538 131 300 611
 213 265 144 815 571 632 865 570 711 225 283 749 710 458 280 565 284 309
 465 704 634 330 189 117 794 765 617  91 758 343 779 199 393 477 502 802
 603 113 302 408 744 288  24 432 147 698 479 534 233 644 299 250 331 566
 409  18 296 237 852 818 337 555 695 371  25 557 842 329 161 368 285 741
 219 327 357 606  11 673  20 268 782 858 536 494 216  47 526 861 664 258
 682 390 395  76 645 454 245   1 191 697 821 869 681 391 407 647 800 563
 276 544 742 402 218 669 176 286 455 715 305 735 580 367 624 680 478 195
 567  51 822 504 807 139 483 106 308 653  35 798 831 186 462 461 400 509
 160  58 439  17 593  34 185 100 114 259 222 257 595 686 598 235  14 298
 840 472 612 582 676  63 171 272 707 803 672 523 769 835 585 261 388 601
 668 857  87 519 855 554   4 789 856 487 527 524 623 129  15 396  36 725
 584 604   6 770 643 365 376 354 520 521 274 755  16 182 321 378 167 334
 138  94  65  80 772  45 753 269 188 620 587 663 677 101 336 260 863 275
 553 433  92 717 728 111]
INFO voc_dataset_evaluator.py: 127: AP for tvmonitor = 0.7262
INFO voc_dataset_evaluator.py: 130: Mean AP = 0.7380
INFO voc_dataset_evaluator.py: 131: ~~~~~~~~
INFO voc_dataset_evaluator.py: 132: Results:
INFO voc_dataset_evaluator.py: 134: 0.771
INFO voc_dataset_evaluator.py: 134: 0.784
INFO voc_dataset_evaluator.py: 134: 0.786
INFO voc_dataset_evaluator.py: 134: 0.625
INFO voc_dataset_evaluator.py: 134: 0.676
INFO voc_dataset_evaluator.py: 134: 0.774
INFO voc_dataset_evaluator.py: 134: 0.855
INFO voc_dataset_evaluator.py: 134: 0.861
INFO voc_dataset_evaluator.py: 134: 0.614
INFO voc_dataset_evaluator.py: 134: 0.764
INFO voc_dataset_evaluator.py: 134: 0.619
INFO voc_dataset_evaluator.py: 134: 0.827
INFO voc_dataset_evaluator.py: 134: 0.824
INFO voc_dataset_evaluator.py: 134: 0.730
INFO voc_dataset_evaluator.py: 134: 0.840
INFO voc_dataset_evaluator.py: 134: 0.453
INFO voc_dataset_evaluator.py: 134: 0.766
INFO voc_dataset_evaluator.py: 134: 0.701
INFO voc_dataset_evaluator.py: 134: 0.764
INFO voc_dataset_evaluator.py: 134: 0.726
INFO voc_dataset_evaluator.py: 135: 0.738
INFO voc_dataset_evaluator.py: 136: ~~~~~~~~
INFO voc_dataset_evaluator.py: 137: 
INFO voc_dataset_evaluator.py: 138: ----------------------------------------------------------
INFO voc_dataset_evaluator.py: 139: Results computed with the **unofficial** Python eval code.
INFO voc_dataset_evaluator.py: 140: Results should be very close to the official MATLAB code.
INFO voc_dataset_evaluator.py: 141: Use `./tools/reval.py --matlab ...` for your paper.
INFO voc_dataset_evaluator.py: 142: -- Thanks, The Management
INFO voc_dataset_evaluator.py: 143: ----------------------------------------------------------
INFO task_evaluation.py:  63: Evaluating bounding boxes is done!
INFO task_evaluation.py: 189: copypaste: Dataset: voc_2007_test
INFO task_evaluation.py: 191: copypaste: Task: box
INFO task_evaluation.py: 194: copypaste: AP,AP50,AP75,APs,APm,APl
INFO task_evaluation.py: 195: copypaste: -1.0000,-1.0000,-1.0000,-1.0000,-1.0000,-1.0000
Start testing on iteration 1999
INFO test_net.py:  72: Called with args:
INFO test_net.py:  73: Namespace(cfg_file='configs/dt/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv.yaml', dataset='voc2007', load_ckpt='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step1999.pth', load_detectron=None, multi_gpu_testing=True, num_classes=None, output_dir=None, range=None, set_cfgs=[], vis=False)
INFO test_net.py:  83: Automatically set output directory to Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test
INFO test_net.py: 130: Testing with config:
INFO test_net.py: 131: {'BBOX_XFORM_CLIP': 4.135166556742356,
 'CROP_RESIZE_WITH_MAX_POOL': True,
 'CUDA': False,
 'DATA_DIR': '/home/ubuntu/Detectron.pytorch/data',
 'DATA_LOADER': {'NUM_THREADS': 4},
 'DEBUG': False,
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXPECTED_RESULTS': [],
 'EXPECTED_RESULTS_ATOL': 0.005,
 'EXPECTED_RESULTS_EMAIL': '',
 'EXPECTED_RESULTS_RTOL': 0.1,
 'FAST_RCNN': {'BOX_OUT_STREAMS': 1,
               'CONV_HEAD_DIM': 256,
               'MLP_HEAD_DIM': 1024,
               'NUM_STACKED_CONVS': 4,
               'ROI_BOX_HEAD': 'fast_rcnn_heads.roi_2mlp_head',
               'ROI_XFORM_METHOD': 'RoIAlign',
               'ROI_XFORM_RESOLUTION': 7,
               'ROI_XFORM_SAMPLING_RATIO': 2},
 'FPN': {'COARSEST_STRIDE': 32,
         'DIM': 256,
         'EXTRA_CONV_LEVELS': False,
         'FPN_ON': True,
         'MULTILEVEL_ROIS': True,
         'MULTILEVEL_RPN': True,
         'ROI_CANONICAL_LEVEL': 4,
         'ROI_CANONICAL_SCALE': 224,
         'ROI_MAX_LEVEL': 5,
         'ROI_MIN_LEVEL': 2,
         'RPN_ANCHOR_START_SIZE': 32,
         'RPN_ASPECT_RATIOS': (0.5, 1, 2),
         'RPN_COLLECT_SCALE': 1,
         'RPN_MAX_LEVEL': 6,
         'RPN_MIN_LEVEL': 2,
         'USE_GN': False,
         'ZERO_INIT_LATERAL': False},
 'GROUP_NORM': {'DIM_PER_GP': -1, 'EPSILON': 1e-05, 'NUM_GROUPS': 32},
 'KRCNN': {'CONV_HEAD_DIM': 256,
           'CONV_HEAD_KERNEL': 3,
           'CONV_INIT': 'GaussianFill',
           'DECONV_DIM': 256,
           'DECONV_KERNEL': 4,
           'DILATION': 1,
           'HEATMAP_SIZE': -1,
           'INFERENCE_MIN_SIZE': 0,
           'KEYPOINT_CONFIDENCE': 'bbox',
           'LOSS_WEIGHT': 1.0,
           'MIN_KEYPOINT_COUNT_FOR_VALID_MINIBATCH': 20,
           'NMS_OKS': False,
           'NORMALIZE_BY_VISIBLE_KEYPOINTS': True,
           'NUM_KEYPOINTS': -1,
           'NUM_STACKED_CONVS': 8,
           'ROI_KEYPOINTS_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'UP_SCALE': -1,
           'USE_DECONV': False,
           'USE_DECONV_OUTPUT': False},
 'MATLAB': 'matlab',
 'MODEL': {'BBOX_REG_WEIGHTS': (10.0, 10.0, 5.0, 5.0),
           'CLS_AGNOSTIC_BBOX_REG': False,
           'CONV_BODY': 'FPN.fpn_ResNet101_conv5_body',
           'FASTER_RCNN': True,
           'KEYPOINTS_ON': False,
           'LOAD_IMAGENET_PRETRAINED_WEIGHTS': True,
           'MASK_ON': False,
           'NUM_CLASSES': 21,
           'RPN_ONLY': False,
           'SHARE_RES5': False,
           'TYPE': 'generalized_rcnn',
           'UNSUPERVISED_POSE': False},
 'MRCNN': {'CLS_SPECIFIC_MASK': True,
           'CONV_INIT': 'GaussianFill',
           'DILATION': 2,
           'DIM_REDUCED': 256,
           'MEMORY_EFFICIENT_LOSS': True,
           'RESOLUTION': 14,
           'ROI_MASK_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'THRESH_BINARIZE': 0.5,
           'UPSAMPLE_RATIO': 1,
           'USE_FC_OUTPUT': False,
           'WEIGHT_LOSS_MASK': 1.0},
 'NUM_GPUS': 8,
 'OUTPUT_DIR': 'Outputs',
 'PIXEL_MEANS': array([[[102.9801, 115.9465, 122.7717]]]),
 'POOLING_MODE': 'crop',
 'POOLING_SIZE': 7,
 'PYTORCH_VERSION_LESS_THAN_040': False,
 'RESNETS': {'FREEZE_AT': 2,
             'IMAGENET_PRETRAINED_WEIGHTS': 'data/pretrained_model/resnet101_caffe.pth',
             'NUM_GROUPS': 1,
             'RES5_DILATION': 1,
             'SHORTCUT_FUNC': 'basic_bn_shortcut',
             'STEM_FUNC': 'basic_bn_stem',
             'STRIDE_1X1': True,
             'TRANS_FUNC': 'bottleneck_transformation',
             'USE_GN': False,
             'WIDTH_PER_GROUP': 64},
 'RETINANET': {'ANCHOR_SCALE': 4,
               'ASPECT_RATIOS': (0.5, 1.0, 2.0),
               'BBOX_REG_BETA': 0.11,
               'BBOX_REG_WEIGHT': 1.0,
               'CLASS_SPECIFIC_BBOX': False,
               'INFERENCE_TH': 0.05,
               'LOSS_ALPHA': 0.25,
               'LOSS_GAMMA': 2.0,
               'NEGATIVE_OVERLAP': 0.4,
               'NUM_CONVS': 4,
               'POSITIVE_OVERLAP': 0.5,
               'PRE_NMS_TOP_N': 1000,
               'PRIOR_PROB': 0.01,
               'RETINANET_ON': False,
               'SCALES_PER_OCTAVE': 3,
               'SHARE_CLS_BBOX_TOWER': False,
               'SOFTMAX': False},
 'RFCN': {'PS_GRID_SIZE': 3},
 'RNG_SEED': 3,
 'ROOT_DIR': '/home/ubuntu/Detectron.pytorch',
 'RPN': {'ASPECT_RATIOS': (0.5, 1, 2),
         'CLS_ACTIVATION': 'sigmoid',
         'OUT_DIM': 512,
         'OUT_DIM_AS_IN_DIM': True,
         'RPN_ON': True,
         'SIZES': (64, 128, 256, 512),
         'STRIDE': 16},
 'SOLVER': {'BASE_LR': 2e-05,
            'BIAS_DOUBLE_LR': True,
            'BIAS_WEIGHT_DECAY': False,
            'GAMMA': 0.1,
            'LOG_LR_CHANGE_THRESHOLD': 1.1,
            'LRS': [],
            'LR_POLICY': 'steps_with_decay',
            'MAX_ITER': 10000,
            'MOMENTUM': 0.9,
            'SCALE_MOMENTUM': True,
            'SCALE_MOMENTUM_THRESHOLD': 1.1,
            'STEPS': [0, 5000, 8000],
            'STEP_SIZE': 30000,
            'TYPE': 'SGD',
            'WARM_UP_FACTOR': 0.3333333333333333,
            'WARM_UP_ITERS': 500,
            'WARM_UP_METHOD': 'linear',
            'WEIGHT_DECAY': 0.0001,
            'WEIGHT_DECAY_GN': 0.0},
 'TEST': {'BBOX_AUG': {'AREA_TH_HI': 32400,
                       'AREA_TH_LO': 2500,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'COORD_HEUR': 'UNION',
                       'ENABLED': False,
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False,
                       'SCORE_HEUR': 'UNION'},
          'BBOX_REG': True,
          'BBOX_VOTE': {'ENABLED': False,
                        'SCORING_METHOD': 'ID',
                        'SCORING_METHOD_BETA': 1.0,
                        'VOTE_TH': 0.8},
          'COMPETITION_MODE': True,
          'DATASETS': ('voc_2007_test',),
          'DETECTIONS_PER_IM': 100,
          'FORCE_JSON_DATASET_EVAL': False,
          'KPS_AUG': {'AREA_TH': 32400,
                      'ASPECT_RATIOS': (),
                      'ASPECT_RATIO_H_FLIP': False,
                      'ENABLED': False,
                      'HEUR': 'HM_AVG',
                      'H_FLIP': False,
                      'MAX_SIZE': 4000,
                      'SCALES': (),
                      'SCALE_H_FLIP': False,
                      'SCALE_SIZE_DEP': False},
          'MASK_AUG': {'AREA_TH': 32400,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'ENABLED': False,
                       'HEUR': 'SOFT_AVG',
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False},
          'MAX_SIZE': 1000,
          'NMS': 0.5,
          'PRECOMPUTED_PROPOSALS': False,
          'PROPOSAL_FILES': (),
          'PROPOSAL_LIMIT': 2000,
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 1000,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALE': 600,
          'SCORE_THRESH': 0.05,
          'SOFT_NMS': {'ENABLED': False, 'METHOD': 'linear', 'SIGMA': 0.5},
          'WEAK_SUPERVISE': False},
 'TRAIN': {'ASPECT_CROPPING': False,
           'ASPECT_GROUPING': True,
           'ASPECT_HI': 2,
           'ASPECT_LO': 0.5,
           'BATCH_SIZE_PER_IM': 512,
           'BBOX_INSIDE_WEIGHTS': (1.0, 1.0, 1.0, 1.0),
           'BBOX_NORMALIZE_MEANS': (0.0, 0.0, 0.0, 0.0),
           'BBOX_NORMALIZE_STDS': (0.1, 0.1, 0.2, 0.2),
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'COPY_CLS_TO_DET': False,
           'CROWD_FILTER_THRESH': 0.7,
           'DATASETS': (),
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'FREEZE_BOX_HEAD': True,
           'FREEZE_CONV_BODY': False,
           'FREEZE_RPN': False,
           'GT_MIN_AREA': -1,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_FILES': (),
           'RPN_BATCH_SIZE_PER_IM': 256,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 2000,
           'RPN_STRADDLE_THRESH': 0,
           'SCALES': (600,),
           'SNAPSHOT_ITERS': 2000,
           'SPATIAL_REG': False,
           'USE_FLIPPED': True,
           'WEAK_SUPERVISE': True,
           'WEAK_SUPERVISE_WITH_PRETRAIN': True},
 'VIS': False,
 'VIS_TH': 0.9}
loading annotations into memory...
Done (t=0.13s)
creating index...
index created!
INFO subprocess.py:  59: 0,1,2,3
INFO subprocess.py:  67: gpu_inds: [0, 1, 2, 3]
INFO subprocess.py:  89: detection range command 0: python /home/ubuntu/Detectron.pytorch/tools/test_net.py --range 0 1238 --cfg Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_config.yaml --set TEST.DATASETS '("voc_2007_test",)' --output_dir Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test --load_ckpt Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step1999.pth
INFO subprocess.py:  89: detection range command 1: python /home/ubuntu/Detectron.pytorch/tools/test_net.py --range 1238 2476 --cfg Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_config.yaml --set TEST.DATASETS '("voc_2007_test",)' --output_dir Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test --load_ckpt Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step1999.pth
INFO subprocess.py:  89: detection range command 2: python /home/ubuntu/Detectron.pytorch/tools/test_net.py --range 2476 3714 --cfg Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_config.yaml --set TEST.DATASETS '("voc_2007_test",)' --output_dir Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test --load_ckpt Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step1999.pth
INFO subprocess.py:  89: detection range command 3: python /home/ubuntu/Detectron.pytorch/tools/test_net.py --range 3714 4952 --cfg Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_config.yaml --set TEST.DATASETS '("voc_2007_test",)' --output_dir Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test --load_ckpt Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step1999.pth
INFO subprocess.py: 129: # ---------------------------------------------------------------------------- #
INFO subprocess.py: 131: stdout of subprocess 0 with range [1, 1238]
INFO subprocess.py: 133: # ---------------------------------------------------------------------------- #
INFO test_net.py:  72: Called with args:
INFO test_net.py:  73: Namespace(cfg_file='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_config.yaml', dataset=None, load_ckpt='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step1999.pth', load_detectron=None, multi_gpu_testing=False, num_classes=None, output_dir='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test', range=[0, 1238], set_cfgs=['TEST.DATASETS', '("voc_2007_test",)'], vis=False)
INFO test_net.py: 130: Testing with config:
INFO test_net.py: 131: {'BBOX_XFORM_CLIP': 4.135166556742356,
 'CROP_RESIZE_WITH_MAX_POOL': True,
 'CUDA': False,
 'DATA_DIR': '/home/ubuntu/Detectron.pytorch/data',
 'DATA_LOADER': {'NUM_THREADS': 4},
 'DEBUG': False,
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXPECTED_RESULTS': [],
 'EXPECTED_RESULTS_ATOL': 0.005,
 'EXPECTED_RESULTS_EMAIL': '',
 'EXPECTED_RESULTS_RTOL': 0.1,
 'FAST_RCNN': {'BOX_OUT_STREAMS': 1,
               'CONV_HEAD_DIM': 256,
               'MLP_HEAD_DIM': 1024,
               'NUM_STACKED_CONVS': 4,
               'ROI_BOX_HEAD': 'fast_rcnn_heads.roi_2mlp_head',
               'ROI_XFORM_METHOD': 'RoIAlign',
               'ROI_XFORM_RESOLUTION': 7,
               'ROI_XFORM_SAMPLING_RATIO': 2},
 'FPN': {'COARSEST_STRIDE': 32,
         'DIM': 256,
         'EXTRA_CONV_LEVELS': False,
         'FPN_ON': True,
         'MULTILEVEL_ROIS': True,
         'MULTILEVEL_RPN': True,
         'ROI_CANONICAL_LEVEL': 4,
         'ROI_CANONICAL_SCALE': 224,
         'ROI_MAX_LEVEL': 5,
         'ROI_MIN_LEVEL': 2,
         'RPN_ANCHOR_START_SIZE': 32,
         'RPN_ASPECT_RATIOS': (0.5, 1, 2),
         'RPN_COLLECT_SCALE': 1,
         'RPN_MAX_LEVEL': 6,
         'RPN_MIN_LEVEL': 2,
         'USE_GN': False,
         'ZERO_INIT_LATERAL': False},
 'GROUP_NORM': {'DIM_PER_GP': -1, 'EPSILON': 1e-05, 'NUM_GROUPS': 32},
 'KRCNN': {'CONV_HEAD_DIM': 256,
           'CONV_HEAD_KERNEL': 3,
           'CONV_INIT': 'GaussianFill',
           'DECONV_DIM': 256,
           'DECONV_KERNEL': 4,
           'DILATION': 1,
           'HEATMAP_SIZE': -1,
           'INFERENCE_MIN_SIZE': 0,
           'KEYPOINT_CONFIDENCE': 'bbox',
           'LOSS_WEIGHT': 1.0,
           'MIN_KEYPOINT_COUNT_FOR_VALID_MINIBATCH': 20,
           'NMS_OKS': False,
           'NORMALIZE_BY_VISIBLE_KEYPOINTS': True,
           'NUM_KEYPOINTS': -1,
           'NUM_STACKED_CONVS': 8,
           'ROI_KEYPOINTS_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'UP_SCALE': -1,
           'USE_DECONV': False,
           'USE_DECONV_OUTPUT': False},
 'MATLAB': 'matlab',
 'MODEL': {'BBOX_REG_WEIGHTS': (10.0, 10.0, 5.0, 5.0),
           'CLS_AGNOSTIC_BBOX_REG': False,
           'CONV_BODY': 'FPN.fpn_ResNet101_conv5_body',
           'FASTER_RCNN': True,
           'KEYPOINTS_ON': False,
           'LOAD_IMAGENET_PRETRAINED_WEIGHTS': True,
           'MASK_ON': False,
           'NUM_CLASSES': 21,
           'RPN_ONLY': False,
           'SHARE_RES5': False,
           'TYPE': 'generalized_rcnn',
           'UNSUPERVISED_POSE': False},
 'MRCNN': {'CLS_SPECIFIC_MASK': True,
           'CONV_INIT': 'GaussianFill',
           'DILATION': 2,
           'DIM_REDUCED': 256,
           'MEMORY_EFFICIENT_LOSS': True,
           'RESOLUTION': 14,
           'ROI_MASK_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'THRESH_BINARIZE': 0.5,
           'UPSAMPLE_RATIO': 1,
           'USE_FC_OUTPUT': False,
           'WEIGHT_LOSS_MASK': 1.0},
 'NUM_GPUS': 8,
 'OUTPUT_DIR': 'Outputs',
 'PIXEL_MEANS': array([[[102.9801, 115.9465, 122.7717]]]),
 'POOLING_MODE': 'crop',
 'POOLING_SIZE': 7,
 'PYTORCH_VERSION_LESS_THAN_040': False,
 'RESNETS': {'FREEZE_AT': 2,
             'IMAGENET_PRETRAINED_WEIGHTS': 'data/pretrained_model/resnet101_caffe.pth',
             'NUM_GROUPS': 1,
             'RES5_DILATION': 1,
             'SHORTCUT_FUNC': 'basic_bn_shortcut',
             'STEM_FUNC': 'basic_bn_stem',
             'STRIDE_1X1': True,
             'TRANS_FUNC': 'bottleneck_transformation',
             'USE_GN': False,
             'WIDTH_PER_GROUP': 64},
 'RETINANET': {'ANCHOR_SCALE': 4,
               'ASPECT_RATIOS': (0.5, 1.0, 2.0),
               'BBOX_REG_BETA': 0.11,
               'BBOX_REG_WEIGHT': 1.0,
               'CLASS_SPECIFIC_BBOX': False,
               'INFERENCE_TH': 0.05,
               'LOSS_ALPHA': 0.25,
               'LOSS_GAMMA': 2.0,
               'NEGATIVE_OVERLAP': 0.4,
               'NUM_CONVS': 4,
               'POSITIVE_OVERLAP': 0.5,
               'PRE_NMS_TOP_N': 1000,
               'PRIOR_PROB': 0.01,
               'RETINANET_ON': False,
               'SCALES_PER_OCTAVE': 3,
               'SHARE_CLS_BBOX_TOWER': False,
               'SOFTMAX': False},
 'RFCN': {'PS_GRID_SIZE': 3},
 'RNG_SEED': 3,
 'ROOT_DIR': '/home/ubuntu/Detectron.pytorch',
 'RPN': {'ASPECT_RATIOS': (0.5, 1, 2),
         'CLS_ACTIVATION': 'sigmoid',
         'OUT_DIM': 512,
         'OUT_DIM_AS_IN_DIM': True,
         'RPN_ON': True,
         'SIZES': (64, 128, 256, 512),
         'STRIDE': 16},
 'SOLVER': {'BASE_LR': 2e-05,
            'BIAS_DOUBLE_LR': True,
            'BIAS_WEIGHT_DECAY': False,
            'GAMMA': 0.1,
            'LOG_LR_CHANGE_THRESHOLD': 1.1,
            'LRS': [],
            'LR_POLICY': 'steps_with_decay',
            'MAX_ITER': 10000,
            'MOMENTUM': 0.9,
            'SCALE_MOMENTUM': True,
            'SCALE_MOMENTUM_THRESHOLD': 1.1,
            'STEPS': [0, 5000, 8000],
            'STEP_SIZE': 30000,
            'TYPE': 'SGD',
            'WARM_UP_FACTOR': 0.3333333333333333,
            'WARM_UP_ITERS': 500,
            'WARM_UP_METHOD': 'linear',
            'WEIGHT_DECAY': 0.0001,
            'WEIGHT_DECAY_GN': 0.0},
 'TEST': {'BBOX_AUG': {'AREA_TH_HI': 32400,
                       'AREA_TH_LO': 2500,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'COORD_HEUR': 'UNION',
                       'ENABLED': False,
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False,
                       'SCORE_HEUR': 'UNION'},
          'BBOX_REG': True,
          'BBOX_VOTE': {'ENABLED': False,
                        'SCORING_METHOD': 'ID',
                        'SCORING_METHOD_BETA': 1.0,
                        'VOTE_TH': 0.8},
          'COMPETITION_MODE': True,
          'DATASETS': ('voc_2007_test',),
          'DETECTIONS_PER_IM': 100,
          'FORCE_JSON_DATASET_EVAL': False,
          'KPS_AUG': {'AREA_TH': 32400,
                      'ASPECT_RATIOS': (),
                      'ASPECT_RATIO_H_FLIP': False,
                      'ENABLED': False,
                      'HEUR': 'HM_AVG',
                      'H_FLIP': False,
                      'MAX_SIZE': 4000,
                      'SCALES': (),
                      'SCALE_H_FLIP': False,
                      'SCALE_SIZE_DEP': False},
          'MASK_AUG': {'AREA_TH': 32400,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'ENABLED': False,
                       'HEUR': 'SOFT_AVG',
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False},
          'MAX_SIZE': 1000,
          'NMS': 0.5,
          'PRECOMPUTED_PROPOSALS': False,
          'PROPOSAL_FILES': (),
          'PROPOSAL_LIMIT': 2000,
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 1000,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALE': 600,
          'SCORE_THRESH': 0.05,
          'SOFT_NMS': {'ENABLED': False, 'METHOD': 'linear', 'SIGMA': 0.5},
          'WEAK_SUPERVISE': False},
 'TRAIN': {'ASPECT_CROPPING': False,
           'ASPECT_GROUPING': True,
           'ASPECT_HI': 2,
           'ASPECT_LO': 0.5,
           'BATCH_SIZE_PER_IM': 512,
           'BBOX_INSIDE_WEIGHTS': (1.0, 1.0, 1.0, 1.0),
           'BBOX_NORMALIZE_MEANS': (0.0, 0.0, 0.0, 0.0),
           'BBOX_NORMALIZE_STDS': (0.1, 0.1, 0.2, 0.2),
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'COPY_CLS_TO_DET': False,
           'CROWD_FILTER_THRESH': 0.7,
           'DATASETS': (),
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'FREEZE_BOX_HEAD': True,
           'FREEZE_CONV_BODY': False,
           'FREEZE_RPN': False,
           'GT_MIN_AREA': -1,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_FILES': (),
           'RPN_BATCH_SIZE_PER_IM': 256,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 2000,
           'RPN_STRADDLE_THRESH': 0,
           'SCALES': (600,),
           'SNAPSHOT_ITERS': 2000,
           'SPATIAL_REG': False,
           'USE_FLIPPED': True,
           'WEAK_SUPERVISE': True,
           'WEAK_SUPERVISE_WITH_PRETRAIN': True},
 'VIS': False,
 'VIS_TH': 0.9}
loading annotations into memory...
Done (t=0.15s)
creating index...
index created!
INFO test_engine.py: 324: training mode? : False
INFO test_engine.py: 331: loading checkpoint Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step1999.pth
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1/1238 0.742s + 0.002s (eta: 0:15:19)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 11/1238 0.530s + 0.003s (eta: 0:10:53)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 21/1238 0.519s + 0.002s (eta: 0:10:34)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 31/1238 0.523s + 0.002s (eta: 0:10:34)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 41/1238 0.517s + 0.002s (eta: 0:10:20)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 51/1238 0.517s + 0.002s (eta: 0:10:16)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 61/1238 0.511s + 0.002s (eta: 0:10:04)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 71/1238 0.507s + 0.002s (eta: 0:09:54)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 81/1238 0.507s + 0.002s (eta: 0:09:49)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 91/1238 0.507s + 0.002s (eta: 0:09:44)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 101/1238 0.504s + 0.002s (eta: 0:09:35)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 111/1238 0.507s + 0.002s (eta: 0:09:33)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 121/1238 0.504s + 0.002s (eta: 0:09:25)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 131/1238 0.503s + 0.002s (eta: 0:09:19)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 141/1238 0.504s + 0.002s (eta: 0:09:15)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 151/1238 0.503s + 0.002s (eta: 0:09:09)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 161/1238 0.500s + 0.002s (eta: 0:09:00)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 171/1238 0.500s + 0.002s (eta: 0:08:55)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 181/1238 0.501s + 0.002s (eta: 0:08:51)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 191/1238 0.500s + 0.002s (eta: 0:08:46)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 201/1238 0.499s + 0.002s (eta: 0:08:39)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 211/1238 0.501s + 0.002s (eta: 0:08:36)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 221/1238 0.501s + 0.002s (eta: 0:08:31)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 231/1238 0.502s + 0.002s (eta: 0:08:27)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 241/1238 0.501s + 0.002s (eta: 0:08:21)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 251/1238 0.502s + 0.002s (eta: 0:08:17)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 261/1238 0.499s + 0.002s (eta: 0:08:09)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 271/1238 0.499s + 0.002s (eta: 0:08:04)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 281/1238 0.500s + 0.002s (eta: 0:08:00)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 291/1238 0.502s + 0.002s (eta: 0:07:57)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 301/1238 0.503s + 0.002s (eta: 0:07:53)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 311/1238 0.504s + 0.002s (eta: 0:07:48)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 321/1238 0.503s + 0.002s (eta: 0:07:43)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 331/1238 0.504s + 0.002s (eta: 0:07:38)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 341/1238 0.503s + 0.002s (eta: 0:07:32)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 351/1238 0.502s + 0.002s (eta: 0:07:27)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 361/1238 0.501s + 0.002s (eta: 0:07:21)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 371/1238 0.501s + 0.002s (eta: 0:07:15)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 381/1238 0.500s + 0.002s (eta: 0:07:10)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 391/1238 0.501s + 0.002s (eta: 0:07:06)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 401/1238 0.500s + 0.002s (eta: 0:06:59)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 411/1238 0.499s + 0.002s (eta: 0:06:54)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 421/1238 0.498s + 0.002s (eta: 0:06:48)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 431/1238 0.497s + 0.002s (eta: 0:06:42)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 441/1238 0.496s + 0.002s (eta: 0:06:37)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 451/1238 0.494s + 0.002s (eta: 0:06:30)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 461/1238 0.491s + 0.002s (eta: 0:06:23)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 471/1238 0.489s + 0.002s (eta: 0:06:16)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 481/1238 0.487s + 0.002s (eta: 0:06:09)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 491/1238 0.485s + 0.002s (eta: 0:06:04)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 501/1238 0.484s + 0.002s (eta: 0:05:58)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 511/1238 0.485s + 0.002s (eta: 0:05:53)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 521/1238 0.485s + 0.002s (eta: 0:05:49)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 531/1238 0.485s + 0.002s (eta: 0:05:44)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 541/1238 0.486s + 0.002s (eta: 0:05:40)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 551/1238 0.487s + 0.002s (eta: 0:05:35)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 561/1238 0.487s + 0.002s (eta: 0:05:31)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 571/1238 0.488s + 0.002s (eta: 0:05:26)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 581/1238 0.489s + 0.002s (eta: 0:05:22)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 591/1238 0.489s + 0.002s (eta: 0:05:17)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 601/1238 0.489s + 0.002s (eta: 0:05:13)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 611/1238 0.491s + 0.002s (eta: 0:05:09)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 621/1238 0.492s + 0.002s (eta: 0:05:04)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 631/1238 0.492s + 0.002s (eta: 0:04:59)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 641/1238 0.492s + 0.002s (eta: 0:04:55)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 651/1238 0.492s + 0.002s (eta: 0:04:50)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 661/1238 0.493s + 0.002s (eta: 0:04:45)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 671/1238 0.493s + 0.002s (eta: 0:04:40)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 681/1238 0.494s + 0.002s (eta: 0:04:36)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 691/1238 0.493s + 0.002s (eta: 0:04:31)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 701/1238 0.494s + 0.002s (eta: 0:04:26)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 711/1238 0.494s + 0.002s (eta: 0:04:21)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 721/1238 0.494s + 0.002s (eta: 0:04:16)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 731/1238 0.493s + 0.002s (eta: 0:04:11)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 741/1238 0.494s + 0.002s (eta: 0:04:06)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 751/1238 0.494s + 0.002s (eta: 0:04:01)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 761/1238 0.494s + 0.002s (eta: 0:03:56)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 771/1238 0.494s + 0.002s (eta: 0:03:51)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 781/1238 0.494s + 0.002s (eta: 0:03:46)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 791/1238 0.494s + 0.002s (eta: 0:03:41)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 801/1238 0.494s + 0.002s (eta: 0:03:36)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 811/1238 0.494s + 0.002s (eta: 0:03:31)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 821/1238 0.494s + 0.002s (eta: 0:03:26)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 831/1238 0.494s + 0.002s (eta: 0:03:21)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 841/1238 0.494s + 0.002s (eta: 0:03:16)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 851/1238 0.494s + 0.002s (eta: 0:03:12)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 861/1238 0.494s + 0.002s (eta: 0:03:07)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 871/1238 0.494s + 0.002s (eta: 0:03:01)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 881/1238 0.493s + 0.002s (eta: 0:02:56)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 891/1238 0.493s + 0.002s (eta: 0:02:51)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 901/1238 0.493s + 0.002s (eta: 0:02:47)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 911/1238 0.494s + 0.002s (eta: 0:02:42)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 921/1238 0.494s + 0.002s (eta: 0:02:37)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 931/1238 0.494s + 0.002s (eta: 0:02:32)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 941/1238 0.494s + 0.002s (eta: 0:02:27)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 951/1238 0.495s + 0.002s (eta: 0:02:22)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 961/1238 0.495s + 0.002s (eta: 0:02:17)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 971/1238 0.495s + 0.002s (eta: 0:02:12)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 981/1238 0.495s + 0.002s (eta: 0:02:07)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 991/1238 0.495s + 0.002s (eta: 0:02:02)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1001/1238 0.495s + 0.002s (eta: 0:01:57)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1011/1238 0.495s + 0.002s (eta: 0:01:52)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1021/1238 0.495s + 0.002s (eta: 0:01:47)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1031/1238 0.495s + 0.002s (eta: 0:01:42)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1041/1238 0.495s + 0.002s (eta: 0:01:37)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1051/1238 0.495s + 0.002s (eta: 0:01:33)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1061/1238 0.495s + 0.002s (eta: 0:01:28)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1071/1238 0.496s + 0.002s (eta: 0:01:23)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1081/1238 0.496s + 0.002s (eta: 0:01:18)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1091/1238 0.496s + 0.002s (eta: 0:01:13)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1101/1238 0.496s + 0.002s (eta: 0:01:08)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1111/1238 0.496s + 0.002s (eta: 0:01:03)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1121/1238 0.496s + 0.002s (eta: 0:00:58)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1131/1238 0.496s + 0.002s (eta: 0:00:53)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1141/1238 0.496s + 0.002s (eta: 0:00:48)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1151/1238 0.496s + 0.002s (eta: 0:00:43)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1161/1238 0.496s + 0.002s (eta: 0:00:38)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1171/1238 0.496s + 0.002s (eta: 0:00:33)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1181/1238 0.496s + 0.002s (eta: 0:00:28)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1191/1238 0.496s + 0.002s (eta: 0:00:23)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1201/1238 0.496s + 0.002s (eta: 0:00:18)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1211/1238 0.496s + 0.002s (eta: 0:00:13)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1221/1238 0.496s + 0.002s (eta: 0:00:08)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1231/1238 0.496s + 0.002s (eta: 0:00:03)
INFO test_engine.py: 314: Wrote detections to: /home/ubuntu/Detectron.pytorch/Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_0_1238.pkl
/home/ubuntu/anaconda3/envs/pytorch41/lib/python3.7/site-packages/torch/nn/functional.py:1890: UserWarning: nn.functional.upsample is deprecated. Use nn.functional.interpolate instead.
  warnings.warn("nn.functional.upsample is deprecated. Use nn.functional.interpolate instead.")
INFO subprocess.py: 129: # ---------------------------------------------------------------------------- #
INFO subprocess.py: 131: stdout of subprocess 1 with range [1239, 2476]
INFO subprocess.py: 133: # ---------------------------------------------------------------------------- #
INFO test_net.py:  72: Called with args:
INFO test_net.py:  73: Namespace(cfg_file='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_config.yaml', dataset=None, load_ckpt='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step1499.pth', load_detectron=None, multi_gpu_testing=False, num_classes=None, output_dir='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test', range=[1238, 2476], set_cfgs=['TEST.DATASETS', '("voc_2007_test",)'], vis=False)
INFO test_net.py: 130: Testing with config:
INFO test_net.py: 131: {'BBOX_XFORM_CLIP': 4.135166556742356,
 'CROP_RESIZE_WITH_MAX_POOL': True,
 'CUDA': False,
 'DATA_DIR': '/home/ubuntu/Detectron.pytorch/data',
 'DATA_LOADER': {'NUM_THREADS': 4},
 'DEBUG': False,
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXPECTED_RESULTS': [],
 'EXPECTED_RESULTS_ATOL': 0.005,
 'EXPECTED_RESULTS_EMAIL': '',
 'EXPECTED_RESULTS_RTOL': 0.1,
 'FAST_RCNN': {'BOX_OUT_STREAMS': 1,
               'CONV_HEAD_DIM': 256,
               'MLP_HEAD_DIM': 1024,
               'NUM_STACKED_CONVS': 4,
               'ROI_BOX_HEAD': 'fast_rcnn_heads.roi_2mlp_head',
               'ROI_XFORM_METHOD': 'RoIAlign',
               'ROI_XFORM_RESOLUTION': 7,
               'ROI_XFORM_SAMPLING_RATIO': 2},
 'FPN': {'COARSEST_STRIDE': 32,
         'DIM': 256,
         'EXTRA_CONV_LEVELS': False,
         'FPN_ON': True,
         'MULTILEVEL_ROIS': True,
         'MULTILEVEL_RPN': True,
         'ROI_CANONICAL_LEVEL': 4,
         'ROI_CANONICAL_SCALE': 224,
         'ROI_MAX_LEVEL': 5,
         'ROI_MIN_LEVEL': 2,
         'RPN_ANCHOR_START_SIZE': 32,
         'RPN_ASPECT_RATIOS': (0.5, 1, 2),
         'RPN_COLLECT_SCALE': 1,
         'RPN_MAX_LEVEL': 6,
         'RPN_MIN_LEVEL': 2,
         'USE_GN': False,
         'ZERO_INIT_LATERAL': False},
 'GROUP_NORM': {'DIM_PER_GP': -1, 'EPSILON': 1e-05, 'NUM_GROUPS': 32},
 'KRCNN': {'CONV_HEAD_DIM': 256,
           'CONV_HEAD_KERNEL': 3,
           'CONV_INIT': 'GaussianFill',
           'DECONV_DIM': 256,
           'DECONV_KERNEL': 4,
           'DILATION': 1,
           'HEATMAP_SIZE': -1,
           'INFERENCE_MIN_SIZE': 0,
           'KEYPOINT_CONFIDENCE': 'bbox',
           'LOSS_WEIGHT': 1.0,
           'MIN_KEYPOINT_COUNT_FOR_VALID_MINIBATCH': 20,
           'NMS_OKS': False,
           'NORMALIZE_BY_VISIBLE_KEYPOINTS': True,
           'NUM_KEYPOINTS': -1,
           'NUM_STACKED_CONVS': 8,
           'ROI_KEYPOINTS_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'UP_SCALE': -1,
           'USE_DECONV': False,
           'USE_DECONV_OUTPUT': False},
 'MATLAB': 'matlab',
 'MODEL': {'BBOX_REG_WEIGHTS': (10.0, 10.0, 5.0, 5.0),
           'CLS_AGNOSTIC_BBOX_REG': False,
           'CONV_BODY': 'FPN.fpn_ResNet101_conv5_body',
           'FASTER_RCNN': True,
           'KEYPOINTS_ON': False,
           'LOAD_IMAGENET_PRETRAINED_WEIGHTS': True,
           'MASK_ON': False,
           'NUM_CLASSES': 21,
           'RPN_ONLY': False,
           'SHARE_RES5': False,
           'TYPE': 'generalized_rcnn',
           'UNSUPERVISED_POSE': False},
 'MRCNN': {'CLS_SPECIFIC_MASK': True,
           'CONV_INIT': 'GaussianFill',
           'DILATION': 2,
           'DIM_REDUCED': 256,
           'MEMORY_EFFICIENT_LOSS': True,
           'RESOLUTION': 14,
           'ROI_MASK_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'THRESH_BINARIZE': 0.5,
           'UPSAMPLE_RATIO': 1,
           'USE_FC_OUTPUT': False,
           'WEIGHT_LOSS_MASK': 1.0},
 'NUM_GPUS': 8,
 'OUTPUT_DIR': 'Outputs',
 'PIXEL_MEANS': array([[[102.9801, 115.9465, 122.7717]]]),
 'POOLING_MODE': 'crop',
 'POOLING_SIZE': 7,
 'PYTORCH_VERSION_LESS_THAN_040': False,
 'RESNETS': {'FREEZE_AT': 2,
             'IMAGENET_PRETRAINED_WEIGHTS': 'data/pretrained_model/resnet101_caffe.pth',
             'NUM_GROUPS': 1,
             'RES5_DILATION': 1,
             'SHORTCUT_FUNC': 'basic_bn_shortcut',
             'STEM_FUNC': 'basic_bn_stem',
             'STRIDE_1X1': True,
             'TRANS_FUNC': 'bottleneck_transformation',
             'USE_GN': False,
             'WIDTH_PER_GROUP': 64},
 'RETINANET': {'ANCHOR_SCALE': 4,
               'ASPECT_RATIOS': (0.5, 1.0, 2.0),
               'BBOX_REG_BETA': 0.11,
               'BBOX_REG_WEIGHT': 1.0,
               'CLASS_SPECIFIC_BBOX': False,
               'INFERENCE_TH': 0.05,
               'LOSS_ALPHA': 0.25,
               'LOSS_GAMMA': 2.0,
               'NEGATIVE_OVERLAP': 0.4,
               'NUM_CONVS': 4,
               'POSITIVE_OVERLAP': 0.5,
               'PRE_NMS_TOP_N': 1000,
               'PRIOR_PROB': 0.01,
               'RETINANET_ON': False,
               'SCALES_PER_OCTAVE': 3,
               'SHARE_CLS_BBOX_TOWER': False,
               'SOFTMAX': False},
 'RFCN': {'PS_GRID_SIZE': 3},
 'RNG_SEED': 3,
 'ROOT_DIR': '/home/ubuntu/Detectron.pytorch',
 'RPN': {'ASPECT_RATIOS': (0.5, 1, 2),
         'CLS_ACTIVATION': 'sigmoid',
         'OUT_DIM': 512,
         'OUT_DIM_AS_IN_DIM': True,
         'RPN_ON': True,
         'SIZES': (64, 128, 256, 512),
         'STRIDE': 16},
 'SOLVER': {'BASE_LR': 2e-05,
            'BIAS_DOUBLE_LR': True,
            'BIAS_WEIGHT_DECAY': False,
            'GAMMA': 0.1,
            'LOG_LR_CHANGE_THRESHOLD': 1.1,
            'LRS': [],
            'LR_POLICY': 'steps_with_decay',
            'MAX_ITER': 10000,
            'MOMENTUM': 0.9,
            'SCALE_MOMENTUM': True,
            'SCALE_MOMENTUM_THRESHOLD': 1.1,
            'STEPS': [0, 5000, 8000],
            'STEP_SIZE': 30000,
            'TYPE': 'SGD',
            'WARM_UP_FACTOR': 0.3333333333333333,
            'WARM_UP_ITERS': 500,
            'WARM_UP_METHOD': 'linear',
            'WEIGHT_DECAY': 0.0001,
            'WEIGHT_DECAY_GN': 0.0},
 'TEST': {'BBOX_AUG': {'AREA_TH_HI': 32400,
                       'AREA_TH_LO': 2500,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'COORD_HEUR': 'UNION',
                       'ENABLED': False,
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False,
                       'SCORE_HEUR': 'UNION'},
          'BBOX_REG': True,
          'BBOX_VOTE': {'ENABLED': False,
                        'SCORING_METHOD': 'ID',
                        'SCORING_METHOD_BETA': 1.0,
                        'VOTE_TH': 0.8},
          'COMPETITION_MODE': True,
          'DATASETS': ('voc_2007_test',),
          'DETECTIONS_PER_IM': 100,
          'FORCE_JSON_DATASET_EVAL': False,
          'KPS_AUG': {'AREA_TH': 32400,
                      'ASPECT_RATIOS': (),
                      'ASPECT_RATIO_H_FLIP': False,
                      'ENABLED': False,
                      'HEUR': 'HM_AVG',
                      'H_FLIP': False,
                      'MAX_SIZE': 4000,
                      'SCALES': (),
                      'SCALE_H_FLIP': False,
                      'SCALE_SIZE_DEP': False},
          'MASK_AUG': {'AREA_TH': 32400,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'ENABLED': False,
                       'HEUR': 'SOFT_AVG',
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False},
          'MAX_SIZE': 1000,
          'NMS': 0.5,
          'PRECOMPUTED_PROPOSALS': False,
          'PROPOSAL_FILES': (),
          'PROPOSAL_LIMIT': 2000,
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 1000,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALE': 600,
          'SCORE_THRESH': 0.05,
          'SOFT_NMS': {'ENABLED': False, 'METHOD': 'linear', 'SIGMA': 0.5},
          'WEAK_SUPERVISE': False},
 'TRAIN': {'ASPECT_CROPPING': False,
           'ASPECT_GROUPING': True,
           'ASPECT_HI': 2,
           'ASPECT_LO': 0.5,
           'BATCH_SIZE_PER_IM': 512,
           'BBOX_INSIDE_WEIGHTS': (1.0, 1.0, 1.0, 1.0),
           'BBOX_NORMALIZE_MEANS': (0.0, 0.0, 0.0, 0.0),
           'BBOX_NORMALIZE_STDS': (0.1, 0.1, 0.2, 0.2),
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'COPY_CLS_TO_DET': False,
           'CROWD_FILTER_THRESH': 0.7,
           'DATASETS': (),
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'FREEZE_BOX_HEAD': True,
           'FREEZE_CONV_BODY': False,
           'FREEZE_RPN': False,
           'GT_MIN_AREA': -1,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_FILES': (),
           'RPN_BATCH_SIZE_PER_IM': 256,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 2000,
           'RPN_STRADDLE_THRESH': 0,
           'SCALES': (600,),
           'SNAPSHOT_ITERS': 2000,
           'SPATIAL_REG': False,
           'USE_FLIPPED': True,
           'WEAK_SUPERVISE': True,
           'WEAK_SUPERVISE_WITH_PRETRAIN': True},
 'VIS': False,
 'VIS_TH': 0.9}
loading annotations into memory...
Done (t=0.21s)
creating index...
index created!
INFO test_engine.py: 324: training mode? : False
INFO test_engine.py: 331: loading checkpoint Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step1499.pth
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1239/2476 0.664s + 0.001s (eta: 0:13:42)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1249/2476 0.488s + 0.001s (eta: 0:10:00)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1259/2476 0.495s + 0.002s (eta: 0:10:04)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1269/2476 0.481s + 0.002s (eta: 0:09:42)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1279/2476 0.476s + 0.002s (eta: 0:09:31)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1289/2476 0.481s + 0.002s (eta: 0:09:33)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1299/2476 0.480s + 0.002s (eta: 0:09:27)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1309/2476 0.484s + 0.002s (eta: 0:09:26)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1319/2476 0.481s + 0.002s (eta: 0:09:18)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1329/2476 0.483s + 0.002s (eta: 0:09:16)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1339/2476 0.484s + 0.002s (eta: 0:09:12)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1349/2476 0.482s + 0.002s (eta: 0:09:05)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1359/2476 0.478s + 0.002s (eta: 0:08:55)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1369/2476 0.482s + 0.002s (eta: 0:08:55)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1379/2476 0.485s + 0.002s (eta: 0:08:53)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1389/2476 0.488s + 0.002s (eta: 0:08:52)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1399/2476 0.487s + 0.002s (eta: 0:08:46)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1409/2476 0.489s + 0.002s (eta: 0:08:43)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1419/2476 0.491s + 0.002s (eta: 0:08:40)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1429/2476 0.491s + 0.002s (eta: 0:08:35)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1439/2476 0.489s + 0.002s (eta: 0:08:28)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1449/2476 0.488s + 0.002s (eta: 0:08:23)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1459/2476 0.488s + 0.002s (eta: 0:08:18)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1469/2476 0.490s + 0.002s (eta: 0:08:14)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1479/2476 0.489s + 0.002s (eta: 0:08:08)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1489/2476 0.488s + 0.002s (eta: 0:08:03)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1499/2476 0.490s + 0.002s (eta: 0:07:59)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1509/2476 0.492s + 0.002s (eta: 0:07:57)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1519/2476 0.492s + 0.002s (eta: 0:07:52)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1529/2476 0.493s + 0.002s (eta: 0:07:48)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1539/2476 0.493s + 0.002s (eta: 0:07:43)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1549/2476 0.494s + 0.002s (eta: 0:07:39)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1559/2476 0.494s + 0.002s (eta: 0:07:34)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1569/2476 0.495s + 0.002s (eta: 0:07:30)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1579/2476 0.495s + 0.002s (eta: 0:07:25)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1589/2476 0.496s + 0.002s (eta: 0:07:21)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1599/2476 0.495s + 0.002s (eta: 0:07:15)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1609/2476 0.494s + 0.002s (eta: 0:07:10)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1619/2476 0.496s + 0.002s (eta: 0:07:06)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1629/2476 0.496s + 0.002s (eta: 0:07:01)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1639/2476 0.496s + 0.002s (eta: 0:06:56)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1649/2476 0.496s + 0.002s (eta: 0:06:51)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1659/2476 0.496s + 0.002s (eta: 0:06:46)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1669/2476 0.496s + 0.002s (eta: 0:06:41)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1679/2476 0.497s + 0.002s (eta: 0:06:37)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1689/2476 0.497s + 0.002s (eta: 0:06:32)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1699/2476 0.498s + 0.002s (eta: 0:06:28)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1709/2476 0.498s + 0.002s (eta: 0:06:23)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1719/2476 0.497s + 0.002s (eta: 0:06:17)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1729/2476 0.497s + 0.002s (eta: 0:06:12)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1739/2476 0.497s + 0.002s (eta: 0:06:08)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1749/2476 0.497s + 0.002s (eta: 0:06:03)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1759/2476 0.497s + 0.002s (eta: 0:05:57)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1769/2476 0.497s + 0.002s (eta: 0:05:52)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1779/2476 0.496s + 0.002s (eta: 0:05:47)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1789/2476 0.497s + 0.002s (eta: 0:05:42)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1799/2476 0.497s + 0.002s (eta: 0:05:38)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1809/2476 0.498s + 0.002s (eta: 0:05:33)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1819/2476 0.497s + 0.002s (eta: 0:05:28)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1829/2476 0.497s + 0.002s (eta: 0:05:22)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1839/2476 0.496s + 0.002s (eta: 0:05:17)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1849/2476 0.496s + 0.002s (eta: 0:05:12)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1859/2476 0.496s + 0.002s (eta: 0:05:07)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1869/2476 0.495s + 0.002s (eta: 0:05:01)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1879/2476 0.495s + 0.002s (eta: 0:04:56)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1889/2476 0.496s + 0.002s (eta: 0:04:52)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1899/2476 0.495s + 0.002s (eta: 0:04:46)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1909/2476 0.494s + 0.002s (eta: 0:04:41)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1919/2476 0.494s + 0.002s (eta: 0:04:36)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1929/2476 0.494s + 0.002s (eta: 0:04:31)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1939/2476 0.494s + 0.002s (eta: 0:04:26)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1949/2476 0.494s + 0.002s (eta: 0:04:21)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1959/2476 0.494s + 0.002s (eta: 0:04:16)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1969/2476 0.494s + 0.002s (eta: 0:04:11)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1979/2476 0.495s + 0.002s (eta: 0:04:06)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1989/2476 0.495s + 0.002s (eta: 0:04:01)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1999/2476 0.491s + 0.002s (eta: 0:03:55)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2009/2476 0.491s + 0.002s (eta: 0:03:50)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2019/2476 0.491s + 0.002s (eta: 0:03:45)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2029/2476 0.492s + 0.002s (eta: 0:03:40)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2039/2476 0.491s + 0.002s (eta: 0:03:35)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2049/2476 0.491s + 0.002s (eta: 0:03:30)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2059/2476 0.491s + 0.002s (eta: 0:03:25)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2069/2476 0.491s + 0.002s (eta: 0:03:20)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2079/2476 0.492s + 0.002s (eta: 0:03:16)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2089/2476 0.492s + 0.002s (eta: 0:03:11)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2099/2476 0.492s + 0.002s (eta: 0:03:06)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2109/2476 0.493s + 0.002s (eta: 0:03:01)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2119/2476 0.492s + 0.002s (eta: 0:02:56)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2129/2476 0.493s + 0.002s (eta: 0:02:51)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2139/2476 0.493s + 0.002s (eta: 0:02:46)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2149/2476 0.494s + 0.002s (eta: 0:02:42)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2159/2476 0.494s + 0.002s (eta: 0:02:37)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2169/2476 0.495s + 0.002s (eta: 0:02:32)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2179/2476 0.495s + 0.002s (eta: 0:02:27)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2189/2476 0.494s + 0.002s (eta: 0:02:22)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2199/2476 0.494s + 0.002s (eta: 0:02:17)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2209/2476 0.495s + 0.002s (eta: 0:02:12)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2219/2476 0.495s + 0.002s (eta: 0:02:07)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2229/2476 0.494s + 0.002s (eta: 0:02:02)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2239/2476 0.494s + 0.002s (eta: 0:01:57)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2249/2476 0.494s + 0.002s (eta: 0:01:52)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2259/2476 0.494s + 0.002s (eta: 0:01:47)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2269/2476 0.494s + 0.002s (eta: 0:01:42)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2279/2476 0.494s + 0.002s (eta: 0:01:37)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2289/2476 0.494s + 0.002s (eta: 0:01:32)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2299/2476 0.494s + 0.002s (eta: 0:01:27)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2309/2476 0.494s + 0.002s (eta: 0:01:22)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2319/2476 0.494s + 0.002s (eta: 0:01:17)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2329/2476 0.494s + 0.002s (eta: 0:01:12)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2339/2476 0.493s + 0.002s (eta: 0:01:07)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2349/2476 0.493s + 0.002s (eta: 0:01:02)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2359/2476 0.493s + 0.002s (eta: 0:00:57)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2369/2476 0.493s + 0.002s (eta: 0:00:52)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2379/2476 0.493s + 0.002s (eta: 0:00:47)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2389/2476 0.493s + 0.002s (eta: 0:00:43)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2399/2476 0.494s + 0.002s (eta: 0:00:38)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2409/2476 0.494s + 0.002s (eta: 0:00:33)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2419/2476 0.494s + 0.002s (eta: 0:00:28)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2429/2476 0.494s + 0.002s (eta: 0:00:23)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2439/2476 0.495s + 0.002s (eta: 0:00:18)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2449/2476 0.495s + 0.002s (eta: 0:00:13)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2459/2476 0.495s + 0.002s (eta: 0:00:08)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2469/2476 0.495s + 0.002s (eta: 0:00:03)
INFO test_engine.py: 314: Wrote detections to: /home/ubuntu/Detectron.pytorch/Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_1238_2476.pkl
/home/ubuntu/anaconda3/envs/pytorch41/lib/python3.7/site-packages/torch/nn/functional.py:1890: UserWarning: nn.functional.upsample is deprecated. Use nn.functional.interpolate instead.
  warnings.warn("nn.functional.upsample is deprecated. Use nn.functional.interpolate instead.")

INFO subprocess.py: 129: # ---------------------------------------------------------------------------- #
INFO subprocess.py: 131: stdout of subprocess 2 with range [2477, 3714]
INFO subprocess.py: 133: # ---------------------------------------------------------------------------- #
INFO test_net.py:  72: Called with args:
INFO test_net.py:  73: Namespace(cfg_file='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_config.yaml', dataset=None, load_ckpt='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step1499.pth', load_detectron=None, multi_gpu_testing=False, num_classes=None, output_dir='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test', range=[2476, 3714], set_cfgs=['TEST.DATASETS', '("voc_2007_test",)'], vis=False)
INFO test_net.py: 130: Testing with config:
INFO test_net.py: 131: {'BBOX_XFORM_CLIP': 4.135166556742356,
 'CROP_RESIZE_WITH_MAX_POOL': True,
 'CUDA': False,
 'DATA_DIR': '/home/ubuntu/Detectron.pytorch/data',
 'DATA_LOADER': {'NUM_THREADS': 4},
 'DEBUG': False,
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXPECTED_RESULTS': [],
 'EXPECTED_RESULTS_ATOL': 0.005,
 'EXPECTED_RESULTS_EMAIL': '',
 'EXPECTED_RESULTS_RTOL': 0.1,
 'FAST_RCNN': {'BOX_OUT_STREAMS': 1,
               'CONV_HEAD_DIM': 256,
               'MLP_HEAD_DIM': 1024,
               'NUM_STACKED_CONVS': 4,
               'ROI_BOX_HEAD': 'fast_rcnn_heads.roi_2mlp_head',
               'ROI_XFORM_METHOD': 'RoIAlign',
               'ROI_XFORM_RESOLUTION': 7,
               'ROI_XFORM_SAMPLING_RATIO': 2},
 'FPN': {'COARSEST_STRIDE': 32,
         'DIM': 256,
         'EXTRA_CONV_LEVELS': False,
         'FPN_ON': True,
         'MULTILEVEL_ROIS': True,
         'MULTILEVEL_RPN': True,
         'ROI_CANONICAL_LEVEL': 4,
         'ROI_CANONICAL_SCALE': 224,
         'ROI_MAX_LEVEL': 5,
         'ROI_MIN_LEVEL': 2,
         'RPN_ANCHOR_START_SIZE': 32,
         'RPN_ASPECT_RATIOS': (0.5, 1, 2),
         'RPN_COLLECT_SCALE': 1,
         'RPN_MAX_LEVEL': 6,
         'RPN_MIN_LEVEL': 2,
         'USE_GN': False,
         'ZERO_INIT_LATERAL': False},
 'GROUP_NORM': {'DIM_PER_GP': -1, 'EPSILON': 1e-05, 'NUM_GROUPS': 32},
 'KRCNN': {'CONV_HEAD_DIM': 256,
           'CONV_HEAD_KERNEL': 3,
           'CONV_INIT': 'GaussianFill',
           'DECONV_DIM': 256,
           'DECONV_KERNEL': 4,
           'DILATION': 1,
           'HEATMAP_SIZE': -1,
           'INFERENCE_MIN_SIZE': 0,
           'KEYPOINT_CONFIDENCE': 'bbox',
           'LOSS_WEIGHT': 1.0,
           'MIN_KEYPOINT_COUNT_FOR_VALID_MINIBATCH': 20,
           'NMS_OKS': False,
           'NORMALIZE_BY_VISIBLE_KEYPOINTS': True,
           'NUM_KEYPOINTS': -1,
           'NUM_STACKED_CONVS': 8,
           'ROI_KEYPOINTS_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'UP_SCALE': -1,
           'USE_DECONV': False,
           'USE_DECONV_OUTPUT': False},
 'MATLAB': 'matlab',
 'MODEL': {'BBOX_REG_WEIGHTS': (10.0, 10.0, 5.0, 5.0),
           'CLS_AGNOSTIC_BBOX_REG': False,
           'CONV_BODY': 'FPN.fpn_ResNet101_conv5_body',
           'FASTER_RCNN': True,
           'KEYPOINTS_ON': False,
           'LOAD_IMAGENET_PRETRAINED_WEIGHTS': True,
           'MASK_ON': False,
           'NUM_CLASSES': 21,
           'RPN_ONLY': False,
           'SHARE_RES5': False,
           'TYPE': 'generalized_rcnn',
           'UNSUPERVISED_POSE': False},
 'MRCNN': {'CLS_SPECIFIC_MASK': True,
           'CONV_INIT': 'GaussianFill',
           'DILATION': 2,
           'DIM_REDUCED': 256,
           'MEMORY_EFFICIENT_LOSS': True,
           'RESOLUTION': 14,
           'ROI_MASK_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'THRESH_BINARIZE': 0.5,
           'UPSAMPLE_RATIO': 1,
           'USE_FC_OUTPUT': False,
           'WEIGHT_LOSS_MASK': 1.0},
 'NUM_GPUS': 8,
 'OUTPUT_DIR': 'Outputs',
 'PIXEL_MEANS': array([[[102.9801, 115.9465, 122.7717]]]),
 'POOLING_MODE': 'crop',
 'POOLING_SIZE': 7,
 'PYTORCH_VERSION_LESS_THAN_040': False,
 'RESNETS': {'FREEZE_AT': 2,
             'IMAGENET_PRETRAINED_WEIGHTS': 'data/pretrained_model/resnet101_caffe.pth',
             'NUM_GROUPS': 1,
             'RES5_DILATION': 1,
             'SHORTCUT_FUNC': 'basic_bn_shortcut',
             'STEM_FUNC': 'basic_bn_stem',
             'STRIDE_1X1': True,
             'TRANS_FUNC': 'bottleneck_transformation',
             'USE_GN': False,
             'WIDTH_PER_GROUP': 64},
 'RETINANET': {'ANCHOR_SCALE': 4,
               'ASPECT_RATIOS': (0.5, 1.0, 2.0),
               'BBOX_REG_BETA': 0.11,
               'BBOX_REG_WEIGHT': 1.0,
               'CLASS_SPECIFIC_BBOX': False,
               'INFERENCE_TH': 0.05,
               'LOSS_ALPHA': 0.25,
               'LOSS_GAMMA': 2.0,
               'NEGATIVE_OVERLAP': 0.4,
               'NUM_CONVS': 4,
               'POSITIVE_OVERLAP': 0.5,
               'PRE_NMS_TOP_N': 1000,
               'PRIOR_PROB': 0.01,
               'RETINANET_ON': False,
               'SCALES_PER_OCTAVE': 3,
               'SHARE_CLS_BBOX_TOWER': False,
               'SOFTMAX': False},
 'RFCN': {'PS_GRID_SIZE': 3},
 'RNG_SEED': 3,
 'ROOT_DIR': '/home/ubuntu/Detectron.pytorch',
 'RPN': {'ASPECT_RATIOS': (0.5, 1, 2),
         'CLS_ACTIVATION': 'sigmoid',
         'OUT_DIM': 512,
         'OUT_DIM_AS_IN_DIM': True,
         'RPN_ON': True,
         'SIZES': (64, 128, 256, 512),
         'STRIDE': 16},
 'SOLVER': {'BASE_LR': 2e-05,
            'BIAS_DOUBLE_LR': True,
            'BIAS_WEIGHT_DECAY': False,
            'GAMMA': 0.1,
            'LOG_LR_CHANGE_THRESHOLD': 1.1,
            'LRS': [],
            'LR_POLICY': 'steps_with_decay',
            'MAX_ITER': 10000,
            'MOMENTUM': 0.9,
            'SCALE_MOMENTUM': True,
            'SCALE_MOMENTUM_THRESHOLD': 1.1,
            'STEPS': [0, 5000, 8000],
            'STEP_SIZE': 30000,
            'TYPE': 'SGD',
            'WARM_UP_FACTOR': 0.3333333333333333,
            'WARM_UP_ITERS': 500,
            'WARM_UP_METHOD': 'linear',
            'WEIGHT_DECAY': 0.0001,
            'WEIGHT_DECAY_GN': 0.0},
 'TEST': {'BBOX_AUG': {'AREA_TH_HI': 32400,
                       'AREA_TH_LO': 2500,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'COORD_HEUR': 'UNION',
                       'ENABLED': False,
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False,
                       'SCORE_HEUR': 'UNION'},
          'BBOX_REG': True,
          'BBOX_VOTE': {'ENABLED': False,
                        'SCORING_METHOD': 'ID',
                        'SCORING_METHOD_BETA': 1.0,
                        'VOTE_TH': 0.8},
          'COMPETITION_MODE': True,
          'DATASETS': ('voc_2007_test',),
          'DETECTIONS_PER_IM': 100,
          'FORCE_JSON_DATASET_EVAL': False,
          'KPS_AUG': {'AREA_TH': 32400,
                      'ASPECT_RATIOS': (),
                      'ASPECT_RATIO_H_FLIP': False,
                      'ENABLED': False,
                      'HEUR': 'HM_AVG',
                      'H_FLIP': False,
                      'MAX_SIZE': 4000,
                      'SCALES': (),
                      'SCALE_H_FLIP': False,
                      'SCALE_SIZE_DEP': False},
          'MASK_AUG': {'AREA_TH': 32400,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'ENABLED': False,
                       'HEUR': 'SOFT_AVG',
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False},
          'MAX_SIZE': 1000,
          'NMS': 0.5,
          'PRECOMPUTED_PROPOSALS': False,
          'PROPOSAL_FILES': (),
          'PROPOSAL_LIMIT': 2000,
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 1000,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALE': 600,
          'SCORE_THRESH': 0.05,
          'SOFT_NMS': {'ENABLED': False, 'METHOD': 'linear', 'SIGMA': 0.5},
          'WEAK_SUPERVISE': False},
 'TRAIN': {'ASPECT_CROPPING': False,
           'ASPECT_GROUPING': True,
           'ASPECT_HI': 2,
           'ASPECT_LO': 0.5,
           'BATCH_SIZE_PER_IM': 512,
           'BBOX_INSIDE_WEIGHTS': (1.0, 1.0, 1.0, 1.0),
           'BBOX_NORMALIZE_MEANS': (0.0, 0.0, 0.0, 0.0),
           'BBOX_NORMALIZE_STDS': (0.1, 0.1, 0.2, 0.2),
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'COPY_CLS_TO_DET': False,
           'CROWD_FILTER_THRESH': 0.7,
           'DATASETS': (),
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'FREEZE_BOX_HEAD': True,
           'FREEZE_CONV_BODY': False,
           'FREEZE_RPN': False,
           'GT_MIN_AREA': -1,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_FILES': (),
           'RPN_BATCH_SIZE_PER_IM': 256,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 2000,
           'RPN_STRADDLE_THRESH': 0,
           'SCALES': (600,),
           'SNAPSHOT_ITERS': 2000,
           'SPATIAL_REG': False,
           'USE_FLIPPED': True,
           'WEAK_SUPERVISE': True,
           'WEAK_SUPERVISE_WITH_PRETRAIN': True},
 'VIS': False,
 'VIS_TH': 0.9}
loading annotations into memory...
Done (t=0.11s)
creating index...
index created!
INFO test_engine.py: 324: training mode? : False
INFO test_engine.py: 331: loading checkpoint Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step1499.pth
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2477/3714 0.693s + 0.001s (eta: 0:14:18)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2487/3714 0.530s + 0.001s (eta: 0:10:52)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2497/3714 0.521s + 0.001s (eta: 0:10:35)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2507/3714 0.507s + 0.001s (eta: 0:10:13)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2517/3714 0.505s + 0.002s (eta: 0:10:06)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2527/3714 0.496s + 0.002s (eta: 0:09:50)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2537/3714 0.494s + 0.002s (eta: 0:09:43)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2547/3714 0.490s + 0.002s (eta: 0:09:33)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2557/3714 0.490s + 0.002s (eta: 0:09:28)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2567/3714 0.491s + 0.002s (eta: 0:09:25)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2577/3714 0.491s + 0.002s (eta: 0:09:20)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2587/3714 0.492s + 0.002s (eta: 0:09:16)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2597/3714 0.489s + 0.002s (eta: 0:09:08)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2607/3714 0.490s + 0.002s (eta: 0:09:04)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2617/3714 0.488s + 0.002s (eta: 0:08:58)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2627/3714 0.484s + 0.002s (eta: 0:08:48)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2637/3714 0.486s + 0.002s (eta: 0:08:45)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2647/3714 0.486s + 0.002s (eta: 0:08:41)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2657/3714 0.487s + 0.002s (eta: 0:08:36)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2667/3714 0.488s + 0.002s (eta: 0:08:33)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2677/3714 0.488s + 0.002s (eta: 0:08:28)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2687/3714 0.486s + 0.002s (eta: 0:08:21)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2697/3714 0.486s + 0.002s (eta: 0:08:16)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2707/3714 0.487s + 0.002s (eta: 0:08:12)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2717/3714 0.488s + 0.002s (eta: 0:08:08)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2727/3714 0.488s + 0.002s (eta: 0:08:03)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2737/3714 0.488s + 0.002s (eta: 0:07:58)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2747/3714 0.487s + 0.002s (eta: 0:07:52)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2757/3714 0.486s + 0.002s (eta: 0:07:47)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2767/3714 0.488s + 0.002s (eta: 0:07:43)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2777/3714 0.488s + 0.002s (eta: 0:07:38)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2787/3714 0.487s + 0.002s (eta: 0:07:33)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2797/3714 0.487s + 0.002s (eta: 0:07:28)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2807/3714 0.487s + 0.002s (eta: 0:07:23)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2817/3714 0.488s + 0.002s (eta: 0:07:19)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2827/3714 0.489s + 0.002s (eta: 0:07:15)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2837/3714 0.489s + 0.002s (eta: 0:07:10)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2847/3714 0.489s + 0.002s (eta: 0:07:05)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2857/3714 0.490s + 0.002s (eta: 0:07:01)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2867/3714 0.489s + 0.002s (eta: 0:06:56)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2877/3714 0.489s + 0.002s (eta: 0:06:50)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2887/3714 0.489s + 0.002s (eta: 0:06:46)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2897/3714 0.489s + 0.002s (eta: 0:06:41)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2907/3714 0.489s + 0.002s (eta: 0:06:35)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2917/3714 0.488s + 0.002s (eta: 0:06:30)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2927/3714 0.488s + 0.002s (eta: 0:06:25)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2937/3714 0.488s + 0.002s (eta: 0:06:21)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2947/3714 0.487s + 0.002s (eta: 0:06:15)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2957/3714 0.488s + 0.002s (eta: 0:06:11)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2967/3714 0.488s + 0.002s (eta: 0:06:06)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2977/3714 0.488s + 0.002s (eta: 0:06:00)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2987/3714 0.488s + 0.002s (eta: 0:05:55)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2997/3714 0.487s + 0.002s (eta: 0:05:50)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3007/3714 0.487s + 0.002s (eta: 0:05:45)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3017/3714 0.487s + 0.002s (eta: 0:05:40)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3027/3714 0.486s + 0.002s (eta: 0:05:35)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3037/3714 0.487s + 0.002s (eta: 0:05:30)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3047/3714 0.487s + 0.002s (eta: 0:05:26)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3057/3714 0.487s + 0.002s (eta: 0:05:21)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3067/3714 0.487s + 0.002s (eta: 0:05:16)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3077/3714 0.487s + 0.002s (eta: 0:05:11)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3087/3714 0.486s + 0.002s (eta: 0:05:06)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3097/3714 0.487s + 0.002s (eta: 0:05:01)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3107/3714 0.487s + 0.002s (eta: 0:04:56)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3117/3714 0.487s + 0.002s (eta: 0:04:52)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3127/3714 0.487s + 0.002s (eta: 0:04:46)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3137/3714 0.487s + 0.002s (eta: 0:04:42)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3147/3714 0.487s + 0.002s (eta: 0:04:37)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3157/3714 0.487s + 0.002s (eta: 0:04:32)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3167/3714 0.488s + 0.002s (eta: 0:04:27)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3177/3714 0.489s + 0.002s (eta: 0:04:23)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3187/3714 0.489s + 0.002s (eta: 0:04:18)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3197/3714 0.490s + 0.002s (eta: 0:04:14)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3207/3714 0.489s + 0.002s (eta: 0:04:08)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3217/3714 0.490s + 0.002s (eta: 0:04:04)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3227/3714 0.489s + 0.002s (eta: 0:03:59)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3237/3714 0.489s + 0.002s (eta: 0:03:54)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3247/3714 0.491s + 0.002s (eta: 0:03:50)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3257/3714 0.491s + 0.002s (eta: 0:03:45)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3267/3714 0.491s + 0.002s (eta: 0:03:40)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3277/3714 0.491s + 0.002s (eta: 0:03:35)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3287/3714 0.491s + 0.002s (eta: 0:03:30)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3297/3714 0.491s + 0.002s (eta: 0:03:25)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3307/3714 0.491s + 0.002s (eta: 0:03:20)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3317/3714 0.491s + 0.002s (eta: 0:03:15)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3327/3714 0.492s + 0.002s (eta: 0:03:11)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3337/3714 0.492s + 0.002s (eta: 0:03:06)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3347/3714 0.493s + 0.002s (eta: 0:03:01)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3357/3714 0.493s + 0.002s (eta: 0:02:56)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3367/3714 0.494s + 0.002s (eta: 0:02:51)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3377/3714 0.494s + 0.002s (eta: 0:02:47)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3387/3714 0.494s + 0.002s (eta: 0:02:42)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3397/3714 0.495s + 0.002s (eta: 0:02:37)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3407/3714 0.495s + 0.002s (eta: 0:02:32)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3417/3714 0.495s + 0.002s (eta: 0:02:27)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3427/3714 0.495s + 0.002s (eta: 0:02:22)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3437/3714 0.495s + 0.002s (eta: 0:02:17)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3447/3714 0.495s + 0.002s (eta: 0:02:12)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3457/3714 0.495s + 0.002s (eta: 0:02:07)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3467/3714 0.495s + 0.002s (eta: 0:02:02)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3477/3714 0.495s + 0.002s (eta: 0:01:57)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3487/3714 0.496s + 0.002s (eta: 0:01:52)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3497/3714 0.496s + 0.002s (eta: 0:01:47)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3507/3714 0.496s + 0.002s (eta: 0:01:43)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3517/3714 0.496s + 0.002s (eta: 0:01:38)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3527/3714 0.496s + 0.002s (eta: 0:01:33)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3537/3714 0.496s + 0.002s (eta: 0:01:28)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3547/3714 0.496s + 0.002s (eta: 0:01:23)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3557/3714 0.496s + 0.002s (eta: 0:01:18)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3567/3714 0.496s + 0.002s (eta: 0:01:13)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3577/3714 0.497s + 0.002s (eta: 0:01:08)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3587/3714 0.497s + 0.002s (eta: 0:01:03)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3597/3714 0.497s + 0.002s (eta: 0:00:58)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3607/3714 0.497s + 0.002s (eta: 0:00:53)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3617/3714 0.497s + 0.002s (eta: 0:00:48)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3627/3714 0.498s + 0.002s (eta: 0:00:43)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3637/3714 0.498s + 0.002s (eta: 0:00:38)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3647/3714 0.498s + 0.002s (eta: 0:00:33)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3657/3714 0.498s + 0.002s (eta: 0:00:28)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3667/3714 0.498s + 0.002s (eta: 0:00:23)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3677/3714 0.498s + 0.002s (eta: 0:00:18)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3687/3714 0.498s + 0.002s (eta: 0:00:13)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3697/3714 0.498s + 0.002s (eta: 0:00:08)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3707/3714 0.498s + 0.002s (eta: 0:00:03)
INFO test_engine.py: 314: Wrote detections to: /home/ubuntu/Detectron.pytorch/Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_2476_3714.pkl
/home/ubuntu/anaconda3/envs/pytorch41/lib/python3.7/site-packages/torch/nn/functional.py:1890: UserWarning: nn.functional.upsample is deprecated. Use nn.functional.interpolate instead.
  warnings.warn("nn.functional.upsample is deprecated. Use nn.functional.interpolate instead.")

INFO subprocess.py: 129: # ---------------------------------------------------------------------------- #
INFO subprocess.py: 131: stdout of subprocess 3 with range [3715, 4952]
INFO subprocess.py: 133: # ---------------------------------------------------------------------------- #
INFO test_net.py:  72: Called with args:
INFO test_net.py:  73: Namespace(cfg_file='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_config.yaml', dataset=None, load_ckpt='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step1499.pth', load_detectron=None, multi_gpu_testing=False, num_classes=None, output_dir='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test', range=[3714, 4952], set_cfgs=['TEST.DATASETS', '("voc_2007_test",)'], vis=False)
INFO test_net.py: 130: Testing with config:
INFO test_net.py: 131: {'BBOX_XFORM_CLIP': 4.135166556742356,
 'CROP_RESIZE_WITH_MAX_POOL': True,
 'CUDA': False,
 'DATA_DIR': '/home/ubuntu/Detectron.pytorch/data',
 'DATA_LOADER': {'NUM_THREADS': 4},
 'DEBUG': False,
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXPECTED_RESULTS': [],
 'EXPECTED_RESULTS_ATOL': 0.005,
 'EXPECTED_RESULTS_EMAIL': '',
 'EXPECTED_RESULTS_RTOL': 0.1,
 'FAST_RCNN': {'BOX_OUT_STREAMS': 1,
               'CONV_HEAD_DIM': 256,
               'MLP_HEAD_DIM': 1024,
               'NUM_STACKED_CONVS': 4,
               'ROI_BOX_HEAD': 'fast_rcnn_heads.roi_2mlp_head',
               'ROI_XFORM_METHOD': 'RoIAlign',
               'ROI_XFORM_RESOLUTION': 7,
               'ROI_XFORM_SAMPLING_RATIO': 2},
 'FPN': {'COARSEST_STRIDE': 32,
         'DIM': 256,
         'EXTRA_CONV_LEVELS': False,
         'FPN_ON': True,
         'MULTILEVEL_ROIS': True,
         'MULTILEVEL_RPN': True,
         'ROI_CANONICAL_LEVEL': 4,
         'ROI_CANONICAL_SCALE': 224,
         'ROI_MAX_LEVEL': 5,
         'ROI_MIN_LEVEL': 2,
         'RPN_ANCHOR_START_SIZE': 32,
         'RPN_ASPECT_RATIOS': (0.5, 1, 2),
         'RPN_COLLECT_SCALE': 1,
         'RPN_MAX_LEVEL': 6,
         'RPN_MIN_LEVEL': 2,
         'USE_GN': False,
         'ZERO_INIT_LATERAL': False},
 'GROUP_NORM': {'DIM_PER_GP': -1, 'EPSILON': 1e-05, 'NUM_GROUPS': 32},
 'KRCNN': {'CONV_HEAD_DIM': 256,
           'CONV_HEAD_KERNEL': 3,
           'CONV_INIT': 'GaussianFill',
           'DECONV_DIM': 256,
           'DECONV_KERNEL': 4,
           'DILATION': 1,
           'HEATMAP_SIZE': -1,
           'INFERENCE_MIN_SIZE': 0,
           'KEYPOINT_CONFIDENCE': 'bbox',
           'LOSS_WEIGHT': 1.0,
           'MIN_KEYPOINT_COUNT_FOR_VALID_MINIBATCH': 20,
           'NMS_OKS': False,
           'NORMALIZE_BY_VISIBLE_KEYPOINTS': True,
           'NUM_KEYPOINTS': -1,
           'NUM_STACKED_CONVS': 8,
           'ROI_KEYPOINTS_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'UP_SCALE': -1,
           'USE_DECONV': False,
           'USE_DECONV_OUTPUT': False},
 'MATLAB': 'matlab',
 'MODEL': {'BBOX_REG_WEIGHTS': (10.0, 10.0, 5.0, 5.0),
           'CLS_AGNOSTIC_BBOX_REG': False,
           'CONV_BODY': 'FPN.fpn_ResNet101_conv5_body',
           'FASTER_RCNN': True,
           'KEYPOINTS_ON': False,
           'LOAD_IMAGENET_PRETRAINED_WEIGHTS': True,
           'MASK_ON': False,
           'NUM_CLASSES': 21,
           'RPN_ONLY': False,
           'SHARE_RES5': False,
           'TYPE': 'generalized_rcnn',
           'UNSUPERVISED_POSE': False},
 'MRCNN': {'CLS_SPECIFIC_MASK': True,
           'CONV_INIT': 'GaussianFill',
           'DILATION': 2,
           'DIM_REDUCED': 256,
           'MEMORY_EFFICIENT_LOSS': True,
           'RESOLUTION': 14,
           'ROI_MASK_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'THRESH_BINARIZE': 0.5,
           'UPSAMPLE_RATIO': 1,
           'USE_FC_OUTPUT': False,
           'WEIGHT_LOSS_MASK': 1.0},
 'NUM_GPUS': 8,
 'OUTPUT_DIR': 'Outputs',
 'PIXEL_MEANS': array([[[102.9801, 115.9465, 122.7717]]]),
 'POOLING_MODE': 'crop',
 'POOLING_SIZE': 7,
 'PYTORCH_VERSION_LESS_THAN_040': False,
 'RESNETS': {'FREEZE_AT': 2,
             'IMAGENET_PRETRAINED_WEIGHTS': 'data/pretrained_model/resnet101_caffe.pth',
             'NUM_GROUPS': 1,
             'RES5_DILATION': 1,
             'SHORTCUT_FUNC': 'basic_bn_shortcut',
             'STEM_FUNC': 'basic_bn_stem',
             'STRIDE_1X1': True,
             'TRANS_FUNC': 'bottleneck_transformation',
             'USE_GN': False,
             'WIDTH_PER_GROUP': 64},
 'RETINANET': {'ANCHOR_SCALE': 4,
               'ASPECT_RATIOS': (0.5, 1.0, 2.0),
               'BBOX_REG_BETA': 0.11,
               'BBOX_REG_WEIGHT': 1.0,
               'CLASS_SPECIFIC_BBOX': False,
               'INFERENCE_TH': 0.05,
               'LOSS_ALPHA': 0.25,
               'LOSS_GAMMA': 2.0,
               'NEGATIVE_OVERLAP': 0.4,
               'NUM_CONVS': 4,
               'POSITIVE_OVERLAP': 0.5,
               'PRE_NMS_TOP_N': 1000,
               'PRIOR_PROB': 0.01,
               'RETINANET_ON': False,
               'SCALES_PER_OCTAVE': 3,
               'SHARE_CLS_BBOX_TOWER': False,
               'SOFTMAX': False},
 'RFCN': {'PS_GRID_SIZE': 3},
 'RNG_SEED': 3,
 'ROOT_DIR': '/home/ubuntu/Detectron.pytorch',
 'RPN': {'ASPECT_RATIOS': (0.5, 1, 2),
         'CLS_ACTIVATION': 'sigmoid',
         'OUT_DIM': 512,
         'OUT_DIM_AS_IN_DIM': True,
         'RPN_ON': True,
         'SIZES': (64, 128, 256, 512),
         'STRIDE': 16},
 'SOLVER': {'BASE_LR': 2e-05,
            'BIAS_DOUBLE_LR': True,
            'BIAS_WEIGHT_DECAY': False,
            'GAMMA': 0.1,
            'LOG_LR_CHANGE_THRESHOLD': 1.1,
            'LRS': [],
            'LR_POLICY': 'steps_with_decay',
            'MAX_ITER': 10000,
            'MOMENTUM': 0.9,
            'SCALE_MOMENTUM': True,
            'SCALE_MOMENTUM_THRESHOLD': 1.1,
            'STEPS': [0, 5000, 8000],
            'STEP_SIZE': 30000,
            'TYPE': 'SGD',
            'WARM_UP_FACTOR': 0.3333333333333333,
            'WARM_UP_ITERS': 500,
            'WARM_UP_METHOD': 'linear',
            'WEIGHT_DECAY': 0.0001,
            'WEIGHT_DECAY_GN': 0.0},
 'TEST': {'BBOX_AUG': {'AREA_TH_HI': 32400,
                       'AREA_TH_LO': 2500,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'COORD_HEUR': 'UNION',
                       'ENABLED': False,
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False,
                       'SCORE_HEUR': 'UNION'},
          'BBOX_REG': True,
          'BBOX_VOTE': {'ENABLED': False,
                        'SCORING_METHOD': 'ID',
                        'SCORING_METHOD_BETA': 1.0,
                        'VOTE_TH': 0.8},
          'COMPETITION_MODE': True,
          'DATASETS': ('voc_2007_test',),
          'DETECTIONS_PER_IM': 100,
          'FORCE_JSON_DATASET_EVAL': False,
          'KPS_AUG': {'AREA_TH': 32400,
                      'ASPECT_RATIOS': (),
                      'ASPECT_RATIO_H_FLIP': False,
                      'ENABLED': False,
                      'HEUR': 'HM_AVG',
                      'H_FLIP': False,
                      'MAX_SIZE': 4000,
                      'SCALES': (),
                      'SCALE_H_FLIP': False,
                      'SCALE_SIZE_DEP': False},
          'MASK_AUG': {'AREA_TH': 32400,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'ENABLED': False,
                       'HEUR': 'SOFT_AVG',
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False},
          'MAX_SIZE': 1000,
          'NMS': 0.5,
          'PRECOMPUTED_PROPOSALS': False,
          'PROPOSAL_FILES': (),
          'PROPOSAL_LIMIT': 2000,
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 1000,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALE': 600,
          'SCORE_THRESH': 0.05,
          'SOFT_NMS': {'ENABLED': False, 'METHOD': 'linear', 'SIGMA': 0.5},
          'WEAK_SUPERVISE': False},
 'TRAIN': {'ASPECT_CROPPING': False,
           'ASPECT_GROUPING': True,
           'ASPECT_HI': 2,
           'ASPECT_LO': 0.5,
           'BATCH_SIZE_PER_IM': 512,
           'BBOX_INSIDE_WEIGHTS': (1.0, 1.0, 1.0, 1.0),
           'BBOX_NORMALIZE_MEANS': (0.0, 0.0, 0.0, 0.0),
           'BBOX_NORMALIZE_STDS': (0.1, 0.1, 0.2, 0.2),
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'COPY_CLS_TO_DET': False,
           'CROWD_FILTER_THRESH': 0.7,
           'DATASETS': (),
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'FREEZE_BOX_HEAD': True,
           'FREEZE_CONV_BODY': False,
           'FREEZE_RPN': False,
           'GT_MIN_AREA': -1,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_FILES': (),
           'RPN_BATCH_SIZE_PER_IM': 256,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 2000,
           'RPN_STRADDLE_THRESH': 0,
           'SCALES': (600,),
           'SNAPSHOT_ITERS': 2000,
           'SPATIAL_REG': False,
           'USE_FLIPPED': True,
           'WEAK_SUPERVISE': True,
           'WEAK_SUPERVISE_WITH_PRETRAIN': True},
 'VIS': False,
 'VIS_TH': 0.9}
loading annotations into memory...
Done (t=0.13s)
creating index...
index created!
INFO test_engine.py: 324: training mode? : False
INFO test_engine.py: 331: loading checkpoint Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step1499.pth
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3715/4952 0.572s + 0.017s (eta: 0:12:09)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3725/4952 0.504s + 0.003s (eta: 0:10:22)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3735/4952 0.506s + 0.003s (eta: 0:10:18)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3745/4952 0.512s + 0.002s (eta: 0:10:21)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3755/4952 0.507s + 0.002s (eta: 0:10:09)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3765/4952 0.508s + 0.002s (eta: 0:10:05)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3775/4952 0.504s + 0.002s (eta: 0:09:55)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3785/4952 0.501s + 0.002s (eta: 0:09:46)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3795/4952 0.498s + 0.002s (eta: 0:09:37)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3805/4952 0.500s + 0.002s (eta: 0:09:35)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3815/4952 0.499s + 0.002s (eta: 0:09:29)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3825/4952 0.502s + 0.002s (eta: 0:09:27)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3835/4952 0.500s + 0.002s (eta: 0:09:21)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3845/4952 0.498s + 0.002s (eta: 0:09:12)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3855/4952 0.498s + 0.002s (eta: 0:09:08)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3865/4952 0.500s + 0.002s (eta: 0:09:05)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3875/4952 0.501s + 0.002s (eta: 0:09:01)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3885/4952 0.501s + 0.002s (eta: 0:08:56)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3895/4952 0.501s + 0.002s (eta: 0:08:51)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3905/4952 0.502s + 0.002s (eta: 0:08:47)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3915/4952 0.501s + 0.002s (eta: 0:08:41)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3925/4952 0.502s + 0.002s (eta: 0:08:37)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3935/4952 0.502s + 0.002s (eta: 0:08:32)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3945/4952 0.502s + 0.002s (eta: 0:08:27)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3955/4952 0.503s + 0.002s (eta: 0:08:23)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3965/4952 0.504s + 0.002s (eta: 0:08:19)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3975/4952 0.504s + 0.002s (eta: 0:08:14)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3985/4952 0.505s + 0.002s (eta: 0:08:10)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3995/4952 0.506s + 0.002s (eta: 0:08:06)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4005/4952 0.508s + 0.002s (eta: 0:08:02)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4015/4952 0.508s + 0.002s (eta: 0:07:57)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4025/4952 0.506s + 0.002s (eta: 0:07:51)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4035/4952 0.506s + 0.002s (eta: 0:07:46)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4045/4952 0.506s + 0.002s (eta: 0:07:40)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4055/4952 0.506s + 0.002s (eta: 0:07:35)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4065/4952 0.505s + 0.002s (eta: 0:07:29)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4075/4952 0.505s + 0.002s (eta: 0:07:25)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4085/4952 0.504s + 0.002s (eta: 0:07:18)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4095/4952 0.504s + 0.002s (eta: 0:07:13)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4105/4952 0.505s + 0.002s (eta: 0:07:09)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4115/4952 0.504s + 0.002s (eta: 0:07:03)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4125/4952 0.504s + 0.002s (eta: 0:06:58)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4135/4952 0.504s + 0.002s (eta: 0:06:53)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4145/4952 0.504s + 0.002s (eta: 0:06:48)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4155/4952 0.505s + 0.002s (eta: 0:06:44)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4165/4952 0.506s + 0.002s (eta: 0:06:39)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4175/4952 0.506s + 0.002s (eta: 0:06:34)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4185/4952 0.506s + 0.002s (eta: 0:06:29)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4195/4952 0.506s + 0.002s (eta: 0:06:24)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4205/4952 0.506s + 0.002s (eta: 0:06:19)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4215/4952 0.506s + 0.002s (eta: 0:06:14)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4225/4952 0.506s + 0.002s (eta: 0:06:09)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4235/4952 0.506s + 0.002s (eta: 0:06:03)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4245/4952 0.505s + 0.002s (eta: 0:05:58)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4255/4952 0.504s + 0.002s (eta: 0:05:52)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4265/4952 0.503s + 0.002s (eta: 0:05:47)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4275/4952 0.503s + 0.002s (eta: 0:05:41)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4285/4952 0.502s + 0.002s (eta: 0:05:36)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4295/4952 0.502s + 0.002s (eta: 0:05:31)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4305/4952 0.502s + 0.002s (eta: 0:05:25)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4315/4952 0.502s + 0.002s (eta: 0:05:20)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4325/4952 0.502s + 0.002s (eta: 0:05:15)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4335/4952 0.502s + 0.002s (eta: 0:05:11)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4345/4952 0.502s + 0.002s (eta: 0:05:05)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4355/4952 0.501s + 0.002s (eta: 0:05:00)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4365/4952 0.501s + 0.002s (eta: 0:04:55)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4375/4952 0.500s + 0.002s (eta: 0:04:49)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4385/4952 0.500s + 0.002s (eta: 0:04:44)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4395/4952 0.499s + 0.002s (eta: 0:04:39)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4405/4952 0.499s + 0.002s (eta: 0:04:34)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4415/4952 0.499s + 0.002s (eta: 0:04:29)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4425/4952 0.499s + 0.002s (eta: 0:04:24)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4435/4952 0.499s + 0.002s (eta: 0:04:18)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4445/4952 0.498s + 0.002s (eta: 0:04:13)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4455/4952 0.499s + 0.002s (eta: 0:04:08)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4465/4952 0.497s + 0.002s (eta: 0:04:03)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4475/4952 0.497s + 0.002s (eta: 0:03:57)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4485/4952 0.497s + 0.002s (eta: 0:03:52)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4495/4952 0.496s + 0.002s (eta: 0:03:47)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4505/4952 0.496s + 0.002s (eta: 0:03:42)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4515/4952 0.496s + 0.002s (eta: 0:03:37)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4525/4952 0.496s + 0.002s (eta: 0:03:32)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4535/4952 0.497s + 0.002s (eta: 0:03:27)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4545/4952 0.496s + 0.002s (eta: 0:03:22)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4555/4952 0.496s + 0.002s (eta: 0:03:17)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4565/4952 0.496s + 0.002s (eta: 0:03:12)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4575/4952 0.495s + 0.002s (eta: 0:03:07)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4585/4952 0.495s + 0.002s (eta: 0:03:02)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4595/4952 0.495s + 0.002s (eta: 0:02:57)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4605/4952 0.495s + 0.002s (eta: 0:02:52)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4615/4952 0.495s + 0.002s (eta: 0:02:47)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4625/4952 0.495s + 0.002s (eta: 0:02:42)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4635/4952 0.495s + 0.002s (eta: 0:02:37)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4645/4952 0.495s + 0.002s (eta: 0:02:32)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4655/4952 0.495s + 0.002s (eta: 0:02:27)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4665/4952 0.495s + 0.002s (eta: 0:02:22)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4675/4952 0.495s + 0.002s (eta: 0:02:17)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4685/4952 0.496s + 0.002s (eta: 0:02:12)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4695/4952 0.496s + 0.002s (eta: 0:02:07)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4705/4952 0.496s + 0.002s (eta: 0:02:02)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4715/4952 0.496s + 0.002s (eta: 0:01:58)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4725/4952 0.497s + 0.002s (eta: 0:01:53)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4735/4952 0.497s + 0.002s (eta: 0:01:48)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4745/4952 0.497s + 0.002s (eta: 0:01:43)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4755/4952 0.497s + 0.002s (eta: 0:01:38)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4765/4952 0.497s + 0.002s (eta: 0:01:33)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4775/4952 0.497s + 0.002s (eta: 0:01:28)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4785/4952 0.498s + 0.002s (eta: 0:01:23)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4795/4952 0.498s + 0.002s (eta: 0:01:18)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4805/4952 0.498s + 0.002s (eta: 0:01:13)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4815/4952 0.498s + 0.002s (eta: 0:01:08)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4825/4952 0.498s + 0.002s (eta: 0:01:03)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4835/4952 0.498s + 0.002s (eta: 0:00:58)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4845/4952 0.498s + 0.002s (eta: 0:00:53)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4855/4952 0.498s + 0.002s (eta: 0:00:48)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4865/4952 0.498s + 0.002s (eta: 0:00:43)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4875/4952 0.499s + 0.002s (eta: 0:00:38)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4885/4952 0.499s + 0.002s (eta: 0:00:33)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4895/4952 0.498s + 0.002s (eta: 0:00:28)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4905/4952 0.498s + 0.002s (eta: 0:00:23)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4915/4952 0.498s + 0.002s (eta: 0:00:18)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4925/4952 0.498s + 0.002s (eta: 0:00:13)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4935/4952 0.498s + 0.002s (eta: 0:00:08)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4945/4952 0.498s + 0.002s (eta: 0:00:03)
INFO test_engine.py: 314: Wrote detections to: /home/ubuntu/Detectron.pytorch/Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_3714_4952.pkl
/home/ubuntu/anaconda3/envs/pytorch41/lib/python3.7/site-packages/torch/nn/functional.py:1890: UserWarning: nn.functional.upsample is deprecated. Use nn.functional.interpolate instead.
  warnings.warn("nn.functional.upsample is deprecated. Use nn.functional.interpolate instead.")

INFO test_engine.py: 211: Wrote detections to: /home/ubuntu/Detectron.pytorch/Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detections.pkl
INFO test_engine.py: 161: Total inference time: 641.700s
INFO task_evaluation.py:  77: Evaluating detections
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: aeroplane
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: bicycle
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: bird
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: boat
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: bottle
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: bus
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: car
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: cat
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: chair
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: cow
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: diningtable
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: dog
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: horse
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: motorbike
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: person
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: pottedplant
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: sheep
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: sofa
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: train
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: tvmonitor
INFO voc_dataset_evaluator.py: 115: VOC07 metric? Yes
INFO voc_eval.py: 171: [1175 1214  703 ...  525  624  698]
INFO voc_dataset_evaluator.py: 127: AP for aeroplane = 0.7697
INFO voc_eval.py: 171: [287 180  36 ... 466 905 819]
INFO voc_dataset_evaluator.py: 127: AP for bicycle = 0.7857
INFO voc_eval.py: 171: [1202 1255 1566 ... 2604 2328 2085]
INFO voc_dataset_evaluator.py: 127: AP for bird = 0.7895
INFO voc_eval.py: 171: [1557 2210  504 ... 1077 1797 1332]
INFO voc_dataset_evaluator.py: 127: AP for boat = 0.6239
INFO voc_eval.py: 171: [1011 1900  653 ... 2090  190 1598]
INFO voc_dataset_evaluator.py: 127: AP for bottle = 0.6747
INFO voc_eval.py: 171: [353 930 294 147 762 927 958 840 231 576 901 524 544   4 655  30 772 240
 115  93 285 694 452 153  82 498 718 812  38 944 873 602 867 312  20 860
 708 934 763 643 725 726 548 511 791 698 216 456 761 485 226  60  91 419
  35  87 624 821 889 139  55 798 675 612  92 618 863 591 205 585 133 270
 446 805 253 341  25 309 200 740 839 653 806 807 531  78 179 476 595 393
 415 424 388 558 439 975 714 961  39 499 192 194 297 527 673 905 719 864
 634 874 731 941 162 435 287 126 323 582 792 144 564 917 908 464 376 203
 692 868 373 947  22 244  66 125 906 269 569 493 230 933 337 789 619 849
 568 730 593 209 523 331 242 620 534 584 344 432 894 539 414 416 886 261
 623 197 606 508 343 471   1 219 753 680 302 320 773 565 852 828 389 518
 729 289 715  15 567 871 659 403 258 588 549 298 384 764 364 836 912 658
 693   0  89 108 445 613 660 488 554 611 701 626 521 466  74 642 949 314
  21 820 280 299 880 193 442  56 966 275 787  84 457 155 448 371 378 703
 869 540 434 529 263 288 827 669 924 159 904 627 290 887 221 953 401 100
 180 749 255 721 327 217 541 760 430 149 306 472 201 152 960 920 185 116
 496 447 778 324 413 850 291 816 342 171 506 948 720 754 903 610 143 381
 380 473 392 962 824  86 616 609 813 122 801 441  12  32 281 670 500 259
 742 190  61 454 785 957  47 391 182 808 928 684 241 248 150 724 137 507
  69 589 404  94 746 151 552 776 923 443 394  40 723 113 254 145 208 191
 751 741 956 112  98 799 793 838 469 167 245 516 910 757 727 771 638 713
 390 495 710 946 657 752  28 822 187 974 486 172 250 141  11 709  37   8
 375 206 664 286 348 755  71  31 482 426 246  41 570 517 732 160 195 784
 333 124 438 215 826 779 433 895 455 422 238 682 228 537 260 135 140 535
 628 339 637 252 919 310 101  63 943 830 359 577 489 121 128  88 926 114
 265 737 264 321 922 696 594 243 911 590 674   5 968 459 225 733  29 379
 110 480 786 370 328 462  62 119 387 819   6 897  51 522 579 884 165 781
 313 405 913  90  59 204 803 477 491 111 555 965 158 296 551 951  42 598
 362 700 198 479 632 678  85  77 797 528 336  52 505 711 262 292 211 885
 420 175 770 550  18 154 465 832 251 282 330 224 650 444  79 239 177 902
 311 685 654  23 123 629 882 666 641 964 631 898 795 542 427 722  43 513
 267 357  48 395  45 738 892 663 574 572 345 325 360 164 691 103  13  67
 202 556 587 451 774 421 600 134  33 484 900 656 878  76 744 973 509 363
 802 157 851  26 573 120 630 183 461 117 538 834   9 453 368 184 386 494
 686 181 896 870  97 777 458 809 970  24 356 835  14 304 402 163 106 645
 750 400 503 212 716  70 249 396 959 636 350 109 256 423  64 276 938 105
 318 398 235 823 676 707 406 526 810  81 463 560 945 305 545 646 586 428
 647 483 683 107 501 825 814 118 492 138 284 308 865 854 468 470 449 918
  19 935 667 940  44 229 322 580 166 608 765 271 232 672 210 963 233 347
 728 954  50 519 661 758 603 937 899 689 247 888   2 955 268 769 748 817
 780 234 833 104 759 978 369 431 533 295 293 843  46 571 688 848 893  65
 515 377 559  53 818  95 856 169 338 841 361 972 775 695 705 510 168 735
   3 383 214 354 915 132 547 173 847 273 601 512 497 768 846  83 640 800
 621 326 876 662 788 881 520 425 734 127 583 409 831 307 697 614 739 213
 566 604 969 257 189 504 829 625 365 374 597 460 855 561 358 879 220 635
 161 227 237 437 794 877 861 858 717 283 136 872 581 648 553  80 148 815
 411  27 407  17 712 782  34 429 862 766 334 665 467 301 532 605 223  96
 502 925 853 102 146 352 218 747 736 921 842 543 367 699 174 971 156  36
   7 436 679 349 756 668 332 939 222 199 385 767 942 563 644 142 315 671
  99 236 412 844 478  54 303 617 976 651  73 936  72 783 592 188 408 196
  49 397 932 346 557 745 804 622 706 546 317 837 687 366 909 907  57  58
 319 578 274 607 277 875 615 950 914 272 490 316 639 916  16 176 681 857
 859 178 335  75 279 131 207 382 525 481 596 372 536 266 562 866 845 929
  68 530 690 890 891 450 931 743 514 418 300 186 410 704 440 399 417 967
 130 170 129 796 278 575 633 649 329 952 340 702 790 351 677 977 475 883
 652 355 811 599  10 487 474]
INFO voc_dataset_evaluator.py: 127: AP for bus = 0.7880
INFO voc_eval.py: 171: [4947 5702 1219 ... 2035 3492 4817]
INFO voc_dataset_evaluator.py: 127: AP for car = 0.8576
INFO voc_eval.py: 171: [ 893  977 1014 ...  994 1254  698]
INFO voc_dataset_evaluator.py: 127: AP for cat = 0.8583
INFO voc_eval.py: 171: [ 136 3321  135 ...  298 4054 5625]
INFO voc_dataset_evaluator.py: 127: AP for chair = 0.6127
INFO voc_eval.py: 171: [1708 1412  813 ... 1129  281  811]
INFO voc_dataset_evaluator.py: 127: AP for cow = 0.7632
INFO voc_eval.py: 171: [1049 2151  627 ... 2370  976 1939]
INFO voc_dataset_evaluator.py: 127: AP for diningtable = 0.6222
INFO voc_eval.py: 171: [ 124 1185  473 ... 1656  111  295]
INFO voc_dataset_evaluator.py: 127: AP for dog = 0.8232
INFO voc_eval.py: 171: [  28  161  529 ... 1014  516  325]
INFO voc_dataset_evaluator.py: 127: AP for horse = 0.8282
INFO voc_eval.py: 171: [1024  308  203 ...  930   17  294]
INFO voc_dataset_evaluator.py: 127: AP for motorbike = 0.7207
INFO voc_eval.py: 171: [11257 19939  7715 ...  3926  8427 15330]
INFO voc_dataset_evaluator.py: 127: AP for person = 0.8390
INFO voc_eval.py: 171: [1992  260 2450 ... 1522  122 1677]
INFO voc_dataset_evaluator.py: 127: AP for pottedplant = 0.4525
INFO voc_eval.py: 171: [1694  326  635 ...  940  180 1861]
INFO voc_dataset_evaluator.py: 127: AP for sheep = 0.7612
INFO voc_eval.py: 171: [1215  802  487 ... 1578  320  833]
INFO voc_dataset_evaluator.py: 127: AP for sofa = 0.6899
INFO voc_eval.py: 171: [ 179  564 1322 ... 1183 1361  975]
INFO voc_dataset_evaluator.py: 127: AP for train = 0.7643
INFO voc_eval.py: 171: [440 266 658  22 292 585  98 671  61 416 220 556 383 172 775 438 215  94
 476 354 235 478 435 646 418 183 116 555 411 248 460 538 645 522 277  42
 565  36 238  79 710 443 213 348 255 161 153 323 225 635  99 651 462 724
 155 793 389 740 314 164 672 140 662 444 541 110 496 540 243 141 346  66
 115  58 778 469 678 728 283 700 313 419  76 289 493 597 369 371 683 561
  19 486 129  89 754 806 676 136   6 270 627 667  12 376 321 287 168  77
 494 166 641  46  16 373 127 271 122  23 104 291 591   5 736 504 554 619
 643 721 470  74 757 420 656 647 245  90 158 750 421   3  40 413 296 178
 458 130 744 422 530 616 495 473 623 333 107 365  88 412 726 784 401 755
 450 814 297 659 680 386 303  65 151 515 766 272 121 126 598 120 461 275
 649 589 688 666 198 557 788 583 796 338 767 516  84 811 794 193 395 391
 626 186 399 510 293  95 147 762 765 612 177  72 312 696 343 815 579 429
 464 761 529 356 379 228 663 180 681  82 455 203   2 208 544 568 701 679
 210 474  64 467 704 573 547 816 387 327 771 302 513 253 414 294 708 394
 187  81 661 222 165 403 234 298 358 319 772 617 316 592 601 352 406 625
 452 350 758 124 735 715 686 501 396  34 339 108 329 783  10 673 304 609
 711  68 511 539 618 791  48  24 190 713  86 269 586  35 542 520 388 602
 689 471 142 669 392 780 604 192 732 188 503 549 633  96 230 652 738 526
 690 114 375 760  91 216 144 185 226 332 512 789 792 553 445 200  49 810
 684 596 100 567 301 318 150 286 113 483 580 257 101 782 524 578 748 697
 105 285 737 393 320 514 437  70 519 468 545  44 776  33 620 359 131 509
 622 307 407 409 759 447  32 798 613  18 665 807 169 334 719 569 657 184
 408 675 779 357  54 398 324 181 564 247 594 260 631 731 145 558 160 485
 427 621 717 377 655 505 149 451  56 535 574 628 256   7 347   4 223 111
 693 326 730 305 204 335  83 687 402 487 781 117 212 370 638 232 599 128
 702 682 112 206 221 163 209 199 475 424 463 577 644 306 390 231 189 237
 741  53 716 534 349 441  38 785 384 353 325 299 795 709 600 640 423 211
 739 123 138 507 746 154 405 442  93 132 797 382  31 328  63 729 677 615
 502 562 508 727 482 457 139 489  51 707 351 156 712 648 355  67 170 525
 385 674 698  80 152 763 582 670 218   8 426  43 518 777  92 367 361 480
 146 143 251 590 261 331 360 774 572 694 179 342 593 764 191 322  75 274
 753 484 703  25 336 705 459  47 799 650 167 290 660 699 454  28 236 109
 812 466 695  62  55 551 434 417 258 584 500 174 439 773 608 733   0 428
 214 281 119  37 194 159 528 430 262 543 581 273 790 254 664 611 400 654
 229 722 196 118 465 497 768 337 491 205 366  50 106 176  15 244 436 224
 808 800 201 397 173 734 605 571  60 280 279 282 295 380 575 246 446  27
 263 747  21 537 267 523 449 133 536  11 634 207 197 404 787 135 309 492
 362 249 595 563 745 242 743 817 642 219  14 344  20 134 499  85 639 479
 310 804 182 425 809  41 288 315 668 531 725  73 506 546 533 714 588 330
 340 570 532 265 517 240 653 363 685 317 751 308 770 381 378 813 227 749
 276 202 102  97 527 278 636  17 268 345 364 448 341 498 691 614 264 630
 607 610 521  45 606 239  71  52 637 195 374 552 415  69   9 241   1 125
 488 171 769 410 157 372 137 259 477 433 162 587 603 103 692 311 368 148
 752 629 801  26  59  30 175 217 250 490 559 718 723 432 472  39 560 805
 550 566 706 284 624 300  57 632 756  78 481  29 453 548 742 576 803 252
 720  13 456 786  87 431 802 233]
INFO voc_dataset_evaluator.py: 127: AP for tvmonitor = 0.7279
INFO voc_dataset_evaluator.py: 130: Mean AP = 0.7376
INFO voc_dataset_evaluator.py: 131: ~~~~~~~~
INFO voc_dataset_evaluator.py: 132: Results:
INFO voc_dataset_evaluator.py: 134: 0.770
INFO voc_dataset_evaluator.py: 134: 0.786
INFO voc_dataset_evaluator.py: 134: 0.790
INFO voc_dataset_evaluator.py: 134: 0.624
INFO voc_dataset_evaluator.py: 134: 0.675
INFO voc_dataset_evaluator.py: 134: 0.788
INFO voc_dataset_evaluator.py: 134: 0.858
INFO voc_dataset_evaluator.py: 134: 0.858
INFO voc_dataset_evaluator.py: 134: 0.613
INFO voc_dataset_evaluator.py: 134: 0.763
INFO voc_dataset_evaluator.py: 134: 0.622
INFO voc_dataset_evaluator.py: 134: 0.823
INFO voc_dataset_evaluator.py: 134: 0.828
INFO voc_dataset_evaluator.py: 134: 0.721
INFO voc_dataset_evaluator.py: 134: 0.839
INFO voc_dataset_evaluator.py: 134: 0.452
INFO voc_dataset_evaluator.py: 134: 0.761
INFO voc_dataset_evaluator.py: 134: 0.690
INFO voc_dataset_evaluator.py: 134: 0.764
INFO voc_dataset_evaluator.py: 134: 0.728
INFO voc_dataset_evaluator.py: 135: 0.738
INFO voc_dataset_evaluator.py: 136: ~~~~~~~~
INFO voc_dataset_evaluator.py: 137: 
INFO voc_dataset_evaluator.py: 138: ----------------------------------------------------------
INFO voc_dataset_evaluator.py: 139: Results computed with the **unofficial** Python eval code.
INFO voc_dataset_evaluator.py: 140: Results should be very close to the official MATLAB code.
INFO voc_dataset_evaluator.py: 141: Use `./tools/reval.py --matlab ...` for your paper.
INFO voc_dataset_evaluator.py: 142: -- Thanks, The Management
INFO voc_dataset_evaluator.py: 143: ----------------------------------------------------------
INFO task_evaluation.py:  63: Evaluating bounding boxes is done!
INFO task_evaluation.py: 189: copypaste: Dataset: voc_2007_test
INFO task_evaluation.py: 191: copypaste: Task: box
INFO task_evaluation.py: 194: copypaste: AP,AP50,AP75,APs,APm,APl
INFO task_evaluation.py: 195: copypaste: -1.0000,-1.0000,-1.0000,-1.0000,-1.0000,-1.0000
Start testing on iteration 2499
INFO test_net.py:  72: Called with args:
INFO test_net.py:  73: Namespace(cfg_file='configs/dt/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv.yaml', dataset='voc2007', load_ckpt='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step2499.pth', load_detectron=None, multi_gpu_testing=True, num_classes=None, output_dir=None, range=None, set_cfgs=[], vis=False)
INFO test_net.py:  83: Automatically set output directory to Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test
INFO test_net.py: 130: Testing with config:
INFO test_net.py: 131: {'BBOX_XFORM_CLIP': 4.135166556742356,
 'CROP_RESIZE_WITH_MAX_POOL': True,
 'CUDA': False,
 'DATA_DIR': '/home/ubuntu/Detectron.pytorch/data',
 'DATA_LOADER': {'NUM_THREADS': 4},
 'DEBUG': False,
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXPECTED_RESULTS': [],
 'EXPECTED_RESULTS_ATOL': 0.005,
 'EXPECTED_RESULTS_EMAIL': '',
 'EXPECTED_RESULTS_RTOL': 0.1,
 'FAST_RCNN': {'BOX_OUT_STREAMS': 1,
               'CONV_HEAD_DIM': 256,
               'MLP_HEAD_DIM': 1024,
               'NUM_STACKED_CONVS': 4,
               'ROI_BOX_HEAD': 'fast_rcnn_heads.roi_2mlp_head',
               'ROI_XFORM_METHOD': 'RoIAlign',
               'ROI_XFORM_RESOLUTION': 7,
               'ROI_XFORM_SAMPLING_RATIO': 2},
 'FPN': {'COARSEST_STRIDE': 32,
         'DIM': 256,
         'EXTRA_CONV_LEVELS': False,
         'FPN_ON': True,
         'MULTILEVEL_ROIS': True,
         'MULTILEVEL_RPN': True,
         'ROI_CANONICAL_LEVEL': 4,
         'ROI_CANONICAL_SCALE': 224,
         'ROI_MAX_LEVEL': 5,
         'ROI_MIN_LEVEL': 2,
         'RPN_ANCHOR_START_SIZE': 32,
         'RPN_ASPECT_RATIOS': (0.5, 1, 2),
         'RPN_COLLECT_SCALE': 1,
         'RPN_MAX_LEVEL': 6,
         'RPN_MIN_LEVEL': 2,
         'USE_GN': False,
         'ZERO_INIT_LATERAL': False},
 'GROUP_NORM': {'DIM_PER_GP': -1, 'EPSILON': 1e-05, 'NUM_GROUPS': 32},
 'KRCNN': {'CONV_HEAD_DIM': 256,
           'CONV_HEAD_KERNEL': 3,
           'CONV_INIT': 'GaussianFill',
           'DECONV_DIM': 256,
           'DECONV_KERNEL': 4,
           'DILATION': 1,
           'HEATMAP_SIZE': -1,
           'INFERENCE_MIN_SIZE': 0,
           'KEYPOINT_CONFIDENCE': 'bbox',
           'LOSS_WEIGHT': 1.0,
           'MIN_KEYPOINT_COUNT_FOR_VALID_MINIBATCH': 20,
           'NMS_OKS': False,
           'NORMALIZE_BY_VISIBLE_KEYPOINTS': True,
           'NUM_KEYPOINTS': -1,
           'NUM_STACKED_CONVS': 8,
           'ROI_KEYPOINTS_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'UP_SCALE': -1,
           'USE_DECONV': False,
           'USE_DECONV_OUTPUT': False},
 'MATLAB': 'matlab',
 'MODEL': {'BBOX_REG_WEIGHTS': (10.0, 10.0, 5.0, 5.0),
           'CLS_AGNOSTIC_BBOX_REG': False,
           'CONV_BODY': 'FPN.fpn_ResNet101_conv5_body',
           'FASTER_RCNN': True,
           'KEYPOINTS_ON': False,
           'LOAD_IMAGENET_PRETRAINED_WEIGHTS': True,
           'MASK_ON': False,
           'NUM_CLASSES': 21,
           'RPN_ONLY': False,
           'SHARE_RES5': False,
           'TYPE': 'generalized_rcnn',
           'UNSUPERVISED_POSE': False},
 'MRCNN': {'CLS_SPECIFIC_MASK': True,
           'CONV_INIT': 'GaussianFill',
           'DILATION': 2,
           'DIM_REDUCED': 256,
           'MEMORY_EFFICIENT_LOSS': True,
           'RESOLUTION': 14,
           'ROI_MASK_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'THRESH_BINARIZE': 0.5,
           'UPSAMPLE_RATIO': 1,
           'USE_FC_OUTPUT': False,
           'WEIGHT_LOSS_MASK': 1.0},
 'NUM_GPUS': 8,
 'OUTPUT_DIR': 'Outputs',
 'PIXEL_MEANS': array([[[102.9801, 115.9465, 122.7717]]]),
 'POOLING_MODE': 'crop',
 'POOLING_SIZE': 7,
 'PYTORCH_VERSION_LESS_THAN_040': False,
 'RESNETS': {'FREEZE_AT': 2,
             'IMAGENET_PRETRAINED_WEIGHTS': 'data/pretrained_model/resnet101_caffe.pth',
             'NUM_GROUPS': 1,
             'RES5_DILATION': 1,
             'SHORTCUT_FUNC': 'basic_bn_shortcut',
             'STEM_FUNC': 'basic_bn_stem',
             'STRIDE_1X1': True,
             'TRANS_FUNC': 'bottleneck_transformation',
             'USE_GN': False,
             'WIDTH_PER_GROUP': 64},
 'RETINANET': {'ANCHOR_SCALE': 4,
               'ASPECT_RATIOS': (0.5, 1.0, 2.0),
               'BBOX_REG_BETA': 0.11,
               'BBOX_REG_WEIGHT': 1.0,
               'CLASS_SPECIFIC_BBOX': False,
               'INFERENCE_TH': 0.05,
               'LOSS_ALPHA': 0.25,
               'LOSS_GAMMA': 2.0,
               'NEGATIVE_OVERLAP': 0.4,
               'NUM_CONVS': 4,
               'POSITIVE_OVERLAP': 0.5,
               'PRE_NMS_TOP_N': 1000,
               'PRIOR_PROB': 0.01,
               'RETINANET_ON': False,
               'SCALES_PER_OCTAVE': 3,
               'SHARE_CLS_BBOX_TOWER': False,
               'SOFTMAX': False},
 'RFCN': {'PS_GRID_SIZE': 3},
 'RNG_SEED': 3,
 'ROOT_DIR': '/home/ubuntu/Detectron.pytorch',
 'RPN': {'ASPECT_RATIOS': (0.5, 1, 2),
         'CLS_ACTIVATION': 'sigmoid',
         'OUT_DIM': 512,
         'OUT_DIM_AS_IN_DIM': True,
         'RPN_ON': True,
         'SIZES': (64, 128, 256, 512),
         'STRIDE': 16},
 'SOLVER': {'BASE_LR': 2e-05,
            'BIAS_DOUBLE_LR': True,
            'BIAS_WEIGHT_DECAY': False,
            'GAMMA': 0.1,
            'LOG_LR_CHANGE_THRESHOLD': 1.1,
            'LRS': [],
            'LR_POLICY': 'steps_with_decay',
            'MAX_ITER': 10000,
            'MOMENTUM': 0.9,
            'SCALE_MOMENTUM': True,
            'SCALE_MOMENTUM_THRESHOLD': 1.1,
            'STEPS': [0, 5000, 8000],
            'STEP_SIZE': 30000,
            'TYPE': 'SGD',
            'WARM_UP_FACTOR': 0.3333333333333333,
            'WARM_UP_ITERS': 500,
            'WARM_UP_METHOD': 'linear',
            'WEIGHT_DECAY': 0.0001,
            'WEIGHT_DECAY_GN': 0.0},
 'TEST': {'BBOX_AUG': {'AREA_TH_HI': 32400,
                       'AREA_TH_LO': 2500,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'COORD_HEUR': 'UNION',
                       'ENABLED': False,
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False,
                       'SCORE_HEUR': 'UNION'},
          'BBOX_REG': True,
          'BBOX_VOTE': {'ENABLED': False,
                        'SCORING_METHOD': 'ID',
                        'SCORING_METHOD_BETA': 1.0,
                        'VOTE_TH': 0.8},
          'COMPETITION_MODE': True,
          'DATASETS': ('voc_2007_test',),
          'DETECTIONS_PER_IM': 100,
          'FORCE_JSON_DATASET_EVAL': False,
          'KPS_AUG': {'AREA_TH': 32400,
                      'ASPECT_RATIOS': (),
                      'ASPECT_RATIO_H_FLIP': False,
                      'ENABLED': False,
                      'HEUR': 'HM_AVG',
                      'H_FLIP': False,
                      'MAX_SIZE': 4000,
                      'SCALES': (),
                      'SCALE_H_FLIP': False,
                      'SCALE_SIZE_DEP': False},
          'MASK_AUG': {'AREA_TH': 32400,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'ENABLED': False,
                       'HEUR': 'SOFT_AVG',
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False},
          'MAX_SIZE': 1000,
          'NMS': 0.5,
          'PRECOMPUTED_PROPOSALS': False,
          'PROPOSAL_FILES': (),
          'PROPOSAL_LIMIT': 2000,
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 1000,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALE': 600,
          'SCORE_THRESH': 0.05,
          'SOFT_NMS': {'ENABLED': False, 'METHOD': 'linear', 'SIGMA': 0.5},
          'WEAK_SUPERVISE': False},
 'TRAIN': {'ASPECT_CROPPING': False,
           'ASPECT_GROUPING': True,
           'ASPECT_HI': 2,
           'ASPECT_LO': 0.5,
           'BATCH_SIZE_PER_IM': 512,
           'BBOX_INSIDE_WEIGHTS': (1.0, 1.0, 1.0, 1.0),
           'BBOX_NORMALIZE_MEANS': (0.0, 0.0, 0.0, 0.0),
           'BBOX_NORMALIZE_STDS': (0.1, 0.1, 0.2, 0.2),
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'COPY_CLS_TO_DET': False,
           'CROWD_FILTER_THRESH': 0.7,
           'DATASETS': (),
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'FREEZE_BOX_HEAD': True,
           'FREEZE_CONV_BODY': False,
           'FREEZE_RPN': False,
           'GT_MIN_AREA': -1,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_FILES': (),
           'RPN_BATCH_SIZE_PER_IM': 256,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 2000,
           'RPN_STRADDLE_THRESH': 0,
           'SCALES': (600,),
           'SNAPSHOT_ITERS': 2000,
           'SPATIAL_REG': False,
           'USE_FLIPPED': True,
           'WEAK_SUPERVISE': True,
           'WEAK_SUPERVISE_WITH_PRETRAIN': True},
 'VIS': False,
 'VIS_TH': 0.9}
loading annotations into memory...
Done (t=0.14s)
creating index...
index created!
INFO subprocess.py:  59: 0,1,2,3
INFO subprocess.py:  67: gpu_inds: [0, 1, 2, 3]
INFO subprocess.py:  89: detection range command 0: python /home/ubuntu/Detectron.pytorch/tools/test_net.py --range 0 1238 --cfg Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_config.yaml --set TEST.DATASETS '("voc_2007_test",)' --output_dir Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test --load_ckpt Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step2499.pth
INFO subprocess.py:  89: detection range command 1: python /home/ubuntu/Detectron.pytorch/tools/test_net.py --range 1238 2476 --cfg Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_config.yaml --set TEST.DATASETS '("voc_2007_test",)' --output_dir Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test --load_ckpt Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step2499.pth
INFO subprocess.py:  89: detection range command 2: python /home/ubuntu/Detectron.pytorch/tools/test_net.py --range 2476 3714 --cfg Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_config.yaml --set TEST.DATASETS '("voc_2007_test",)' --output_dir Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test --load_ckpt Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step2499.pth
INFO subprocess.py:  89: detection range command 3: python /home/ubuntu/Detectron.pytorch/tools/test_net.py --range 3714 4952 --cfg Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_config.yaml --set TEST.DATASETS '("voc_2007_test",)' --output_dir Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test --load_ckpt Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step2499.pth
INFO subprocess.py: 129: # ---------------------------------------------------------------------------- #
INFO subprocess.py: 131: stdout of subprocess 0 with range [1, 1238]
INFO subprocess.py: 133: # ---------------------------------------------------------------------------- #
INFO test_net.py:  72: Called with args:
INFO test_net.py:  73: Namespace(cfg_file='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_config.yaml', dataset=None, load_ckpt='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step2499.pth', load_detectron=None, multi_gpu_testing=False, num_classes=None, output_dir='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test', range=[0, 1238], set_cfgs=['TEST.DATASETS', '("voc_2007_test",)'], vis=False)
INFO test_net.py: 130: Testing with config:
INFO test_net.py: 131: {'BBOX_XFORM_CLIP': 4.135166556742356,
 'CROP_RESIZE_WITH_MAX_POOL': True,
 'CUDA': False,
 'DATA_DIR': '/home/ubuntu/Detectron.pytorch/data',
 'DATA_LOADER': {'NUM_THREADS': 4},
 'DEBUG': False,
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXPECTED_RESULTS': [],
 'EXPECTED_RESULTS_ATOL': 0.005,
 'EXPECTED_RESULTS_EMAIL': '',
 'EXPECTED_RESULTS_RTOL': 0.1,
 'FAST_RCNN': {'BOX_OUT_STREAMS': 1,
               'CONV_HEAD_DIM': 256,
               'MLP_HEAD_DIM': 1024,
               'NUM_STACKED_CONVS': 4,
               'ROI_BOX_HEAD': 'fast_rcnn_heads.roi_2mlp_head',
               'ROI_XFORM_METHOD': 'RoIAlign',
               'ROI_XFORM_RESOLUTION': 7,
               'ROI_XFORM_SAMPLING_RATIO': 2},
 'FPN': {'COARSEST_STRIDE': 32,
         'DIM': 256,
         'EXTRA_CONV_LEVELS': False,
         'FPN_ON': True,
         'MULTILEVEL_ROIS': True,
         'MULTILEVEL_RPN': True,
         'ROI_CANONICAL_LEVEL': 4,
         'ROI_CANONICAL_SCALE': 224,
         'ROI_MAX_LEVEL': 5,
         'ROI_MIN_LEVEL': 2,
         'RPN_ANCHOR_START_SIZE': 32,
         'RPN_ASPECT_RATIOS': (0.5, 1, 2),
         'RPN_COLLECT_SCALE': 1,
         'RPN_MAX_LEVEL': 6,
         'RPN_MIN_LEVEL': 2,
         'USE_GN': False,
         'ZERO_INIT_LATERAL': False},
 'GROUP_NORM': {'DIM_PER_GP': -1, 'EPSILON': 1e-05, 'NUM_GROUPS': 32},
 'KRCNN': {'CONV_HEAD_DIM': 256,
           'CONV_HEAD_KERNEL': 3,
           'CONV_INIT': 'GaussianFill',
           'DECONV_DIM': 256,
           'DECONV_KERNEL': 4,
           'DILATION': 1,
           'HEATMAP_SIZE': -1,
           'INFERENCE_MIN_SIZE': 0,
           'KEYPOINT_CONFIDENCE': 'bbox',
           'LOSS_WEIGHT': 1.0,
           'MIN_KEYPOINT_COUNT_FOR_VALID_MINIBATCH': 20,
           'NMS_OKS': False,
           'NORMALIZE_BY_VISIBLE_KEYPOINTS': True,
           'NUM_KEYPOINTS': -1,
           'NUM_STACKED_CONVS': 8,
           'ROI_KEYPOINTS_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'UP_SCALE': -1,
           'USE_DECONV': False,
           'USE_DECONV_OUTPUT': False},
 'MATLAB': 'matlab',
 'MODEL': {'BBOX_REG_WEIGHTS': (10.0, 10.0, 5.0, 5.0),
           'CLS_AGNOSTIC_BBOX_REG': False,
           'CONV_BODY': 'FPN.fpn_ResNet101_conv5_body',
           'FASTER_RCNN': True,
           'KEYPOINTS_ON': False,
           'LOAD_IMAGENET_PRETRAINED_WEIGHTS': True,
           'MASK_ON': False,
           'NUM_CLASSES': 21,
           'RPN_ONLY': False,
           'SHARE_RES5': False,
           'TYPE': 'generalized_rcnn',
           'UNSUPERVISED_POSE': False},
 'MRCNN': {'CLS_SPECIFIC_MASK': True,
           'CONV_INIT': 'GaussianFill',
           'DILATION': 2,
           'DIM_REDUCED': 256,
           'MEMORY_EFFICIENT_LOSS': True,
           'RESOLUTION': 14,
           'ROI_MASK_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'THRESH_BINARIZE': 0.5,
           'UPSAMPLE_RATIO': 1,
           'USE_FC_OUTPUT': False,
           'WEIGHT_LOSS_MASK': 1.0},
 'NUM_GPUS': 8,
 'OUTPUT_DIR': 'Outputs',
 'PIXEL_MEANS': array([[[102.9801, 115.9465, 122.7717]]]),
 'POOLING_MODE': 'crop',
 'POOLING_SIZE': 7,
 'PYTORCH_VERSION_LESS_THAN_040': False,
 'RESNETS': {'FREEZE_AT': 2,
             'IMAGENET_PRETRAINED_WEIGHTS': 'data/pretrained_model/resnet101_caffe.pth',
             'NUM_GROUPS': 1,
             'RES5_DILATION': 1,
             'SHORTCUT_FUNC': 'basic_bn_shortcut',
             'STEM_FUNC': 'basic_bn_stem',
             'STRIDE_1X1': True,
             'TRANS_FUNC': 'bottleneck_transformation',
             'USE_GN': False,
             'WIDTH_PER_GROUP': 64},
 'RETINANET': {'ANCHOR_SCALE': 4,
               'ASPECT_RATIOS': (0.5, 1.0, 2.0),
               'BBOX_REG_BETA': 0.11,
               'BBOX_REG_WEIGHT': 1.0,
               'CLASS_SPECIFIC_BBOX': False,
               'INFERENCE_TH': 0.05,
               'LOSS_ALPHA': 0.25,
               'LOSS_GAMMA': 2.0,
               'NEGATIVE_OVERLAP': 0.4,
               'NUM_CONVS': 4,
               'POSITIVE_OVERLAP': 0.5,
               'PRE_NMS_TOP_N': 1000,
               'PRIOR_PROB': 0.01,
               'RETINANET_ON': False,
               'SCALES_PER_OCTAVE': 3,
               'SHARE_CLS_BBOX_TOWER': False,
               'SOFTMAX': False},
 'RFCN': {'PS_GRID_SIZE': 3},
 'RNG_SEED': 3,
 'ROOT_DIR': '/home/ubuntu/Detectron.pytorch',
 'RPN': {'ASPECT_RATIOS': (0.5, 1, 2),
         'CLS_ACTIVATION': 'sigmoid',
         'OUT_DIM': 512,
         'OUT_DIM_AS_IN_DIM': True,
         'RPN_ON': True,
         'SIZES': (64, 128, 256, 512),
         'STRIDE': 16},
 'SOLVER': {'BASE_LR': 2e-05,
            'BIAS_DOUBLE_LR': True,
            'BIAS_WEIGHT_DECAY': False,
            'GAMMA': 0.1,
            'LOG_LR_CHANGE_THRESHOLD': 1.1,
            'LRS': [],
            'LR_POLICY': 'steps_with_decay',
            'MAX_ITER': 10000,
            'MOMENTUM': 0.9,
            'SCALE_MOMENTUM': True,
            'SCALE_MOMENTUM_THRESHOLD': 1.1,
            'STEPS': [0, 5000, 8000],
            'STEP_SIZE': 30000,
            'TYPE': 'SGD',
            'WARM_UP_FACTOR': 0.3333333333333333,
            'WARM_UP_ITERS': 500,
            'WARM_UP_METHOD': 'linear',
            'WEIGHT_DECAY': 0.0001,
            'WEIGHT_DECAY_GN': 0.0},
 'TEST': {'BBOX_AUG': {'AREA_TH_HI': 32400,
                       'AREA_TH_LO': 2500,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'COORD_HEUR': 'UNION',
                       'ENABLED': False,
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False,
                       'SCORE_HEUR': 'UNION'},
          'BBOX_REG': True,
          'BBOX_VOTE': {'ENABLED': False,
                        'SCORING_METHOD': 'ID',
                        'SCORING_METHOD_BETA': 1.0,
                        'VOTE_TH': 0.8},
          'COMPETITION_MODE': True,
          'DATASETS': ('voc_2007_test',),
          'DETECTIONS_PER_IM': 100,
          'FORCE_JSON_DATASET_EVAL': False,
          'KPS_AUG': {'AREA_TH': 32400,
                      'ASPECT_RATIOS': (),
                      'ASPECT_RATIO_H_FLIP': False,
                      'ENABLED': False,
                      'HEUR': 'HM_AVG',
                      'H_FLIP': False,
                      'MAX_SIZE': 4000,
                      'SCALES': (),
                      'SCALE_H_FLIP': False,
                      'SCALE_SIZE_DEP': False},
          'MASK_AUG': {'AREA_TH': 32400,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'ENABLED': False,
                       'HEUR': 'SOFT_AVG',
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False},
          'MAX_SIZE': 1000,
          'NMS': 0.5,
          'PRECOMPUTED_PROPOSALS': False,
          'PROPOSAL_FILES': (),
          'PROPOSAL_LIMIT': 2000,
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 1000,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALE': 600,
          'SCORE_THRESH': 0.05,
          'SOFT_NMS': {'ENABLED': False, 'METHOD': 'linear', 'SIGMA': 0.5},
          'WEAK_SUPERVISE': False},
 'TRAIN': {'ASPECT_CROPPING': False,
           'ASPECT_GROUPING': True,
           'ASPECT_HI': 2,
           'ASPECT_LO': 0.5,
           'BATCH_SIZE_PER_IM': 512,
           'BBOX_INSIDE_WEIGHTS': (1.0, 1.0, 1.0, 1.0),
           'BBOX_NORMALIZE_MEANS': (0.0, 0.0, 0.0, 0.0),
           'BBOX_NORMALIZE_STDS': (0.1, 0.1, 0.2, 0.2),
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'COPY_CLS_TO_DET': False,
           'CROWD_FILTER_THRESH': 0.7,
           'DATASETS': (),
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'FREEZE_BOX_HEAD': True,
           'FREEZE_CONV_BODY': False,
           'FREEZE_RPN': False,
           'GT_MIN_AREA': -1,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_FILES': (),
           'RPN_BATCH_SIZE_PER_IM': 256,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 2000,
           'RPN_STRADDLE_THRESH': 0,
           'SCALES': (600,),
           'SNAPSHOT_ITERS': 2000,
           'SPATIAL_REG': False,
           'USE_FLIPPED': True,
           'WEAK_SUPERVISE': True,
           'WEAK_SUPERVISE_WITH_PRETRAIN': True},
 'VIS': False,
 'VIS_TH': 0.9}
loading annotations into memory...
Done (t=0.08s)
creating index...
index created!
INFO test_engine.py: 324: training mode? : False
INFO test_engine.py: 331: loading checkpoint Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step2499.pth
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1/1238 0.900s + 0.002s (eta: 0:18:35)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 11/1238 0.587s + 0.003s (eta: 0:12:03)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 21/1238 0.563s + 0.002s (eta: 0:11:28)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 31/1238 0.545s + 0.002s (eta: 0:10:59)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 41/1238 0.540s + 0.002s (eta: 0:10:48)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 51/1238 0.531s + 0.002s (eta: 0:10:32)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 61/1238 0.527s + 0.002s (eta: 0:10:22)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 71/1238 0.526s + 0.002s (eta: 0:10:16)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 81/1238 0.521s + 0.002s (eta: 0:10:04)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 91/1238 0.522s + 0.002s (eta: 0:10:00)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 101/1238 0.521s + 0.002s (eta: 0:09:53)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 111/1238 0.518s + 0.002s (eta: 0:09:45)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 121/1238 0.517s + 0.002s (eta: 0:09:39)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 131/1238 0.517s + 0.002s (eta: 0:09:34)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 141/1238 0.516s + 0.002s (eta: 0:09:27)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 151/1238 0.516s + 0.002s (eta: 0:09:22)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 161/1238 0.516s + 0.002s (eta: 0:09:17)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 171/1238 0.515s + 0.002s (eta: 0:09:11)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 181/1238 0.516s + 0.002s (eta: 0:09:07)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 191/1238 0.515s + 0.002s (eta: 0:09:00)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 201/1238 0.512s + 0.002s (eta: 0:08:52)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 211/1238 0.513s + 0.002s (eta: 0:08:48)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 221/1238 0.513s + 0.002s (eta: 0:08:43)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 231/1238 0.512s + 0.002s (eta: 0:08:37)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 241/1238 0.514s + 0.002s (eta: 0:08:34)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 251/1238 0.514s + 0.002s (eta: 0:08:28)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 261/1238 0.512s + 0.002s (eta: 0:08:21)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 271/1238 0.510s + 0.002s (eta: 0:08:14)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 281/1238 0.510s + 0.002s (eta: 0:08:09)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 291/1238 0.511s + 0.002s (eta: 0:08:06)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 301/1238 0.511s + 0.002s (eta: 0:08:00)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 311/1238 0.511s + 0.002s (eta: 0:07:55)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 321/1238 0.512s + 0.002s (eta: 0:07:51)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 331/1238 0.510s + 0.002s (eta: 0:07:44)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 341/1238 0.512s + 0.002s (eta: 0:07:40)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 351/1238 0.510s + 0.002s (eta: 0:07:34)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 361/1238 0.511s + 0.002s (eta: 0:07:29)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 371/1238 0.512s + 0.002s (eta: 0:07:25)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 381/1238 0.512s + 0.002s (eta: 0:07:20)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 391/1238 0.510s + 0.002s (eta: 0:07:13)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 401/1238 0.510s + 0.002s (eta: 0:07:08)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 411/1238 0.510s + 0.002s (eta: 0:07:03)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 421/1238 0.509s + 0.002s (eta: 0:06:57)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 431/1238 0.507s + 0.002s (eta: 0:06:50)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 441/1238 0.504s + 0.002s (eta: 0:06:43)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 451/1238 0.502s + 0.002s (eta: 0:06:36)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 461/1238 0.500s + 0.002s (eta: 0:06:29)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 471/1238 0.497s + 0.002s (eta: 0:06:22)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 481/1238 0.495s + 0.002s (eta: 0:06:16)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 491/1238 0.495s + 0.002s (eta: 0:06:11)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 501/1238 0.496s + 0.002s (eta: 0:06:06)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 511/1238 0.496s + 0.002s (eta: 0:06:02)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 521/1238 0.497s + 0.002s (eta: 0:05:57)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 531/1238 0.497s + 0.002s (eta: 0:05:52)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 541/1238 0.497s + 0.002s (eta: 0:05:47)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 551/1238 0.497s + 0.002s (eta: 0:05:42)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 561/1238 0.497s + 0.002s (eta: 0:05:37)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 571/1238 0.498s + 0.002s (eta: 0:05:33)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 581/1238 0.498s + 0.002s (eta: 0:05:28)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 591/1238 0.498s + 0.002s (eta: 0:05:23)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 601/1238 0.498s + 0.002s (eta: 0:05:18)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 611/1238 0.497s + 0.002s (eta: 0:05:13)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 621/1238 0.498s + 0.002s (eta: 0:05:08)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 631/1238 0.498s + 0.002s (eta: 0:05:03)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 641/1238 0.498s + 0.002s (eta: 0:04:58)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 651/1238 0.497s + 0.002s (eta: 0:04:53)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 661/1238 0.497s + 0.002s (eta: 0:04:47)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 671/1238 0.497s + 0.002s (eta: 0:04:42)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 681/1238 0.497s + 0.002s (eta: 0:04:37)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 691/1238 0.497s + 0.002s (eta: 0:04:32)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 701/1238 0.497s + 0.002s (eta: 0:04:27)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 711/1238 0.497s + 0.002s (eta: 0:04:22)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 721/1238 0.497s + 0.002s (eta: 0:04:17)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 731/1238 0.497s + 0.002s (eta: 0:04:12)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 741/1238 0.497s + 0.002s (eta: 0:04:08)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 751/1238 0.498s + 0.002s (eta: 0:04:03)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 761/1238 0.498s + 0.002s (eta: 0:03:58)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 771/1238 0.497s + 0.002s (eta: 0:03:53)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 781/1238 0.498s + 0.002s (eta: 0:03:48)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 791/1238 0.498s + 0.002s (eta: 0:03:43)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 801/1238 0.497s + 0.002s (eta: 0:03:38)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 811/1238 0.497s + 0.002s (eta: 0:03:33)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 821/1238 0.497s + 0.002s (eta: 0:03:28)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 831/1238 0.497s + 0.002s (eta: 0:03:23)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 841/1238 0.497s + 0.002s (eta: 0:03:18)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 851/1238 0.497s + 0.002s (eta: 0:03:13)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 861/1238 0.497s + 0.002s (eta: 0:03:08)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 871/1238 0.498s + 0.002s (eta: 0:03:03)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 881/1238 0.497s + 0.002s (eta: 0:02:58)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 891/1238 0.497s + 0.002s (eta: 0:02:53)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 901/1238 0.497s + 0.002s (eta: 0:02:48)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 911/1238 0.497s + 0.002s (eta: 0:02:43)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 921/1238 0.497s + 0.002s (eta: 0:02:38)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 931/1238 0.497s + 0.002s (eta: 0:02:33)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 941/1238 0.497s + 0.002s (eta: 0:02:28)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 951/1238 0.497s + 0.002s (eta: 0:02:23)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 961/1238 0.497s + 0.002s (eta: 0:02:18)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 971/1238 0.497s + 0.002s (eta: 0:02:13)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 981/1238 0.497s + 0.002s (eta: 0:02:08)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 991/1238 0.497s + 0.002s (eta: 0:02:03)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1001/1238 0.497s + 0.002s (eta: 0:01:58)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1011/1238 0.496s + 0.002s (eta: 0:01:53)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1021/1238 0.497s + 0.002s (eta: 0:01:48)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1031/1238 0.496s + 0.002s (eta: 0:01:43)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1041/1238 0.497s + 0.002s (eta: 0:01:38)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1051/1238 0.496s + 0.002s (eta: 0:01:33)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1061/1238 0.497s + 0.002s (eta: 0:01:28)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1071/1238 0.497s + 0.002s (eta: 0:01:23)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1081/1238 0.497s + 0.002s (eta: 0:01:18)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1091/1238 0.497s + 0.002s (eta: 0:01:13)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1101/1238 0.497s + 0.002s (eta: 0:01:08)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1111/1238 0.496s + 0.002s (eta: 0:01:03)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1121/1238 0.496s + 0.002s (eta: 0:00:58)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1131/1238 0.496s + 0.002s (eta: 0:00:53)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1141/1238 0.496s + 0.002s (eta: 0:00:48)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1151/1238 0.497s + 0.002s (eta: 0:00:43)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1161/1238 0.497s + 0.002s (eta: 0:00:38)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1171/1238 0.496s + 0.002s (eta: 0:00:33)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1181/1238 0.496s + 0.002s (eta: 0:00:28)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1191/1238 0.496s + 0.002s (eta: 0:00:23)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1201/1238 0.496s + 0.002s (eta: 0:00:18)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1211/1238 0.496s + 0.002s (eta: 0:00:13)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1221/1238 0.496s + 0.002s (eta: 0:00:08)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1231/1238 0.495s + 0.002s (eta: 0:00:03)
INFO test_engine.py: 314: Wrote detections to: /home/ubuntu/Detectron.pytorch/Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_0_1238.pkl
/home/ubuntu/anaconda3/envs/pytorch41/lib/python3.7/site-packages/torch/nn/functional.py:1890: UserWarning: nn.functional.upsample is deprecated. Use nn.functional.interpolate instead.
  warnings.warn("nn.functional.upsample is deprecated. Use nn.functional.interpolate instead.")
INFO subprocess.py: 129: # ---------------------------------------------------------------------------- #
INFO subprocess.py: 131: stdout of subprocess 1 with range [1239, 2476]
INFO subprocess.py: 133: # ---------------------------------------------------------------------------- #
INFO test_net.py:  72: Called with args:
INFO test_net.py:  73: Namespace(cfg_file='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_config.yaml', dataset=None, load_ckpt='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step1999.pth', load_detectron=None, multi_gpu_testing=False, num_classes=None, output_dir='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test', range=[1238, 2476], set_cfgs=['TEST.DATASETS', '("voc_2007_test",)'], vis=False)
INFO test_net.py: 130: Testing with config:
INFO test_net.py: 131: {'BBOX_XFORM_CLIP': 4.135166556742356,
 'CROP_RESIZE_WITH_MAX_POOL': True,
 'CUDA': False,
 'DATA_DIR': '/home/ubuntu/Detectron.pytorch/data',
 'DATA_LOADER': {'NUM_THREADS': 4},
 'DEBUG': False,
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXPECTED_RESULTS': [],
 'EXPECTED_RESULTS_ATOL': 0.005,
 'EXPECTED_RESULTS_EMAIL': '',
 'EXPECTED_RESULTS_RTOL': 0.1,
 'FAST_RCNN': {'BOX_OUT_STREAMS': 1,
               'CONV_HEAD_DIM': 256,
               'MLP_HEAD_DIM': 1024,
               'NUM_STACKED_CONVS': 4,
               'ROI_BOX_HEAD': 'fast_rcnn_heads.roi_2mlp_head',
               'ROI_XFORM_METHOD': 'RoIAlign',
               'ROI_XFORM_RESOLUTION': 7,
               'ROI_XFORM_SAMPLING_RATIO': 2},
 'FPN': {'COARSEST_STRIDE': 32,
         'DIM': 256,
         'EXTRA_CONV_LEVELS': False,
         'FPN_ON': True,
         'MULTILEVEL_ROIS': True,
         'MULTILEVEL_RPN': True,
         'ROI_CANONICAL_LEVEL': 4,
         'ROI_CANONICAL_SCALE': 224,
         'ROI_MAX_LEVEL': 5,
         'ROI_MIN_LEVEL': 2,
         'RPN_ANCHOR_START_SIZE': 32,
         'RPN_ASPECT_RATIOS': (0.5, 1, 2),
         'RPN_COLLECT_SCALE': 1,
         'RPN_MAX_LEVEL': 6,
         'RPN_MIN_LEVEL': 2,
         'USE_GN': False,
         'ZERO_INIT_LATERAL': False},
 'GROUP_NORM': {'DIM_PER_GP': -1, 'EPSILON': 1e-05, 'NUM_GROUPS': 32},
 'KRCNN': {'CONV_HEAD_DIM': 256,
           'CONV_HEAD_KERNEL': 3,
           'CONV_INIT': 'GaussianFill',
           'DECONV_DIM': 256,
           'DECONV_KERNEL': 4,
           'DILATION': 1,
           'HEATMAP_SIZE': -1,
           'INFERENCE_MIN_SIZE': 0,
           'KEYPOINT_CONFIDENCE': 'bbox',
           'LOSS_WEIGHT': 1.0,
           'MIN_KEYPOINT_COUNT_FOR_VALID_MINIBATCH': 20,
           'NMS_OKS': False,
           'NORMALIZE_BY_VISIBLE_KEYPOINTS': True,
           'NUM_KEYPOINTS': -1,
           'NUM_STACKED_CONVS': 8,
           'ROI_KEYPOINTS_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'UP_SCALE': -1,
           'USE_DECONV': False,
           'USE_DECONV_OUTPUT': False},
 'MATLAB': 'matlab',
 'MODEL': {'BBOX_REG_WEIGHTS': (10.0, 10.0, 5.0, 5.0),
           'CLS_AGNOSTIC_BBOX_REG': False,
           'CONV_BODY': 'FPN.fpn_ResNet101_conv5_body',
           'FASTER_RCNN': True,
           'KEYPOINTS_ON': False,
           'LOAD_IMAGENET_PRETRAINED_WEIGHTS': True,
           'MASK_ON': False,
           'NUM_CLASSES': 21,
           'RPN_ONLY': False,
           'SHARE_RES5': False,
           'TYPE': 'generalized_rcnn',
           'UNSUPERVISED_POSE': False},
 'MRCNN': {'CLS_SPECIFIC_MASK': True,
           'CONV_INIT': 'GaussianFill',
           'DILATION': 2,
           'DIM_REDUCED': 256,
           'MEMORY_EFFICIENT_LOSS': True,
           'RESOLUTION': 14,
           'ROI_MASK_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'THRESH_BINARIZE': 0.5,
           'UPSAMPLE_RATIO': 1,
           'USE_FC_OUTPUT': False,
           'WEIGHT_LOSS_MASK': 1.0},
 'NUM_GPUS': 8,
 'OUTPUT_DIR': 'Outputs',
 'PIXEL_MEANS': array([[[102.9801, 115.9465, 122.7717]]]),
 'POOLING_MODE': 'crop',
 'POOLING_SIZE': 7,
 'PYTORCH_VERSION_LESS_THAN_040': False,
 'RESNETS': {'FREEZE_AT': 2,
             'IMAGENET_PRETRAINED_WEIGHTS': 'data/pretrained_model/resnet101_caffe.pth',
             'NUM_GROUPS': 1,
             'RES5_DILATION': 1,
             'SHORTCUT_FUNC': 'basic_bn_shortcut',
             'STEM_FUNC': 'basic_bn_stem',
             'STRIDE_1X1': True,
             'TRANS_FUNC': 'bottleneck_transformation',
             'USE_GN': False,
             'WIDTH_PER_GROUP': 64},
 'RETINANET': {'ANCHOR_SCALE': 4,
               'ASPECT_RATIOS': (0.5, 1.0, 2.0),
               'BBOX_REG_BETA': 0.11,
               'BBOX_REG_WEIGHT': 1.0,
               'CLASS_SPECIFIC_BBOX': False,
               'INFERENCE_TH': 0.05,
               'LOSS_ALPHA': 0.25,
               'LOSS_GAMMA': 2.0,
               'NEGATIVE_OVERLAP': 0.4,
               'NUM_CONVS': 4,
               'POSITIVE_OVERLAP': 0.5,
               'PRE_NMS_TOP_N': 1000,
               'PRIOR_PROB': 0.01,
               'RETINANET_ON': False,
               'SCALES_PER_OCTAVE': 3,
               'SHARE_CLS_BBOX_TOWER': False,
               'SOFTMAX': False},
 'RFCN': {'PS_GRID_SIZE': 3},
 'RNG_SEED': 3,
 'ROOT_DIR': '/home/ubuntu/Detectron.pytorch',
 'RPN': {'ASPECT_RATIOS': (0.5, 1, 2),
         'CLS_ACTIVATION': 'sigmoid',
         'OUT_DIM': 512,
         'OUT_DIM_AS_IN_DIM': True,
         'RPN_ON': True,
         'SIZES': (64, 128, 256, 512),
         'STRIDE': 16},
 'SOLVER': {'BASE_LR': 2e-05,
            'BIAS_DOUBLE_LR': True,
            'BIAS_WEIGHT_DECAY': False,
            'GAMMA': 0.1,
            'LOG_LR_CHANGE_THRESHOLD': 1.1,
            'LRS': [],
            'LR_POLICY': 'steps_with_decay',
            'MAX_ITER': 10000,
            'MOMENTUM': 0.9,
            'SCALE_MOMENTUM': True,
            'SCALE_MOMENTUM_THRESHOLD': 1.1,
            'STEPS': [0, 5000, 8000],
            'STEP_SIZE': 30000,
            'TYPE': 'SGD',
            'WARM_UP_FACTOR': 0.3333333333333333,
            'WARM_UP_ITERS': 500,
            'WARM_UP_METHOD': 'linear',
            'WEIGHT_DECAY': 0.0001,
            'WEIGHT_DECAY_GN': 0.0},
 'TEST': {'BBOX_AUG': {'AREA_TH_HI': 32400,
                       'AREA_TH_LO': 2500,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'COORD_HEUR': 'UNION',
                       'ENABLED': False,
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False,
                       'SCORE_HEUR': 'UNION'},
          'BBOX_REG': True,
          'BBOX_VOTE': {'ENABLED': False,
                        'SCORING_METHOD': 'ID',
                        'SCORING_METHOD_BETA': 1.0,
                        'VOTE_TH': 0.8},
          'COMPETITION_MODE': True,
          'DATASETS': ('voc_2007_test',),
          'DETECTIONS_PER_IM': 100,
          'FORCE_JSON_DATASET_EVAL': False,
          'KPS_AUG': {'AREA_TH': 32400,
                      'ASPECT_RATIOS': (),
                      'ASPECT_RATIO_H_FLIP': False,
                      'ENABLED': False,
                      'HEUR': 'HM_AVG',
                      'H_FLIP': False,
                      'MAX_SIZE': 4000,
                      'SCALES': (),
                      'SCALE_H_FLIP': False,
                      'SCALE_SIZE_DEP': False},
          'MASK_AUG': {'AREA_TH': 32400,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'ENABLED': False,
                       'HEUR': 'SOFT_AVG',
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False},
          'MAX_SIZE': 1000,
          'NMS': 0.5,
          'PRECOMPUTED_PROPOSALS': False,
          'PROPOSAL_FILES': (),
          'PROPOSAL_LIMIT': 2000,
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 1000,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALE': 600,
          'SCORE_THRESH': 0.05,
          'SOFT_NMS': {'ENABLED': False, 'METHOD': 'linear', 'SIGMA': 0.5},
          'WEAK_SUPERVISE': False},
 'TRAIN': {'ASPECT_CROPPING': False,
           'ASPECT_GROUPING': True,
           'ASPECT_HI': 2,
           'ASPECT_LO': 0.5,
           'BATCH_SIZE_PER_IM': 512,
           'BBOX_INSIDE_WEIGHTS': (1.0, 1.0, 1.0, 1.0),
           'BBOX_NORMALIZE_MEANS': (0.0, 0.0, 0.0, 0.0),
           'BBOX_NORMALIZE_STDS': (0.1, 0.1, 0.2, 0.2),
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'COPY_CLS_TO_DET': False,
           'CROWD_FILTER_THRESH': 0.7,
           'DATASETS': (),
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'FREEZE_BOX_HEAD': True,
           'FREEZE_CONV_BODY': False,
           'FREEZE_RPN': False,
           'GT_MIN_AREA': -1,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_FILES': (),
           'RPN_BATCH_SIZE_PER_IM': 256,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 2000,
           'RPN_STRADDLE_THRESH': 0,
           'SCALES': (600,),
           'SNAPSHOT_ITERS': 2000,
           'SPATIAL_REG': False,
           'USE_FLIPPED': True,
           'WEAK_SUPERVISE': True,
           'WEAK_SUPERVISE_WITH_PRETRAIN': True},
 'VIS': False,
 'VIS_TH': 0.9}
loading annotations into memory...
Done (t=0.24s)
creating index...
index created!
INFO test_engine.py: 324: training mode? : False
INFO test_engine.py: 331: loading checkpoint Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step1999.pth
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1239/2476 0.687s + 0.002s (eta: 0:14:11)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1249/2476 0.499s + 0.002s (eta: 0:10:14)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1259/2476 0.505s + 0.002s (eta: 0:10:16)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1269/2476 0.512s + 0.001s (eta: 0:10:19)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1279/2476 0.505s + 0.001s (eta: 0:10:06)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1289/2476 0.511s + 0.002s (eta: 0:10:08)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1299/2476 0.501s + 0.002s (eta: 0:09:51)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1309/2476 0.501s + 0.002s (eta: 0:09:46)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1319/2476 0.500s + 0.002s (eta: 0:09:40)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1329/2476 0.502s + 0.001s (eta: 0:09:37)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1339/2476 0.502s + 0.002s (eta: 0:09:32)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1349/2476 0.506s + 0.002s (eta: 0:09:31)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1359/2476 0.506s + 0.002s (eta: 0:09:27)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1369/2476 0.504s + 0.002s (eta: 0:09:19)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1379/2476 0.505s + 0.002s (eta: 0:09:15)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1389/2476 0.504s + 0.002s (eta: 0:09:09)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1399/2476 0.503s + 0.002s (eta: 0:09:02)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1409/2476 0.502s + 0.002s (eta: 0:08:57)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1419/2476 0.499s + 0.002s (eta: 0:08:49)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1429/2476 0.498s + 0.002s (eta: 0:08:42)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1439/2476 0.499s + 0.002s (eta: 0:08:38)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1449/2476 0.499s + 0.002s (eta: 0:08:34)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1459/2476 0.499s + 0.002s (eta: 0:08:29)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1469/2476 0.499s + 0.002s (eta: 0:08:23)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1479/2476 0.499s + 0.002s (eta: 0:08:18)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1489/2476 0.498s + 0.002s (eta: 0:08:13)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1499/2476 0.499s + 0.002s (eta: 0:08:09)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1509/2476 0.500s + 0.002s (eta: 0:08:04)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1519/2476 0.501s + 0.002s (eta: 0:08:01)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1529/2476 0.502s + 0.002s (eta: 0:07:56)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1539/2476 0.502s + 0.002s (eta: 0:07:51)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1549/2476 0.503s + 0.002s (eta: 0:07:47)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1559/2476 0.503s + 0.002s (eta: 0:07:42)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1569/2476 0.504s + 0.002s (eta: 0:07:39)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1579/2476 0.505s + 0.002s (eta: 0:07:34)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1589/2476 0.505s + 0.002s (eta: 0:07:29)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1599/2476 0.507s + 0.002s (eta: 0:07:26)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1609/2476 0.507s + 0.002s (eta: 0:07:20)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1619/2476 0.505s + 0.002s (eta: 0:07:14)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1629/2476 0.505s + 0.002s (eta: 0:07:09)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1639/2476 0.505s + 0.002s (eta: 0:07:04)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1649/2476 0.504s + 0.002s (eta: 0:06:58)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1659/2476 0.504s + 0.002s (eta: 0:06:53)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1669/2476 0.504s + 0.002s (eta: 0:06:48)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1679/2476 0.504s + 0.002s (eta: 0:06:43)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1689/2476 0.503s + 0.002s (eta: 0:06:37)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1699/2476 0.502s + 0.002s (eta: 0:06:31)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1709/2476 0.502s + 0.002s (eta: 0:06:26)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1719/2476 0.501s + 0.002s (eta: 0:06:20)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1729/2476 0.500s + 0.002s (eta: 0:06:15)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1739/2476 0.500s + 0.002s (eta: 0:06:09)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1749/2476 0.500s + 0.002s (eta: 0:06:05)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1759/2476 0.501s + 0.002s (eta: 0:06:00)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1769/2476 0.501s + 0.002s (eta: 0:05:55)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1779/2476 0.502s + 0.002s (eta: 0:05:51)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1789/2476 0.502s + 0.002s (eta: 0:05:45)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1799/2476 0.501s + 0.002s (eta: 0:05:40)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1809/2476 0.501s + 0.002s (eta: 0:05:35)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1819/2476 0.500s + 0.002s (eta: 0:05:30)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1829/2476 0.500s + 0.002s (eta: 0:05:24)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1839/2476 0.499s + 0.002s (eta: 0:05:19)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1849/2476 0.499s + 0.002s (eta: 0:05:14)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1859/2476 0.499s + 0.002s (eta: 0:05:09)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1869/2476 0.499s + 0.002s (eta: 0:05:03)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1879/2476 0.499s + 0.002s (eta: 0:04:58)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1889/2476 0.499s + 0.002s (eta: 0:04:54)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1899/2476 0.498s + 0.002s (eta: 0:04:48)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1909/2476 0.498s + 0.002s (eta: 0:04:43)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1919/2476 0.498s + 0.002s (eta: 0:04:38)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1929/2476 0.498s + 0.002s (eta: 0:04:33)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1939/2476 0.498s + 0.002s (eta: 0:04:28)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1949/2476 0.497s + 0.002s (eta: 0:04:23)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1959/2476 0.498s + 0.002s (eta: 0:04:18)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1969/2476 0.498s + 0.002s (eta: 0:04:13)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1979/2476 0.499s + 0.002s (eta: 0:04:08)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1989/2476 0.492s + 0.002s (eta: 0:04:00)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1999/2476 0.493s + 0.002s (eta: 0:03:55)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2009/2476 0.493s + 0.002s (eta: 0:03:50)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2019/2476 0.493s + 0.002s (eta: 0:03:46)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2029/2476 0.492s + 0.002s (eta: 0:03:40)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2039/2476 0.493s + 0.002s (eta: 0:03:36)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2049/2476 0.493s + 0.002s (eta: 0:03:31)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2059/2476 0.494s + 0.002s (eta: 0:03:26)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2069/2476 0.494s + 0.002s (eta: 0:03:21)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2079/2476 0.494s + 0.002s (eta: 0:03:17)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2089/2476 0.494s + 0.002s (eta: 0:03:12)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2099/2476 0.495s + 0.002s (eta: 0:03:07)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2109/2476 0.495s + 0.002s (eta: 0:03:02)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2119/2476 0.495s + 0.002s (eta: 0:02:57)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2129/2476 0.495s + 0.002s (eta: 0:02:52)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2139/2476 0.495s + 0.002s (eta: 0:02:47)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2149/2476 0.495s + 0.002s (eta: 0:02:42)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2159/2476 0.496s + 0.002s (eta: 0:02:37)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2169/2476 0.495s + 0.002s (eta: 0:02:32)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2179/2476 0.496s + 0.002s (eta: 0:02:27)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2189/2476 0.496s + 0.002s (eta: 0:02:22)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2199/2476 0.496s + 0.002s (eta: 0:02:17)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2209/2476 0.496s + 0.002s (eta: 0:02:12)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2219/2476 0.496s + 0.002s (eta: 0:02:07)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2229/2476 0.495s + 0.002s (eta: 0:02:02)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2239/2476 0.495s + 0.002s (eta: 0:01:57)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2249/2476 0.495s + 0.002s (eta: 0:01:52)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2259/2476 0.495s + 0.002s (eta: 0:01:47)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2269/2476 0.495s + 0.002s (eta: 0:01:42)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2279/2476 0.495s + 0.002s (eta: 0:01:37)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2289/2476 0.495s + 0.002s (eta: 0:01:32)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2299/2476 0.495s + 0.002s (eta: 0:01:28)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2309/2476 0.496s + 0.002s (eta: 0:01:23)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2319/2476 0.496s + 0.002s (eta: 0:01:18)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2329/2476 0.496s + 0.002s (eta: 0:01:13)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2339/2476 0.496s + 0.002s (eta: 0:01:08)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2349/2476 0.496s + 0.002s (eta: 0:01:03)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2359/2476 0.496s + 0.002s (eta: 0:00:58)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2369/2476 0.496s + 0.002s (eta: 0:00:53)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2379/2476 0.496s + 0.002s (eta: 0:00:48)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2389/2476 0.495s + 0.002s (eta: 0:00:43)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2399/2476 0.495s + 0.002s (eta: 0:00:38)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2409/2476 0.495s + 0.002s (eta: 0:00:33)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2419/2476 0.495s + 0.002s (eta: 0:00:28)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2429/2476 0.495s + 0.002s (eta: 0:00:23)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2439/2476 0.495s + 0.002s (eta: 0:00:18)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2449/2476 0.495s + 0.002s (eta: 0:00:13)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2459/2476 0.495s + 0.002s (eta: 0:00:08)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2469/2476 0.495s + 0.002s (eta: 0:00:03)
INFO test_engine.py: 314: Wrote detections to: /home/ubuntu/Detectron.pytorch/Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_1238_2476.pkl
/home/ubuntu/anaconda3/envs/pytorch41/lib/python3.7/site-packages/torch/nn/functional.py:1890: UserWarning: nn.functional.upsample is deprecated. Use nn.functional.interpolate instead.
  warnings.warn("nn.functional.upsample is deprecated. Use nn.functional.interpolate instead.")

INFO subprocess.py: 129: # ---------------------------------------------------------------------------- #
INFO subprocess.py: 131: stdout of subprocess 2 with range [2477, 3714]
INFO subprocess.py: 133: # ---------------------------------------------------------------------------- #
INFO test_net.py:  72: Called with args:
INFO test_net.py:  73: Namespace(cfg_file='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_config.yaml', dataset=None, load_ckpt='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step1999.pth', load_detectron=None, multi_gpu_testing=False, num_classes=None, output_dir='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test', range=[2476, 3714], set_cfgs=['TEST.DATASETS', '("voc_2007_test",)'], vis=False)
INFO test_net.py: 130: Testing with config:
INFO test_net.py: 131: {'BBOX_XFORM_CLIP': 4.135166556742356,
 'CROP_RESIZE_WITH_MAX_POOL': True,
 'CUDA': False,
 'DATA_DIR': '/home/ubuntu/Detectron.pytorch/data',
 'DATA_LOADER': {'NUM_THREADS': 4},
 'DEBUG': False,
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXPECTED_RESULTS': [],
 'EXPECTED_RESULTS_ATOL': 0.005,
 'EXPECTED_RESULTS_EMAIL': '',
 'EXPECTED_RESULTS_RTOL': 0.1,
 'FAST_RCNN': {'BOX_OUT_STREAMS': 1,
               'CONV_HEAD_DIM': 256,
               'MLP_HEAD_DIM': 1024,
               'NUM_STACKED_CONVS': 4,
               'ROI_BOX_HEAD': 'fast_rcnn_heads.roi_2mlp_head',
               'ROI_XFORM_METHOD': 'RoIAlign',
               'ROI_XFORM_RESOLUTION': 7,
               'ROI_XFORM_SAMPLING_RATIO': 2},
 'FPN': {'COARSEST_STRIDE': 32,
         'DIM': 256,
         'EXTRA_CONV_LEVELS': False,
         'FPN_ON': True,
         'MULTILEVEL_ROIS': True,
         'MULTILEVEL_RPN': True,
         'ROI_CANONICAL_LEVEL': 4,
         'ROI_CANONICAL_SCALE': 224,
         'ROI_MAX_LEVEL': 5,
         'ROI_MIN_LEVEL': 2,
         'RPN_ANCHOR_START_SIZE': 32,
         'RPN_ASPECT_RATIOS': (0.5, 1, 2),
         'RPN_COLLECT_SCALE': 1,
         'RPN_MAX_LEVEL': 6,
         'RPN_MIN_LEVEL': 2,
         'USE_GN': False,
         'ZERO_INIT_LATERAL': False},
 'GROUP_NORM': {'DIM_PER_GP': -1, 'EPSILON': 1e-05, 'NUM_GROUPS': 32},
 'KRCNN': {'CONV_HEAD_DIM': 256,
           'CONV_HEAD_KERNEL': 3,
           'CONV_INIT': 'GaussianFill',
           'DECONV_DIM': 256,
           'DECONV_KERNEL': 4,
           'DILATION': 1,
           'HEATMAP_SIZE': -1,
           'INFERENCE_MIN_SIZE': 0,
           'KEYPOINT_CONFIDENCE': 'bbox',
           'LOSS_WEIGHT': 1.0,
           'MIN_KEYPOINT_COUNT_FOR_VALID_MINIBATCH': 20,
           'NMS_OKS': False,
           'NORMALIZE_BY_VISIBLE_KEYPOINTS': True,
           'NUM_KEYPOINTS': -1,
           'NUM_STACKED_CONVS': 8,
           'ROI_KEYPOINTS_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'UP_SCALE': -1,
           'USE_DECONV': False,
           'USE_DECONV_OUTPUT': False},
 'MATLAB': 'matlab',
 'MODEL': {'BBOX_REG_WEIGHTS': (10.0, 10.0, 5.0, 5.0),
           'CLS_AGNOSTIC_BBOX_REG': False,
           'CONV_BODY': 'FPN.fpn_ResNet101_conv5_body',
           'FASTER_RCNN': True,
           'KEYPOINTS_ON': False,
           'LOAD_IMAGENET_PRETRAINED_WEIGHTS': True,
           'MASK_ON': False,
           'NUM_CLASSES': 21,
           'RPN_ONLY': False,
           'SHARE_RES5': False,
           'TYPE': 'generalized_rcnn',
           'UNSUPERVISED_POSE': False},
 'MRCNN': {'CLS_SPECIFIC_MASK': True,
           'CONV_INIT': 'GaussianFill',
           'DILATION': 2,
           'DIM_REDUCED': 256,
           'MEMORY_EFFICIENT_LOSS': True,
           'RESOLUTION': 14,
           'ROI_MASK_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'THRESH_BINARIZE': 0.5,
           'UPSAMPLE_RATIO': 1,
           'USE_FC_OUTPUT': False,
           'WEIGHT_LOSS_MASK': 1.0},
 'NUM_GPUS': 8,
 'OUTPUT_DIR': 'Outputs',
 'PIXEL_MEANS': array([[[102.9801, 115.9465, 122.7717]]]),
 'POOLING_MODE': 'crop',
 'POOLING_SIZE': 7,
 'PYTORCH_VERSION_LESS_THAN_040': False,
 'RESNETS': {'FREEZE_AT': 2,
             'IMAGENET_PRETRAINED_WEIGHTS': 'data/pretrained_model/resnet101_caffe.pth',
             'NUM_GROUPS': 1,
             'RES5_DILATION': 1,
             'SHORTCUT_FUNC': 'basic_bn_shortcut',
             'STEM_FUNC': 'basic_bn_stem',
             'STRIDE_1X1': True,
             'TRANS_FUNC': 'bottleneck_transformation',
             'USE_GN': False,
             'WIDTH_PER_GROUP': 64},
 'RETINANET': {'ANCHOR_SCALE': 4,
               'ASPECT_RATIOS': (0.5, 1.0, 2.0),
               'BBOX_REG_BETA': 0.11,
               'BBOX_REG_WEIGHT': 1.0,
               'CLASS_SPECIFIC_BBOX': False,
               'INFERENCE_TH': 0.05,
               'LOSS_ALPHA': 0.25,
               'LOSS_GAMMA': 2.0,
               'NEGATIVE_OVERLAP': 0.4,
               'NUM_CONVS': 4,
               'POSITIVE_OVERLAP': 0.5,
               'PRE_NMS_TOP_N': 1000,
               'PRIOR_PROB': 0.01,
               'RETINANET_ON': False,
               'SCALES_PER_OCTAVE': 3,
               'SHARE_CLS_BBOX_TOWER': False,
               'SOFTMAX': False},
 'RFCN': {'PS_GRID_SIZE': 3},
 'RNG_SEED': 3,
 'ROOT_DIR': '/home/ubuntu/Detectron.pytorch',
 'RPN': {'ASPECT_RATIOS': (0.5, 1, 2),
         'CLS_ACTIVATION': 'sigmoid',
         'OUT_DIM': 512,
         'OUT_DIM_AS_IN_DIM': True,
         'RPN_ON': True,
         'SIZES': (64, 128, 256, 512),
         'STRIDE': 16},
 'SOLVER': {'BASE_LR': 2e-05,
            'BIAS_DOUBLE_LR': True,
            'BIAS_WEIGHT_DECAY': False,
            'GAMMA': 0.1,
            'LOG_LR_CHANGE_THRESHOLD': 1.1,
            'LRS': [],
            'LR_POLICY': 'steps_with_decay',
            'MAX_ITER': 10000,
            'MOMENTUM': 0.9,
            'SCALE_MOMENTUM': True,
            'SCALE_MOMENTUM_THRESHOLD': 1.1,
            'STEPS': [0, 5000, 8000],
            'STEP_SIZE': 30000,
            'TYPE': 'SGD',
            'WARM_UP_FACTOR': 0.3333333333333333,
            'WARM_UP_ITERS': 500,
            'WARM_UP_METHOD': 'linear',
            'WEIGHT_DECAY': 0.0001,
            'WEIGHT_DECAY_GN': 0.0},
 'TEST': {'BBOX_AUG': {'AREA_TH_HI': 32400,
                       'AREA_TH_LO': 2500,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'COORD_HEUR': 'UNION',
                       'ENABLED': False,
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False,
                       'SCORE_HEUR': 'UNION'},
          'BBOX_REG': True,
          'BBOX_VOTE': {'ENABLED': False,
                        'SCORING_METHOD': 'ID',
                        'SCORING_METHOD_BETA': 1.0,
                        'VOTE_TH': 0.8},
          'COMPETITION_MODE': True,
          'DATASETS': ('voc_2007_test',),
          'DETECTIONS_PER_IM': 100,
          'FORCE_JSON_DATASET_EVAL': False,
          'KPS_AUG': {'AREA_TH': 32400,
                      'ASPECT_RATIOS': (),
                      'ASPECT_RATIO_H_FLIP': False,
                      'ENABLED': False,
                      'HEUR': 'HM_AVG',
                      'H_FLIP': False,
                      'MAX_SIZE': 4000,
                      'SCALES': (),
                      'SCALE_H_FLIP': False,
                      'SCALE_SIZE_DEP': False},
          'MASK_AUG': {'AREA_TH': 32400,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'ENABLED': False,
                       'HEUR': 'SOFT_AVG',
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False},
          'MAX_SIZE': 1000,
          'NMS': 0.5,
          'PRECOMPUTED_PROPOSALS': False,
          'PROPOSAL_FILES': (),
          'PROPOSAL_LIMIT': 2000,
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 1000,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALE': 600,
          'SCORE_THRESH': 0.05,
          'SOFT_NMS': {'ENABLED': False, 'METHOD': 'linear', 'SIGMA': 0.5},
          'WEAK_SUPERVISE': False},
 'TRAIN': {'ASPECT_CROPPING': False,
           'ASPECT_GROUPING': True,
           'ASPECT_HI': 2,
           'ASPECT_LO': 0.5,
           'BATCH_SIZE_PER_IM': 512,
           'BBOX_INSIDE_WEIGHTS': (1.0, 1.0, 1.0, 1.0),
           'BBOX_NORMALIZE_MEANS': (0.0, 0.0, 0.0, 0.0),
           'BBOX_NORMALIZE_STDS': (0.1, 0.1, 0.2, 0.2),
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'COPY_CLS_TO_DET': False,
           'CROWD_FILTER_THRESH': 0.7,
           'DATASETS': (),
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'FREEZE_BOX_HEAD': True,
           'FREEZE_CONV_BODY': False,
           'FREEZE_RPN': False,
           'GT_MIN_AREA': -1,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_FILES': (),
           'RPN_BATCH_SIZE_PER_IM': 256,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 2000,
           'RPN_STRADDLE_THRESH': 0,
           'SCALES': (600,),
           'SNAPSHOT_ITERS': 2000,
           'SPATIAL_REG': False,
           'USE_FLIPPED': True,
           'WEAK_SUPERVISE': True,
           'WEAK_SUPERVISE_WITH_PRETRAIN': True},
 'VIS': False,
 'VIS_TH': 0.9}
loading annotations into memory...
Done (t=0.08s)
creating index...
index created!
INFO test_engine.py: 324: training mode? : False
INFO test_engine.py: 331: loading checkpoint Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step1999.pth
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2477/3714 0.935s + 0.001s (eta: 0:19:17)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2487/3714 0.573s + 0.001s (eta: 0:11:45)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2497/3714 0.545s + 0.001s (eta: 0:11:04)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2507/3714 0.524s + 0.001s (eta: 0:10:33)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2517/3714 0.525s + 0.001s (eta: 0:10:30)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2527/3714 0.520s + 0.001s (eta: 0:10:19)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2537/3714 0.520s + 0.001s (eta: 0:10:13)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2547/3714 0.520s + 0.002s (eta: 0:10:09)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2557/3714 0.517s + 0.002s (eta: 0:10:00)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2567/3714 0.513s + 0.002s (eta: 0:09:50)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2577/3714 0.515s + 0.002s (eta: 0:09:47)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2587/3714 0.512s + 0.002s (eta: 0:09:38)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2597/3714 0.509s + 0.002s (eta: 0:09:30)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2607/3714 0.507s + 0.002s (eta: 0:09:23)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2617/3714 0.505s + 0.002s (eta: 0:09:16)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2627/3714 0.506s + 0.002s (eta: 0:09:11)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2637/3714 0.505s + 0.002s (eta: 0:09:05)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2647/3714 0.505s + 0.002s (eta: 0:09:00)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2657/3714 0.503s + 0.002s (eta: 0:08:53)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2667/3714 0.503s + 0.002s (eta: 0:08:48)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2677/3714 0.503s + 0.002s (eta: 0:08:43)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2687/3714 0.502s + 0.002s (eta: 0:08:37)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2697/3714 0.502s + 0.002s (eta: 0:08:32)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2707/3714 0.503s + 0.002s (eta: 0:08:27)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2717/3714 0.503s + 0.002s (eta: 0:08:23)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2727/3714 0.504s + 0.002s (eta: 0:08:18)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2737/3714 0.504s + 0.002s (eta: 0:08:13)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2747/3714 0.505s + 0.002s (eta: 0:08:09)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2757/3714 0.504s + 0.002s (eta: 0:08:04)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2767/3714 0.505s + 0.002s (eta: 0:07:59)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2777/3714 0.505s + 0.002s (eta: 0:07:55)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2787/3714 0.504s + 0.002s (eta: 0:07:48)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2797/3714 0.505s + 0.002s (eta: 0:07:44)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2807/3714 0.504s + 0.002s (eta: 0:07:39)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2817/3714 0.504s + 0.002s (eta: 0:07:33)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2827/3714 0.504s + 0.002s (eta: 0:07:28)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2837/3714 0.503s + 0.002s (eta: 0:07:23)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2847/3714 0.504s + 0.002s (eta: 0:07:18)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2857/3714 0.503s + 0.002s (eta: 0:07:12)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2867/3714 0.503s + 0.002s (eta: 0:07:07)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2877/3714 0.502s + 0.002s (eta: 0:07:01)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2887/3714 0.502s + 0.002s (eta: 0:06:56)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2897/3714 0.501s + 0.002s (eta: 0:06:50)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2907/3714 0.501s + 0.002s (eta: 0:06:45)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2917/3714 0.501s + 0.002s (eta: 0:06:41)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2927/3714 0.502s + 0.002s (eta: 0:06:36)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2937/3714 0.501s + 0.002s (eta: 0:06:30)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2947/3714 0.501s + 0.002s (eta: 0:06:26)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2957/3714 0.502s + 0.002s (eta: 0:06:21)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2967/3714 0.503s + 0.002s (eta: 0:06:16)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2977/3714 0.503s + 0.002s (eta: 0:06:12)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2987/3714 0.503s + 0.002s (eta: 0:06:07)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2997/3714 0.503s + 0.002s (eta: 0:06:02)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3007/3714 0.502s + 0.002s (eta: 0:05:56)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3017/3714 0.502s + 0.002s (eta: 0:05:51)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3027/3714 0.501s + 0.002s (eta: 0:05:45)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3037/3714 0.500s + 0.002s (eta: 0:05:39)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3047/3714 0.499s + 0.002s (eta: 0:05:34)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3057/3714 0.498s + 0.002s (eta: 0:05:28)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3067/3714 0.499s + 0.002s (eta: 0:05:23)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3077/3714 0.500s + 0.002s (eta: 0:05:19)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3087/3714 0.501s + 0.002s (eta: 0:05:15)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3097/3714 0.501s + 0.002s (eta: 0:05:09)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3107/3714 0.500s + 0.002s (eta: 0:05:04)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3117/3714 0.500s + 0.002s (eta: 0:04:59)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3127/3714 0.500s + 0.002s (eta: 0:04:54)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3137/3714 0.500s + 0.002s (eta: 0:04:49)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3147/3714 0.500s + 0.002s (eta: 0:04:44)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3157/3714 0.501s + 0.002s (eta: 0:04:39)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3167/3714 0.500s + 0.002s (eta: 0:04:34)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3177/3714 0.500s + 0.002s (eta: 0:04:29)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3187/3714 0.500s + 0.002s (eta: 0:04:24)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3197/3714 0.500s + 0.002s (eta: 0:04:19)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3207/3714 0.500s + 0.002s (eta: 0:04:14)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3217/3714 0.499s + 0.002s (eta: 0:04:09)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3227/3714 0.488s + 0.002s (eta: 0:03:58)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3237/3714 0.488s + 0.002s (eta: 0:03:53)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3247/3714 0.489s + 0.002s (eta: 0:03:49)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3257/3714 0.489s + 0.002s (eta: 0:03:44)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3267/3714 0.489s + 0.002s (eta: 0:03:39)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3277/3714 0.489s + 0.002s (eta: 0:03:34)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3287/3714 0.488s + 0.002s (eta: 0:03:29)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3297/3714 0.489s + 0.002s (eta: 0:03:24)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3307/3714 0.489s + 0.002s (eta: 0:03:19)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3317/3714 0.489s + 0.002s (eta: 0:03:14)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3327/3714 0.490s + 0.002s (eta: 0:03:10)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3337/3714 0.490s + 0.002s (eta: 0:03:05)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3347/3714 0.490s + 0.002s (eta: 0:03:00)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3357/3714 0.491s + 0.002s (eta: 0:02:55)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3367/3714 0.491s + 0.002s (eta: 0:02:51)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3377/3714 0.491s + 0.002s (eta: 0:02:46)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3387/3714 0.492s + 0.002s (eta: 0:02:41)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3397/3714 0.491s + 0.002s (eta: 0:02:36)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3407/3714 0.491s + 0.002s (eta: 0:02:31)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3417/3714 0.491s + 0.002s (eta: 0:02:26)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3427/3714 0.491s + 0.002s (eta: 0:02:21)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3437/3714 0.490s + 0.002s (eta: 0:02:16)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3447/3714 0.490s + 0.002s (eta: 0:02:11)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3457/3714 0.491s + 0.002s (eta: 0:02:06)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3467/3714 0.492s + 0.002s (eta: 0:02:01)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3477/3714 0.491s + 0.002s (eta: 0:01:56)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3487/3714 0.491s + 0.002s (eta: 0:01:51)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3497/3714 0.491s + 0.002s (eta: 0:01:46)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3507/3714 0.491s + 0.002s (eta: 0:01:41)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3517/3714 0.490s + 0.002s (eta: 0:01:36)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3527/3714 0.490s + 0.002s (eta: 0:01:32)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3537/3714 0.490s + 0.002s (eta: 0:01:27)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3547/3714 0.491s + 0.002s (eta: 0:01:22)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3557/3714 0.491s + 0.002s (eta: 0:01:17)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3567/3714 0.491s + 0.002s (eta: 0:01:12)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3577/3714 0.491s + 0.002s (eta: 0:01:07)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3587/3714 0.491s + 0.002s (eta: 0:01:02)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3597/3714 0.491s + 0.002s (eta: 0:00:57)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3607/3714 0.491s + 0.002s (eta: 0:00:52)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3617/3714 0.492s + 0.002s (eta: 0:00:47)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3627/3714 0.491s + 0.002s (eta: 0:00:42)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3637/3714 0.492s + 0.002s (eta: 0:00:37)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3647/3714 0.492s + 0.002s (eta: 0:00:33)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3657/3714 0.492s + 0.002s (eta: 0:00:28)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3667/3714 0.492s + 0.002s (eta: 0:00:23)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3677/3714 0.493s + 0.002s (eta: 0:00:18)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3687/3714 0.493s + 0.002s (eta: 0:00:13)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3697/3714 0.492s + 0.002s (eta: 0:00:08)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3707/3714 0.492s + 0.002s (eta: 0:00:03)
INFO test_engine.py: 314: Wrote detections to: /home/ubuntu/Detectron.pytorch/Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_2476_3714.pkl
/home/ubuntu/anaconda3/envs/pytorch41/lib/python3.7/site-packages/torch/nn/functional.py:1890: UserWarning: nn.functional.upsample is deprecated. Use nn.functional.interpolate instead.
  warnings.warn("nn.functional.upsample is deprecated. Use nn.functional.interpolate instead.")

INFO subprocess.py: 129: # ---------------------------------------------------------------------------- #
INFO subprocess.py: 131: stdout of subprocess 3 with range [3715, 4952]
INFO subprocess.py: 133: # ---------------------------------------------------------------------------- #
INFO test_net.py:  72: Called with args:
INFO test_net.py:  73: Namespace(cfg_file='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_config.yaml', dataset=None, load_ckpt='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step1999.pth', load_detectron=None, multi_gpu_testing=False, num_classes=None, output_dir='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test', range=[3714, 4952], set_cfgs=['TEST.DATASETS', '("voc_2007_test",)'], vis=False)
INFO test_net.py: 130: Testing with config:
INFO test_net.py: 131: {'BBOX_XFORM_CLIP': 4.135166556742356,
 'CROP_RESIZE_WITH_MAX_POOL': True,
 'CUDA': False,
 'DATA_DIR': '/home/ubuntu/Detectron.pytorch/data',
 'DATA_LOADER': {'NUM_THREADS': 4},
 'DEBUG': False,
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXPECTED_RESULTS': [],
 'EXPECTED_RESULTS_ATOL': 0.005,
 'EXPECTED_RESULTS_EMAIL': '',
 'EXPECTED_RESULTS_RTOL': 0.1,
 'FAST_RCNN': {'BOX_OUT_STREAMS': 1,
               'CONV_HEAD_DIM': 256,
               'MLP_HEAD_DIM': 1024,
               'NUM_STACKED_CONVS': 4,
               'ROI_BOX_HEAD': 'fast_rcnn_heads.roi_2mlp_head',
               'ROI_XFORM_METHOD': 'RoIAlign',
               'ROI_XFORM_RESOLUTION': 7,
               'ROI_XFORM_SAMPLING_RATIO': 2},
 'FPN': {'COARSEST_STRIDE': 32,
         'DIM': 256,
         'EXTRA_CONV_LEVELS': False,
         'FPN_ON': True,
         'MULTILEVEL_ROIS': True,
         'MULTILEVEL_RPN': True,
         'ROI_CANONICAL_LEVEL': 4,
         'ROI_CANONICAL_SCALE': 224,
         'ROI_MAX_LEVEL': 5,
         'ROI_MIN_LEVEL': 2,
         'RPN_ANCHOR_START_SIZE': 32,
         'RPN_ASPECT_RATIOS': (0.5, 1, 2),
         'RPN_COLLECT_SCALE': 1,
         'RPN_MAX_LEVEL': 6,
         'RPN_MIN_LEVEL': 2,
         'USE_GN': False,
         'ZERO_INIT_LATERAL': False},
 'GROUP_NORM': {'DIM_PER_GP': -1, 'EPSILON': 1e-05, 'NUM_GROUPS': 32},
 'KRCNN': {'CONV_HEAD_DIM': 256,
           'CONV_HEAD_KERNEL': 3,
           'CONV_INIT': 'GaussianFill',
           'DECONV_DIM': 256,
           'DECONV_KERNEL': 4,
           'DILATION': 1,
           'HEATMAP_SIZE': -1,
           'INFERENCE_MIN_SIZE': 0,
           'KEYPOINT_CONFIDENCE': 'bbox',
           'LOSS_WEIGHT': 1.0,
           'MIN_KEYPOINT_COUNT_FOR_VALID_MINIBATCH': 20,
           'NMS_OKS': False,
           'NORMALIZE_BY_VISIBLE_KEYPOINTS': True,
           'NUM_KEYPOINTS': -1,
           'NUM_STACKED_CONVS': 8,
           'ROI_KEYPOINTS_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'UP_SCALE': -1,
           'USE_DECONV': False,
           'USE_DECONV_OUTPUT': False},
 'MATLAB': 'matlab',
 'MODEL': {'BBOX_REG_WEIGHTS': (10.0, 10.0, 5.0, 5.0),
           'CLS_AGNOSTIC_BBOX_REG': False,
           'CONV_BODY': 'FPN.fpn_ResNet101_conv5_body',
           'FASTER_RCNN': True,
           'KEYPOINTS_ON': False,
           'LOAD_IMAGENET_PRETRAINED_WEIGHTS': True,
           'MASK_ON': False,
           'NUM_CLASSES': 21,
           'RPN_ONLY': False,
           'SHARE_RES5': False,
           'TYPE': 'generalized_rcnn',
           'UNSUPERVISED_POSE': False},
 'MRCNN': {'CLS_SPECIFIC_MASK': True,
           'CONV_INIT': 'GaussianFill',
           'DILATION': 2,
           'DIM_REDUCED': 256,
           'MEMORY_EFFICIENT_LOSS': True,
           'RESOLUTION': 14,
           'ROI_MASK_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'THRESH_BINARIZE': 0.5,
           'UPSAMPLE_RATIO': 1,
           'USE_FC_OUTPUT': False,
           'WEIGHT_LOSS_MASK': 1.0},
 'NUM_GPUS': 8,
 'OUTPUT_DIR': 'Outputs',
 'PIXEL_MEANS': array([[[102.9801, 115.9465, 122.7717]]]),
 'POOLING_MODE': 'crop',
 'POOLING_SIZE': 7,
 'PYTORCH_VERSION_LESS_THAN_040': False,
 'RESNETS': {'FREEZE_AT': 2,
             'IMAGENET_PRETRAINED_WEIGHTS': 'data/pretrained_model/resnet101_caffe.pth',
             'NUM_GROUPS': 1,
             'RES5_DILATION': 1,
             'SHORTCUT_FUNC': 'basic_bn_shortcut',
             'STEM_FUNC': 'basic_bn_stem',
             'STRIDE_1X1': True,
             'TRANS_FUNC': 'bottleneck_transformation',
             'USE_GN': False,
             'WIDTH_PER_GROUP': 64},
 'RETINANET': {'ANCHOR_SCALE': 4,
               'ASPECT_RATIOS': (0.5, 1.0, 2.0),
               'BBOX_REG_BETA': 0.11,
               'BBOX_REG_WEIGHT': 1.0,
               'CLASS_SPECIFIC_BBOX': False,
               'INFERENCE_TH': 0.05,
               'LOSS_ALPHA': 0.25,
               'LOSS_GAMMA': 2.0,
               'NEGATIVE_OVERLAP': 0.4,
               'NUM_CONVS': 4,
               'POSITIVE_OVERLAP': 0.5,
               'PRE_NMS_TOP_N': 1000,
               'PRIOR_PROB': 0.01,
               'RETINANET_ON': False,
               'SCALES_PER_OCTAVE': 3,
               'SHARE_CLS_BBOX_TOWER': False,
               'SOFTMAX': False},
 'RFCN': {'PS_GRID_SIZE': 3},
 'RNG_SEED': 3,
 'ROOT_DIR': '/home/ubuntu/Detectron.pytorch',
 'RPN': {'ASPECT_RATIOS': (0.5, 1, 2),
         'CLS_ACTIVATION': 'sigmoid',
         'OUT_DIM': 512,
         'OUT_DIM_AS_IN_DIM': True,
         'RPN_ON': True,
         'SIZES': (64, 128, 256, 512),
         'STRIDE': 16},
 'SOLVER': {'BASE_LR': 2e-05,
            'BIAS_DOUBLE_LR': True,
            'BIAS_WEIGHT_DECAY': False,
            'GAMMA': 0.1,
            'LOG_LR_CHANGE_THRESHOLD': 1.1,
            'LRS': [],
            'LR_POLICY': 'steps_with_decay',
            'MAX_ITER': 10000,
            'MOMENTUM': 0.9,
            'SCALE_MOMENTUM': True,
            'SCALE_MOMENTUM_THRESHOLD': 1.1,
            'STEPS': [0, 5000, 8000],
            'STEP_SIZE': 30000,
            'TYPE': 'SGD',
            'WARM_UP_FACTOR': 0.3333333333333333,
            'WARM_UP_ITERS': 500,
            'WARM_UP_METHOD': 'linear',
            'WEIGHT_DECAY': 0.0001,
            'WEIGHT_DECAY_GN': 0.0},
 'TEST': {'BBOX_AUG': {'AREA_TH_HI': 32400,
                       'AREA_TH_LO': 2500,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'COORD_HEUR': 'UNION',
                       'ENABLED': False,
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False,
                       'SCORE_HEUR': 'UNION'},
          'BBOX_REG': True,
          'BBOX_VOTE': {'ENABLED': False,
                        'SCORING_METHOD': 'ID',
                        'SCORING_METHOD_BETA': 1.0,
                        'VOTE_TH': 0.8},
          'COMPETITION_MODE': True,
          'DATASETS': ('voc_2007_test',),
          'DETECTIONS_PER_IM': 100,
          'FORCE_JSON_DATASET_EVAL': False,
          'KPS_AUG': {'AREA_TH': 32400,
                      'ASPECT_RATIOS': (),
                      'ASPECT_RATIO_H_FLIP': False,
                      'ENABLED': False,
                      'HEUR': 'HM_AVG',
                      'H_FLIP': False,
                      'MAX_SIZE': 4000,
                      'SCALES': (),
                      'SCALE_H_FLIP': False,
                      'SCALE_SIZE_DEP': False},
          'MASK_AUG': {'AREA_TH': 32400,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'ENABLED': False,
                       'HEUR': 'SOFT_AVG',
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False},
          'MAX_SIZE': 1000,
          'NMS': 0.5,
          'PRECOMPUTED_PROPOSALS': False,
          'PROPOSAL_FILES': (),
          'PROPOSAL_LIMIT': 2000,
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 1000,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALE': 600,
          'SCORE_THRESH': 0.05,
          'SOFT_NMS': {'ENABLED': False, 'METHOD': 'linear', 'SIGMA': 0.5},
          'WEAK_SUPERVISE': False},
 'TRAIN': {'ASPECT_CROPPING': False,
           'ASPECT_GROUPING': True,
           'ASPECT_HI': 2,
           'ASPECT_LO': 0.5,
           'BATCH_SIZE_PER_IM': 512,
           'BBOX_INSIDE_WEIGHTS': (1.0, 1.0, 1.0, 1.0),
           'BBOX_NORMALIZE_MEANS': (0.0, 0.0, 0.0, 0.0),
           'BBOX_NORMALIZE_STDS': (0.1, 0.1, 0.2, 0.2),
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'COPY_CLS_TO_DET': False,
           'CROWD_FILTER_THRESH': 0.7,
           'DATASETS': (),
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'FREEZE_BOX_HEAD': True,
           'FREEZE_CONV_BODY': False,
           'FREEZE_RPN': False,
           'GT_MIN_AREA': -1,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_FILES': (),
           'RPN_BATCH_SIZE_PER_IM': 256,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 2000,
           'RPN_STRADDLE_THRESH': 0,
           'SCALES': (600,),
           'SNAPSHOT_ITERS': 2000,
           'SPATIAL_REG': False,
           'USE_FLIPPED': True,
           'WEAK_SUPERVISE': True,
           'WEAK_SUPERVISE_WITH_PRETRAIN': True},
 'VIS': False,
 'VIS_TH': 0.9}
loading annotations into memory...
Done (t=0.13s)
creating index...
index created!
INFO test_engine.py: 324: training mode? : False
INFO test_engine.py: 331: loading checkpoint Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step1999.pth
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3715/4952 0.640s + 0.001s (eta: 0:13:12)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3725/4952 0.478s + 0.001s (eta: 0:09:47)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3735/4952 0.463s + 0.002s (eta: 0:09:25)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3745/4952 0.476s + 0.002s (eta: 0:09:36)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3755/4952 0.479s + 0.003s (eta: 0:09:36)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3765/4952 0.488s + 0.002s (eta: 0:09:42)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3775/4952 0.490s + 0.002s (eta: 0:09:39)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3785/4952 0.494s + 0.002s (eta: 0:09:38)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3795/4952 0.492s + 0.002s (eta: 0:09:31)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3805/4952 0.490s + 0.002s (eta: 0:09:24)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3815/4952 0.489s + 0.002s (eta: 0:09:18)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3825/4952 0.490s + 0.002s (eta: 0:09:15)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3835/4952 0.487s + 0.002s (eta: 0:09:06)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3845/4952 0.486s + 0.002s (eta: 0:09:00)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3855/4952 0.488s + 0.002s (eta: 0:08:57)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3865/4952 0.491s + 0.002s (eta: 0:08:55)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3875/4952 0.495s + 0.002s (eta: 0:08:54)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3885/4952 0.494s + 0.002s (eta: 0:08:49)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3895/4952 0.494s + 0.002s (eta: 0:08:44)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3905/4952 0.495s + 0.002s (eta: 0:08:41)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3915/4952 0.497s + 0.002s (eta: 0:08:37)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3925/4952 0.497s + 0.003s (eta: 0:08:33)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3935/4952 0.496s + 0.003s (eta: 0:08:27)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3945/4952 0.495s + 0.003s (eta: 0:08:21)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3955/4952 0.497s + 0.002s (eta: 0:08:17)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3965/4952 0.497s + 0.002s (eta: 0:08:12)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3975/4952 0.498s + 0.002s (eta: 0:08:08)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3985/4952 0.497s + 0.002s (eta: 0:08:02)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3995/4952 0.496s + 0.002s (eta: 0:07:57)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4005/4952 0.498s + 0.002s (eta: 0:07:53)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4015/4952 0.497s + 0.002s (eta: 0:07:47)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4025/4952 0.496s + 0.002s (eta: 0:07:41)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4035/4952 0.497s + 0.002s (eta: 0:07:37)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4045/4952 0.496s + 0.002s (eta: 0:07:32)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4055/4952 0.497s + 0.002s (eta: 0:07:28)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4065/4952 0.497s + 0.002s (eta: 0:07:23)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4075/4952 0.496s + 0.002s (eta: 0:07:16)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4085/4952 0.497s + 0.002s (eta: 0:07:12)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4095/4952 0.496s + 0.002s (eta: 0:07:07)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4105/4952 0.496s + 0.002s (eta: 0:07:01)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4115/4952 0.496s + 0.002s (eta: 0:06:56)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4125/4952 0.495s + 0.002s (eta: 0:06:51)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4135/4952 0.495s + 0.002s (eta: 0:06:46)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4145/4952 0.494s + 0.002s (eta: 0:06:40)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4155/4952 0.495s + 0.002s (eta: 0:06:36)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4165/4952 0.496s + 0.002s (eta: 0:06:31)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4175/4952 0.495s + 0.002s (eta: 0:06:26)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4185/4952 0.497s + 0.002s (eta: 0:06:22)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4195/4952 0.497s + 0.002s (eta: 0:06:17)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4205/4952 0.496s + 0.002s (eta: 0:06:12)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4215/4952 0.497s + 0.002s (eta: 0:06:07)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4225/4952 0.498s + 0.002s (eta: 0:06:03)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4235/4952 0.498s + 0.002s (eta: 0:05:58)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4245/4952 0.498s + 0.002s (eta: 0:05:53)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4255/4952 0.497s + 0.002s (eta: 0:05:47)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4265/4952 0.497s + 0.002s (eta: 0:05:42)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4275/4952 0.497s + 0.002s (eta: 0:05:37)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4285/4952 0.496s + 0.002s (eta: 0:05:32)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4295/4952 0.496s + 0.002s (eta: 0:05:26)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4305/4952 0.496s + 0.002s (eta: 0:05:22)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4315/4952 0.495s + 0.002s (eta: 0:05:16)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4325/4952 0.495s + 0.002s (eta: 0:05:11)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4335/4952 0.495s + 0.002s (eta: 0:05:06)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4345/4952 0.496s + 0.002s (eta: 0:05:02)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4355/4952 0.495s + 0.002s (eta: 0:04:56)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4365/4952 0.494s + 0.002s (eta: 0:04:51)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4375/4952 0.494s + 0.002s (eta: 0:04:46)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4385/4952 0.495s + 0.002s (eta: 0:04:41)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4395/4952 0.495s + 0.002s (eta: 0:04:36)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4405/4952 0.495s + 0.002s (eta: 0:04:31)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4415/4952 0.495s + 0.002s (eta: 0:04:26)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4425/4952 0.495s + 0.002s (eta: 0:04:21)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4435/4952 0.495s + 0.002s (eta: 0:04:16)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4445/4952 0.495s + 0.002s (eta: 0:04:11)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4455/4952 0.495s + 0.002s (eta: 0:04:06)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4465/4952 0.494s + 0.002s (eta: 0:04:01)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4475/4952 0.492s + 0.002s (eta: 0:03:55)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4485/4952 0.491s + 0.002s (eta: 0:03:50)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4495/4952 0.491s + 0.002s (eta: 0:03:45)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4505/4952 0.491s + 0.002s (eta: 0:03:40)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4515/4952 0.490s + 0.002s (eta: 0:03:35)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4525/4952 0.490s + 0.002s (eta: 0:03:29)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4535/4952 0.490s + 0.002s (eta: 0:03:25)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4545/4952 0.490s + 0.002s (eta: 0:03:20)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4555/4952 0.490s + 0.002s (eta: 0:03:15)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4565/4952 0.490s + 0.002s (eta: 0:03:10)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4575/4952 0.490s + 0.002s (eta: 0:03:05)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4585/4952 0.489s + 0.002s (eta: 0:03:00)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4595/4952 0.489s + 0.002s (eta: 0:02:55)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4605/4952 0.489s + 0.002s (eta: 0:02:50)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4615/4952 0.490s + 0.002s (eta: 0:02:45)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4625/4952 0.490s + 0.002s (eta: 0:02:40)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4635/4952 0.490s + 0.002s (eta: 0:02:35)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4645/4952 0.490s + 0.002s (eta: 0:02:30)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4655/4952 0.490s + 0.002s (eta: 0:02:25)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4665/4952 0.490s + 0.002s (eta: 0:02:21)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4675/4952 0.489s + 0.002s (eta: 0:02:16)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4685/4952 0.490s + 0.002s (eta: 0:02:11)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4695/4952 0.490s + 0.002s (eta: 0:02:06)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4705/4952 0.490s + 0.002s (eta: 0:02:01)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4715/4952 0.490s + 0.002s (eta: 0:01:56)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4725/4952 0.489s + 0.002s (eta: 0:01:51)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4735/4952 0.489s + 0.002s (eta: 0:01:46)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4745/4952 0.490s + 0.002s (eta: 0:01:41)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4755/4952 0.489s + 0.002s (eta: 0:01:36)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4765/4952 0.489s + 0.002s (eta: 0:01:31)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4775/4952 0.489s + 0.002s (eta: 0:01:26)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4785/4952 0.489s + 0.002s (eta: 0:01:21)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4795/4952 0.489s + 0.002s (eta: 0:01:17)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4805/4952 0.489s + 0.002s (eta: 0:01:12)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4815/4952 0.489s + 0.002s (eta: 0:01:07)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4825/4952 0.489s + 0.002s (eta: 0:01:02)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4835/4952 0.489s + 0.002s (eta: 0:00:57)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4845/4952 0.489s + 0.002s (eta: 0:00:52)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4855/4952 0.489s + 0.002s (eta: 0:00:47)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4865/4952 0.489s + 0.002s (eta: 0:00:42)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4875/4952 0.489s + 0.002s (eta: 0:00:37)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4885/4952 0.489s + 0.002s (eta: 0:00:32)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4895/4952 0.489s + 0.002s (eta: 0:00:27)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4905/4952 0.489s + 0.002s (eta: 0:00:23)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4915/4952 0.489s + 0.002s (eta: 0:00:18)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4925/4952 0.489s + 0.002s (eta: 0:00:13)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4935/4952 0.489s + 0.002s (eta: 0:00:08)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4945/4952 0.489s + 0.002s (eta: 0:00:03)
INFO test_engine.py: 314: Wrote detections to: /home/ubuntu/Detectron.pytorch/Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_3714_4952.pkl
/home/ubuntu/anaconda3/envs/pytorch41/lib/python3.7/site-packages/torch/nn/functional.py:1890: UserWarning: nn.functional.upsample is deprecated. Use nn.functional.interpolate instead.
  warnings.warn("nn.functional.upsample is deprecated. Use nn.functional.interpolate instead.")

INFO test_engine.py: 211: Wrote detections to: /home/ubuntu/Detectron.pytorch/Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detections.pkl
INFO test_engine.py: 161: Total inference time: 638.562s
INFO task_evaluation.py:  77: Evaluating detections
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: aeroplane
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: bicycle
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: bird
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: boat
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: bottle
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: bus
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: car
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: cat
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: chair
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: cow
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: diningtable
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: dog
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: horse
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: motorbike
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: person
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: pottedplant
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: sheep
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: sofa
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: train
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: tvmonitor
INFO voc_dataset_evaluator.py: 115: VOC07 metric? Yes
INFO voc_eval.py: 171: [1123 1087  654 ...  778  471  980]
INFO voc_dataset_evaluator.py: 127: AP for aeroplane = 0.7731
INFO voc_eval.py: 171: [269  35 173 ... 413 844 168]
INFO voc_dataset_evaluator.py: 127: AP for bicycle = 0.7910
INFO voc_eval.py: 171: [1151 1493 1769 ... 1288 2024 2272]
INFO voc_dataset_evaluator.py: 127: AP for bird = 0.7929
INFO voc_eval.py: 171: [1469 2089   74 ... 1456 1245  183]
INFO voc_dataset_evaluator.py: 127: AP for boat = 0.6259
INFO voc_eval.py: 171: [ 968 1820  620 ...  907 1926  363]
INFO voc_dataset_evaluator.py: 127: AP for bottle = 0.6768
INFO voc_eval.py: 171: [336 866 282 864 137 839 536 490 217 710 889 609 227   4 506  29  88 720
 757 425 647 786 107 144 271 465  19  76 668 560 801 299  37 813 672 878
 658 806 711 477 509 869 676 200 651 429 602 709 736 453 212 394  58  85
  34  81 130 628 767 568 581 829 551  54 190 804  86 576 544 258 124 419
 520 690 750 241  24 744 186 324 785 607 296 752 445 495  72 167 554 372
 753 367 399 906 664 392  38 627 178 466 492 844 412 892 285 153 180 409
 805 875 814 681 591 542 273 134 309 669 118 737 847 524 854 436  21 645
 189 356  62 881 231 353 117 845 808 460 216 321 868 735 257 577 529 792
 316 528 552 195 680 489 498 407 826 229 646 327 543 580 502 391 474   1
 182 830 393 442 563 701 251 305 289 721 204 633 326 525 570 381 774  14
 484 795 346 368 275 613 510 665 783 812 363 850 547 246 599 712 571 678
 583 610 527  20 883 206  69   0 614 418 301 415 290 100 265 896 569 734
 487 817 179 261 515  55 623  78 766 352 146 421 430 503 359 655 810 585
 698 408 379 252  83 827 494 168 762 504 293 443 671 708 567 861 139 654
 187 312 885 390 150 405 243 420 287 444 109 455 202 841 726 277 793 161
 463 143 578  31 843 371 770 858 172 274 784 132 438 360 891 114 414  89
 325 893 703 882 266 706  59 746 361 133 573  11 692 247 473 624 476 170
 549 427  66 450 278 467 513 140 888 382  80 236  90 440  46 724 732 128
 194 141  39 675 865 228 370 135 887 691   6 176 232 177 695 754 462 481
 848 637 673 369 743 105 454  36 242 595 611 162 860 233 373 660 237 131
 355 104 880 173 773 401 768  67   9 663 905 719 151 659 677  10 191 158
 612 416 738  30 272 700 586 331 877 727   5 702 397 240 116 682 704 126
 833  27 181 772  93 899 584 553 500 635 318  42 540 225 499 120 163 776
 594 366 248 895 254 629 649 482 313 306 728 308 347  82 156 358  28  60
 683 351 733 214 323 534 448 685 516 851  79 211 707 550 113 106  84 164
 383 432  56 688 863 537 183 341 511 424 297 112 230 859 809 631 456   8
 102 824 267 250 103 731 300 835 459 446 255 608 600 165 115 765 434 253
  50  32  41 417 197 493 184 145 315 838 674 641  12 226 689 320 781 452
 310 718 821 396 857 742  47 350 279 458 342 344 210 740 238 661 472 840
  73 284 335 149 395 505 722 411 598 437 298  64 328 517 603 590 423 616
 334 588 811 836  25 512 779 431 879 374 644 606 125 558 188  51 747 638
  70 556 904 479  22 345 531 831  17 338 587 788 110 304 201 653 365 218
 449 693  44 667 725 402 276 426 699 657 546 834 470 901 461 239 532  23
 155 794 384 748  71 501 758 761 171 148 292  98 154 630 349 235  75 755
 291 198 108 521 871 468 825 634 488 339 378 220 782 307 375 533 283  92
 111  13 822  18 872 884 679 565 377 545 428 398 759 507 771  97 789 593
 870 890 101 262 522  61 330 270 403 756 422 435 281 778 244 249  99 874
  95 215 410 617 849 451 582 234 541 157 775 561  43 729 820 259 491 723
 640 219 780 196 837 791 842  96 908 129 656 604 169 295 619 387  63 159
 222  91 592  45 485 769 288 713 441 294 439  77 787 175 819 566 764 760
 256 311 362 898 894 620 478 828 797 853 497 280 333 716 406  87 717 213
 205  52 579 886  49 514 832 621 475   3 715 559 684 185 900 777 745 519
 245 555 763 263  57  68 530 526  40 337 798 464 818 357 354 209 166 622
 662 160 697 589 648 650 800 605 386 119 597  94 380 404 574  26 907 203
 523 855   7 626 486  74 260 483 480 705 642 269 562 385 314 816 208 152
 615 400 739 332 508 343 796 903 790 572 601 302 856 496  33 823 376  16
 618 670 457 548  48 348 696 714 193 902 147 652 224 799 136 749 802  65
 632 364 433 686 322 535 127 575 625 192 471 388 897   2 389 317 469 666
 564 538 596 174 639 264 268  53 852 846 199 221 340 122 803 807 142 518
 862 121 873 730 636 286 329  15 876 223 539 123 319  35 447 694 867 138
 751 303 687 815 643 413 741 557 207]
INFO voc_dataset_evaluator.py: 127: AP for bus = 0.7920
INFO voc_eval.py: 171: [4212 1944 3731 ... 4139  470 3834]
INFO voc_dataset_evaluator.py: 127: AP for car = 0.8591
INFO voc_eval.py: 171: [863 941 978 ... 169 671 445]
INFO voc_dataset_evaluator.py: 127: AP for cat = 0.8564
INFO voc_eval.py: 171: [ 138  137 2246 ... 1362  847 2562]
INFO voc_dataset_evaluator.py: 127: AP for chair = 0.6188
INFO voc_eval.py: 171: [1623 1333  763 ...  488  820   97]
INFO voc_dataset_evaluator.py: 127: AP for cow = 0.7725
INFO voc_eval.py: 171: [1039  622 2861 ... 1634 3122 2460]
INFO voc_dataset_evaluator.py: 127: AP for diningtable = 0.6053
INFO voc_eval.py: 171: [ 113 1115  436 ...  542  862 1138]
INFO voc_dataset_evaluator.py: 127: AP for dog = 0.8191
INFO voc_eval.py: 171: [148  26 508 ...  81 504 215]
INFO voc_dataset_evaluator.py: 127: AP for horse = 0.8299
INFO voc_eval.py: 171: [928 193 278 166 250 120 316 847 147 564 461 149  47 473 157 729 824 445
 627  92 163 185 279 803 465 391 125 376  48 477 612 267 705 869 590 861
 388 297 814 519 899 623 589 721 435 891 110 256 898 118 106 214 831 851
 261 128 802  64 137 883  86 756   5 328 799 776 196 417 888 344 533 796
 482 552 591 845 184 141 935  79 525 370 843 452 238 180 958 347 560 397
 779 134 559 867 535 281 296 121 896 318 522 752 324  42 187 542  81 501
 712 826 254 875 375 686 389 235  75  27 523 186 454 792 453 526 335 502
 681 509 884 595 733 852 126  10 394 308 617 662 950 808 226 655 460 908
 541 579 671 515  59 749 919 553 268 926   8 585 762 897 930  37 431 772
 220 711 545 834 480 172 554 182 549 486  58 630  61 107 924 909 393 205
 740 670 661 862 646 302 916 543   3 628 786 544 338 396 428 200 626 259
 199 763 642 639 879 350 933 458 258 587 405 154   6 206 532 604 572 767
 371 629 578 857 597 555 401 384 219 101 910 902  30 678 286 516 927 664
 398  77 839 369 334 648 224 527 592 353 230 738 536 390 349 231 419 320
 747 228 418 298 859 768  97 437  72 952 645  55 805 663  82 513 314 797
 119 946 636 782 177 416 339 539 531 352 795 723 878 920 423 699 459 310
 518  57 436 175 819 395 598 415 810 948 942 479 103 354 570 387 264 634
 656  41 104  71 866 871 234  66 379 730 650 881 198 285 739 442 520 806
 192 943 668 380 309 907 158 906 311  69 714  96   2 689 838 213 130 759
 769 150 588 433  12 820 734 204 116 817 183 506 447 954 830 789 534 876
 217 151 576 827 299 707 510 359 337 936 915 892 659  80 381 809 665 727
 735 790 895 951 173 441 608 108 631 326 273 931  18 171   1  73 466 882
 242 438 331 270 807 385 246 594 556 701 462 469 835 216 218 887 243 874
 741 341 775 685 283 788 813 688 499 798 715 132  21 455 890 842 921 529
 651 632 323 571 478 505 490 724 524 127 303 138 748 765 633 325 489 744
 713 577  29 252 463 247 156 894 697 649 155  87 212 265 399 403 726 736
 236 277 865 105 540 720 568 122 514 304 500 548 889 947 321 932 404 602
 170 420 787 203 287 804 635 102   9 957  62 822 622 413  44 472 860  85
 941  63 853 944 780 811 346 676 610 446 710 345 159 614 521 619 530 801
 113 348  33 430 358 225 840 599 538 953 565 764 596  84 773 640 837 439
 829  51  39 615 925 751 732 197  17 487 638 124 605 471 512 136 165 593
 620 573 240 284 550 363 407 660 706 114 373 682 791 760 406   7 618 600
 731 547 872 305  13 294 411  94 386 783 625 282 743 340 146 761 691  26
 704 161 696 503 496 583 364 698  14  20  36 537 498 774  99 693 719 652
 574 815 366 327 329 647 253 828 190  52 684 959 271 426 160 464 164  40
 336 551 229 457 451 702 208 666 476 654  49 232  43 885 569 940  34 778
 956 275 606 378 409 832 239 342 488 368 694 412  19 295 293 497 949 690
 178  90 307 603 374 757 825 227 400 272 771 901 945 794  16 870 728 167
 750 382 195 330 914 440 675 616 306 580 300  65 367 245 449  23  24   0
 657 221 546 904  28  46 152 174 517 100 508  76 812 111 700 823 207 644
 929 251 288 755 624 584 468 581 481 168 582 703 291 301 123 343 257 148
 432 474  60 332 854 903 873   4 276  45 289 695 844 495 194 746 722 938
 135 129 425 248 609  11 653 561 143 483 667 841 429  32 402 833 223 679
 444 357 674 269 934  35 421 494 169 131 443 507 144 351 566 709 672 274
 886  22 215  50  54 717  88 244 611 742 575 414 687 880 191 484 117 176
 210 658 317 315 422 322 637 365 716 918 863 249 557 836 377 255 241 492
 201 669 607 260 233 262 179 586 855 758 493  91 153 140 850 770  53 821
  68 563 312  83 754 868 785 708 877 424 864 356 372  15 109 504 613 237
 142 115 905 793 777 562  98 677 408 511  89 955 913 456 816 939  25 290
 263 528 745 485 601 753  70 893 567 280 448 621 470 355 680 202 766 362
 188 361 912  93 383  31 923 360 211 434 800 781 222 450 718  95 900 162
 846 784  67 292 643 410 475 392 922  38 641 467 937 911 112  56 319 848
 427 491 683 737 333 133 725 266 818 917 209 139  78 692 558 856 145 858
 313 181  74 673 849 189]
INFO voc_dataset_evaluator.py: 127: AP for motorbike = 0.7266
INFO voc_eval.py: 171: [ 6529  8977 19096 ... 12347   899 13553]
INFO voc_dataset_evaluator.py: 127: AP for person = 0.8382
INFO voc_eval.py: 171: [1885  256 2320 ... 2347 2016   71]
INFO voc_dataset_evaluator.py: 127: AP for pottedplant = 0.4591
INFO voc_eval.py: 171: [1545  295 1350 ...  509 1026  156]
INFO voc_dataset_evaluator.py: 127: AP for sheep = 0.7557
INFO voc_eval.py: 171: [1220  818  493 ...  858 1286  687]
INFO voc_dataset_evaluator.py: 127: AP for sofa = 0.6974
INFO voc_eval.py: 171: [ 165  516 1209 ...   34 1106 1256]
INFO voc_dataset_evaluator.py: 127: AP for train = 0.7651
INFO voc_eval.py: 171: [422 247 630 274 400  90 553  19 642 527 201  55 366 156 420 742 198 454
  86 338 402 216 106 453 167 618 417 617 395 526 230 495 512 260  33 439
 534  72  38 426 219 681 196 605 236 140 148 332 206 695 306  91 643 759
 441 372 142 149 710 297 649 128 634 427 515 100 471 225 129 329 745 447
 514  52 622  60 296  69 670 694 403 266 723 468 271 353  17 355 565 530
 461 654 105 118 768   6  80 647 252 269 613 639 469 125 598  10 304 359
  70  14 253 153 151 356  42 116  94 525 273 481   5 559 448  20 112 706
  67 692 614 726 620 628 404 721 227 145  37 397 405 278  82 162 406 437
   2 119 714 504 751 316 470 350 450  97 584 385 697 396 775 592  81 631
 585 279 724 369 289  59 651 432 138 254 111 490 181 258 566 624 440 638
 734 551 754 115 659 528 327 321 110 735  77 762 489 563 760 557 378 772
 177 731  66 595 476 374 568 383 169 284 672 275 362 135 413 295  87 209
 666 652 547 730 733 518 161 340  75 498 443 164 635 186 451 193 370 535
 633 650 589 436 776 574 599 675  58  31 520 542 334  74   3 738 310 276
 677 739 280 202 434 387 302 398 150 342 215 377 192 444 569 727 299 336
 171 390 479 233 379 686 114 657 491 286 312 750  83  98 578   9 126  79
 683 708 705 644 375  21 493 371 516 174 684 513 472 757 554  62 168  32
 521 130 315 172 103 602 176 483 449 170 747 702  43 660 625 499 251 211
 640 104  45 729 183 358 519 458 238  92 758 539 199 428 207 661 718 132
 324 496 549 546 268 755 524 655 771 777 707 301 343 581 419  93  95 667
 728 154 492 136 485 241  49 303  63 376 267  29 743 764 393  40 412 601
 120  30 382 341   4 317 562  16 392 612 307 460 429 446 187 462 646 165
 637 700 572 749 746 769 587 508 548 591  88 318 596 529 204 629 146 452
 688 229 658 590 480 309 101 533 391 237 543 195 442 360 411 330 354 182
 287 725 699 173 653 107   7 133 567 203 748 386 282  76 102 673 561 690
 545 373 615 408 367 121 218 433 663  36 423 288 503 214 333 212 117 744
 189 717 541 127 322  48 687 509 482 570 308 141 645 763 761 703 621  51
 698 608 281 424 407 389 484 337  85 365  46 339  57 701 344 626 648 531
 155 678 234  28 501 457 682 711  25 368 256 380 184 741 641 465 765 194
 709 272 290 715 311 139 588  84 664 732 632 774 143 564 668  39  99 456
 131 147  68  22 270 583 232 242 239 352 773 163 197   8 478 401 676 438
  44 669  73 134 722 610 473 175 137 314 580 550 335  26 243 674 152 326
 205 459 522 320 108 416 544 716 517  96 552 414 538 178 680  18 558 603
 536 319  34 351 180 712 636 756 497  50 255 430 418   0 363  61 263 421
 210 665 109 410 157 474 265 305  56 435 579 466 467 486 160 753 188 455
 488 248 217 122 123 124 388 611 264 158 231 487 607 262 779 511 384 740
 179  13 736  24 616 409 689  53 507 577 532 770 244 494 510  12 346 261
 223 228 323 190 737 606 556 560 291 113 752 609 656 523  65 627 767 246
 696 277 778 200  11 166  89 505 249 586 345 623 704 713 221 347 361 582
 348 431 506 594 220  54 600  47 464 313 719 208 292 576 250 399  15 285
 575 293 425 185 693  78 502 328 671 357  27  71 298 445 144 571 619 364
 555 240 259  41 349 679  35 685 191 662 235 475 325 597 245 593  64 331
 500 537 222 257 477 394 604  23 381 159 691 224   1 463 766 573 300 415
 283 720 226 540 213 294]
INFO voc_dataset_evaluator.py: 127: AP for tvmonitor = 0.7244
INFO voc_dataset_evaluator.py: 130: Mean AP = 0.7390
INFO voc_dataset_evaluator.py: 131: ~~~~~~~~
INFO voc_dataset_evaluator.py: 132: Results:
INFO voc_dataset_evaluator.py: 134: 0.773
INFO voc_dataset_evaluator.py: 134: 0.791
INFO voc_dataset_evaluator.py: 134: 0.793
INFO voc_dataset_evaluator.py: 134: 0.626
INFO voc_dataset_evaluator.py: 134: 0.677
INFO voc_dataset_evaluator.py: 134: 0.792
INFO voc_dataset_evaluator.py: 134: 0.859
INFO voc_dataset_evaluator.py: 134: 0.856
INFO voc_dataset_evaluator.py: 134: 0.619
INFO voc_dataset_evaluator.py: 134: 0.773
INFO voc_dataset_evaluator.py: 134: 0.605
INFO voc_dataset_evaluator.py: 134: 0.819
INFO voc_dataset_evaluator.py: 134: 0.830
INFO voc_dataset_evaluator.py: 134: 0.727
INFO voc_dataset_evaluator.py: 134: 0.838
INFO voc_dataset_evaluator.py: 134: 0.459
INFO voc_dataset_evaluator.py: 134: 0.756
INFO voc_dataset_evaluator.py: 134: 0.697
INFO voc_dataset_evaluator.py: 134: 0.765
INFO voc_dataset_evaluator.py: 134: 0.724
INFO voc_dataset_evaluator.py: 135: 0.739
INFO voc_dataset_evaluator.py: 136: ~~~~~~~~
INFO voc_dataset_evaluator.py: 137: 
INFO voc_dataset_evaluator.py: 138: ----------------------------------------------------------
INFO voc_dataset_evaluator.py: 139: Results computed with the **unofficial** Python eval code.
INFO voc_dataset_evaluator.py: 140: Results should be very close to the official MATLAB code.
INFO voc_dataset_evaluator.py: 141: Use `./tools/reval.py --matlab ...` for your paper.
INFO voc_dataset_evaluator.py: 142: -- Thanks, The Management
INFO voc_dataset_evaluator.py: 143: ----------------------------------------------------------
INFO task_evaluation.py:  63: Evaluating bounding boxes is done!
INFO task_evaluation.py: 189: copypaste: Dataset: voc_2007_test
INFO task_evaluation.py: 191: copypaste: Task: box
INFO task_evaluation.py: 194: copypaste: AP,AP50,AP75,APs,APm,APl
INFO task_evaluation.py: 195: copypaste: -1.0000,-1.0000,-1.0000,-1.0000,-1.0000,-1.0000
Start testing on iteration 2999
INFO test_net.py:  72: Called with args:
INFO test_net.py:  73: Namespace(cfg_file='configs/dt/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv.yaml', dataset='voc2007', load_ckpt='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step2999.pth', load_detectron=None, multi_gpu_testing=True, num_classes=None, output_dir=None, range=None, set_cfgs=[], vis=False)
INFO test_net.py:  83: Automatically set output directory to Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test
INFO test_net.py: 130: Testing with config:
INFO test_net.py: 131: {'BBOX_XFORM_CLIP': 4.135166556742356,
 'CROP_RESIZE_WITH_MAX_POOL': True,
 'CUDA': False,
 'DATA_DIR': '/home/ubuntu/Detectron.pytorch/data',
 'DATA_LOADER': {'NUM_THREADS': 4},
 'DEBUG': False,
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXPECTED_RESULTS': [],
 'EXPECTED_RESULTS_ATOL': 0.005,
 'EXPECTED_RESULTS_EMAIL': '',
 'EXPECTED_RESULTS_RTOL': 0.1,
 'FAST_RCNN': {'BOX_OUT_STREAMS': 1,
               'CONV_HEAD_DIM': 256,
               'MLP_HEAD_DIM': 1024,
               'NUM_STACKED_CONVS': 4,
               'ROI_BOX_HEAD': 'fast_rcnn_heads.roi_2mlp_head',
               'ROI_XFORM_METHOD': 'RoIAlign',
               'ROI_XFORM_RESOLUTION': 7,
               'ROI_XFORM_SAMPLING_RATIO': 2},
 'FPN': {'COARSEST_STRIDE': 32,
         'DIM': 256,
         'EXTRA_CONV_LEVELS': False,
         'FPN_ON': True,
         'MULTILEVEL_ROIS': True,
         'MULTILEVEL_RPN': True,
         'ROI_CANONICAL_LEVEL': 4,
         'ROI_CANONICAL_SCALE': 224,
         'ROI_MAX_LEVEL': 5,
         'ROI_MIN_LEVEL': 2,
         'RPN_ANCHOR_START_SIZE': 32,
         'RPN_ASPECT_RATIOS': (0.5, 1, 2),
         'RPN_COLLECT_SCALE': 1,
         'RPN_MAX_LEVEL': 6,
         'RPN_MIN_LEVEL': 2,
         'USE_GN': False,
         'ZERO_INIT_LATERAL': False},
 'GROUP_NORM': {'DIM_PER_GP': -1, 'EPSILON': 1e-05, 'NUM_GROUPS': 32},
 'KRCNN': {'CONV_HEAD_DIM': 256,
           'CONV_HEAD_KERNEL': 3,
           'CONV_INIT': 'GaussianFill',
           'DECONV_DIM': 256,
           'DECONV_KERNEL': 4,
           'DILATION': 1,
           'HEATMAP_SIZE': -1,
           'INFERENCE_MIN_SIZE': 0,
           'KEYPOINT_CONFIDENCE': 'bbox',
           'LOSS_WEIGHT': 1.0,
           'MIN_KEYPOINT_COUNT_FOR_VALID_MINIBATCH': 20,
           'NMS_OKS': False,
           'NORMALIZE_BY_VISIBLE_KEYPOINTS': True,
           'NUM_KEYPOINTS': -1,
           'NUM_STACKED_CONVS': 8,
           'ROI_KEYPOINTS_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'UP_SCALE': -1,
           'USE_DECONV': False,
           'USE_DECONV_OUTPUT': False},
 'MATLAB': 'matlab',
 'MODEL': {'BBOX_REG_WEIGHTS': (10.0, 10.0, 5.0, 5.0),
           'CLS_AGNOSTIC_BBOX_REG': False,
           'CONV_BODY': 'FPN.fpn_ResNet101_conv5_body',
           'FASTER_RCNN': True,
           'KEYPOINTS_ON': False,
           'LOAD_IMAGENET_PRETRAINED_WEIGHTS': True,
           'MASK_ON': False,
           'NUM_CLASSES': 21,
           'RPN_ONLY': False,
           'SHARE_RES5': False,
           'TYPE': 'generalized_rcnn',
           'UNSUPERVISED_POSE': False},
 'MRCNN': {'CLS_SPECIFIC_MASK': True,
           'CONV_INIT': 'GaussianFill',
           'DILATION': 2,
           'DIM_REDUCED': 256,
           'MEMORY_EFFICIENT_LOSS': True,
           'RESOLUTION': 14,
           'ROI_MASK_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'THRESH_BINARIZE': 0.5,
           'UPSAMPLE_RATIO': 1,
           'USE_FC_OUTPUT': False,
           'WEIGHT_LOSS_MASK': 1.0},
 'NUM_GPUS': 8,
 'OUTPUT_DIR': 'Outputs',
 'PIXEL_MEANS': array([[[102.9801, 115.9465, 122.7717]]]),
 'POOLING_MODE': 'crop',
 'POOLING_SIZE': 7,
 'PYTORCH_VERSION_LESS_THAN_040': False,
 'RESNETS': {'FREEZE_AT': 2,
             'IMAGENET_PRETRAINED_WEIGHTS': 'data/pretrained_model/resnet101_caffe.pth',
             'NUM_GROUPS': 1,
             'RES5_DILATION': 1,
             'SHORTCUT_FUNC': 'basic_bn_shortcut',
             'STEM_FUNC': 'basic_bn_stem',
             'STRIDE_1X1': True,
             'TRANS_FUNC': 'bottleneck_transformation',
             'USE_GN': False,
             'WIDTH_PER_GROUP': 64},
 'RETINANET': {'ANCHOR_SCALE': 4,
               'ASPECT_RATIOS': (0.5, 1.0, 2.0),
               'BBOX_REG_BETA': 0.11,
               'BBOX_REG_WEIGHT': 1.0,
               'CLASS_SPECIFIC_BBOX': False,
               'INFERENCE_TH': 0.05,
               'LOSS_ALPHA': 0.25,
               'LOSS_GAMMA': 2.0,
               'NEGATIVE_OVERLAP': 0.4,
               'NUM_CONVS': 4,
               'POSITIVE_OVERLAP': 0.5,
               'PRE_NMS_TOP_N': 1000,
               'PRIOR_PROB': 0.01,
               'RETINANET_ON': False,
               'SCALES_PER_OCTAVE': 3,
               'SHARE_CLS_BBOX_TOWER': False,
               'SOFTMAX': False},
 'RFCN': {'PS_GRID_SIZE': 3},
 'RNG_SEED': 3,
 'ROOT_DIR': '/home/ubuntu/Detectron.pytorch',
 'RPN': {'ASPECT_RATIOS': (0.5, 1, 2),
         'CLS_ACTIVATION': 'sigmoid',
         'OUT_DIM': 512,
         'OUT_DIM_AS_IN_DIM': True,
         'RPN_ON': True,
         'SIZES': (64, 128, 256, 512),
         'STRIDE': 16},
 'SOLVER': {'BASE_LR': 2e-05,
            'BIAS_DOUBLE_LR': True,
            'BIAS_WEIGHT_DECAY': False,
            'GAMMA': 0.1,
            'LOG_LR_CHANGE_THRESHOLD': 1.1,
            'LRS': [],
            'LR_POLICY': 'steps_with_decay',
            'MAX_ITER': 10000,
            'MOMENTUM': 0.9,
            'SCALE_MOMENTUM': True,
            'SCALE_MOMENTUM_THRESHOLD': 1.1,
            'STEPS': [0, 5000, 8000],
            'STEP_SIZE': 30000,
            'TYPE': 'SGD',
            'WARM_UP_FACTOR': 0.3333333333333333,
            'WARM_UP_ITERS': 500,
            'WARM_UP_METHOD': 'linear',
            'WEIGHT_DECAY': 0.0001,
            'WEIGHT_DECAY_GN': 0.0},
 'TEST': {'BBOX_AUG': {'AREA_TH_HI': 32400,
                       'AREA_TH_LO': 2500,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'COORD_HEUR': 'UNION',
                       'ENABLED': False,
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False,
                       'SCORE_HEUR': 'UNION'},
          'BBOX_REG': True,
          'BBOX_VOTE': {'ENABLED': False,
                        'SCORING_METHOD': 'ID',
                        'SCORING_METHOD_BETA': 1.0,
                        'VOTE_TH': 0.8},
          'COMPETITION_MODE': True,
          'DATASETS': ('voc_2007_test',),
          'DETECTIONS_PER_IM': 100,
          'FORCE_JSON_DATASET_EVAL': False,
          'KPS_AUG': {'AREA_TH': 32400,
                      'ASPECT_RATIOS': (),
                      'ASPECT_RATIO_H_FLIP': False,
                      'ENABLED': False,
                      'HEUR': 'HM_AVG',
                      'H_FLIP': False,
                      'MAX_SIZE': 4000,
                      'SCALES': (),
                      'SCALE_H_FLIP': False,
                      'SCALE_SIZE_DEP': False},
          'MASK_AUG': {'AREA_TH': 32400,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'ENABLED': False,
                       'HEUR': 'SOFT_AVG',
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False},
          'MAX_SIZE': 1000,
          'NMS': 0.5,
          'PRECOMPUTED_PROPOSALS': False,
          'PROPOSAL_FILES': (),
          'PROPOSAL_LIMIT': 2000,
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 1000,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALE': 600,
          'SCORE_THRESH': 0.05,
          'SOFT_NMS': {'ENABLED': False, 'METHOD': 'linear', 'SIGMA': 0.5},
          'WEAK_SUPERVISE': False},
 'TRAIN': {'ASPECT_CROPPING': False,
           'ASPECT_GROUPING': True,
           'ASPECT_HI': 2,
           'ASPECT_LO': 0.5,
           'BATCH_SIZE_PER_IM': 512,
           'BBOX_INSIDE_WEIGHTS': (1.0, 1.0, 1.0, 1.0),
           'BBOX_NORMALIZE_MEANS': (0.0, 0.0, 0.0, 0.0),
           'BBOX_NORMALIZE_STDS': (0.1, 0.1, 0.2, 0.2),
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'COPY_CLS_TO_DET': False,
           'CROWD_FILTER_THRESH': 0.7,
           'DATASETS': (),
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'FREEZE_BOX_HEAD': True,
           'FREEZE_CONV_BODY': False,
           'FREEZE_RPN': False,
           'GT_MIN_AREA': -1,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_FILES': (),
           'RPN_BATCH_SIZE_PER_IM': 256,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 2000,
           'RPN_STRADDLE_THRESH': 0,
           'SCALES': (600,),
           'SNAPSHOT_ITERS': 2000,
           'SPATIAL_REG': False,
           'USE_FLIPPED': True,
           'WEAK_SUPERVISE': True,
           'WEAK_SUPERVISE_WITH_PRETRAIN': True},
 'VIS': False,
 'VIS_TH': 0.9}
loading annotations into memory...
Done (t=0.09s)
creating index...
index created!
INFO subprocess.py:  59: 0,1,2,3
INFO subprocess.py:  67: gpu_inds: [0, 1, 2, 3]
INFO subprocess.py:  89: detection range command 0: python /home/ubuntu/Detectron.pytorch/tools/test_net.py --range 0 1238 --cfg Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_config.yaml --set TEST.DATASETS '("voc_2007_test",)' --output_dir Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test --load_ckpt Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step2999.pth
INFO subprocess.py:  89: detection range command 1: python /home/ubuntu/Detectron.pytorch/tools/test_net.py --range 1238 2476 --cfg Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_config.yaml --set TEST.DATASETS '("voc_2007_test",)' --output_dir Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test --load_ckpt Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step2999.pth
INFO subprocess.py:  89: detection range command 2: python /home/ubuntu/Detectron.pytorch/tools/test_net.py --range 2476 3714 --cfg Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_config.yaml --set TEST.DATASETS '("voc_2007_test",)' --output_dir Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test --load_ckpt Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step2999.pth
INFO subprocess.py:  89: detection range command 3: python /home/ubuntu/Detectron.pytorch/tools/test_net.py --range 3714 4952 --cfg Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_config.yaml --set TEST.DATASETS '("voc_2007_test",)' --output_dir Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test --load_ckpt Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step2999.pth
INFO subprocess.py: 129: # ---------------------------------------------------------------------------- #
INFO subprocess.py: 131: stdout of subprocess 0 with range [1, 1238]
INFO subprocess.py: 133: # ---------------------------------------------------------------------------- #
INFO test_net.py:  72: Called with args:
INFO test_net.py:  73: Namespace(cfg_file='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_config.yaml', dataset=None, load_ckpt='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step2999.pth', load_detectron=None, multi_gpu_testing=False, num_classes=None, output_dir='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test', range=[0, 1238], set_cfgs=['TEST.DATASETS', '("voc_2007_test",)'], vis=False)
INFO test_net.py: 130: Testing with config:
INFO test_net.py: 131: {'BBOX_XFORM_CLIP': 4.135166556742356,
 'CROP_RESIZE_WITH_MAX_POOL': True,
 'CUDA': False,
 'DATA_DIR': '/home/ubuntu/Detectron.pytorch/data',
 'DATA_LOADER': {'NUM_THREADS': 4},
 'DEBUG': False,
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXPECTED_RESULTS': [],
 'EXPECTED_RESULTS_ATOL': 0.005,
 'EXPECTED_RESULTS_EMAIL': '',
 'EXPECTED_RESULTS_RTOL': 0.1,
 'FAST_RCNN': {'BOX_OUT_STREAMS': 1,
               'CONV_HEAD_DIM': 256,
               'MLP_HEAD_DIM': 1024,
               'NUM_STACKED_CONVS': 4,
               'ROI_BOX_HEAD': 'fast_rcnn_heads.roi_2mlp_head',
               'ROI_XFORM_METHOD': 'RoIAlign',
               'ROI_XFORM_RESOLUTION': 7,
               'ROI_XFORM_SAMPLING_RATIO': 2},
 'FPN': {'COARSEST_STRIDE': 32,
         'DIM': 256,
         'EXTRA_CONV_LEVELS': False,
         'FPN_ON': True,
         'MULTILEVEL_ROIS': True,
         'MULTILEVEL_RPN': True,
         'ROI_CANONICAL_LEVEL': 4,
         'ROI_CANONICAL_SCALE': 224,
         'ROI_MAX_LEVEL': 5,
         'ROI_MIN_LEVEL': 2,
         'RPN_ANCHOR_START_SIZE': 32,
         'RPN_ASPECT_RATIOS': (0.5, 1, 2),
         'RPN_COLLECT_SCALE': 1,
         'RPN_MAX_LEVEL': 6,
         'RPN_MIN_LEVEL': 2,
         'USE_GN': False,
         'ZERO_INIT_LATERAL': False},
 'GROUP_NORM': {'DIM_PER_GP': -1, 'EPSILON': 1e-05, 'NUM_GROUPS': 32},
 'KRCNN': {'CONV_HEAD_DIM': 256,
           'CONV_HEAD_KERNEL': 3,
           'CONV_INIT': 'GaussianFill',
           'DECONV_DIM': 256,
           'DECONV_KERNEL': 4,
           'DILATION': 1,
           'HEATMAP_SIZE': -1,
           'INFERENCE_MIN_SIZE': 0,
           'KEYPOINT_CONFIDENCE': 'bbox',
           'LOSS_WEIGHT': 1.0,
           'MIN_KEYPOINT_COUNT_FOR_VALID_MINIBATCH': 20,
           'NMS_OKS': False,
           'NORMALIZE_BY_VISIBLE_KEYPOINTS': True,
           'NUM_KEYPOINTS': -1,
           'NUM_STACKED_CONVS': 8,
           'ROI_KEYPOINTS_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'UP_SCALE': -1,
           'USE_DECONV': False,
           'USE_DECONV_OUTPUT': False},
 'MATLAB': 'matlab',
 'MODEL': {'BBOX_REG_WEIGHTS': (10.0, 10.0, 5.0, 5.0),
           'CLS_AGNOSTIC_BBOX_REG': False,
           'CONV_BODY': 'FPN.fpn_ResNet101_conv5_body',
           'FASTER_RCNN': True,
           'KEYPOINTS_ON': False,
           'LOAD_IMAGENET_PRETRAINED_WEIGHTS': True,
           'MASK_ON': False,
           'NUM_CLASSES': 21,
           'RPN_ONLY': False,
           'SHARE_RES5': False,
           'TYPE': 'generalized_rcnn',
           'UNSUPERVISED_POSE': False},
 'MRCNN': {'CLS_SPECIFIC_MASK': True,
           'CONV_INIT': 'GaussianFill',
           'DILATION': 2,
           'DIM_REDUCED': 256,
           'MEMORY_EFFICIENT_LOSS': True,
           'RESOLUTION': 14,
           'ROI_MASK_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'THRESH_BINARIZE': 0.5,
           'UPSAMPLE_RATIO': 1,
           'USE_FC_OUTPUT': False,
           'WEIGHT_LOSS_MASK': 1.0},
 'NUM_GPUS': 8,
 'OUTPUT_DIR': 'Outputs',
 'PIXEL_MEANS': array([[[102.9801, 115.9465, 122.7717]]]),
 'POOLING_MODE': 'crop',
 'POOLING_SIZE': 7,
 'PYTORCH_VERSION_LESS_THAN_040': False,
 'RESNETS': {'FREEZE_AT': 2,
             'IMAGENET_PRETRAINED_WEIGHTS': 'data/pretrained_model/resnet101_caffe.pth',
             'NUM_GROUPS': 1,
             'RES5_DILATION': 1,
             'SHORTCUT_FUNC': 'basic_bn_shortcut',
             'STEM_FUNC': 'basic_bn_stem',
             'STRIDE_1X1': True,
             'TRANS_FUNC': 'bottleneck_transformation',
             'USE_GN': False,
             'WIDTH_PER_GROUP': 64},
 'RETINANET': {'ANCHOR_SCALE': 4,
               'ASPECT_RATIOS': (0.5, 1.0, 2.0),
               'BBOX_REG_BETA': 0.11,
               'BBOX_REG_WEIGHT': 1.0,
               'CLASS_SPECIFIC_BBOX': False,
               'INFERENCE_TH': 0.05,
               'LOSS_ALPHA': 0.25,
               'LOSS_GAMMA': 2.0,
               'NEGATIVE_OVERLAP': 0.4,
               'NUM_CONVS': 4,
               'POSITIVE_OVERLAP': 0.5,
               'PRE_NMS_TOP_N': 1000,
               'PRIOR_PROB': 0.01,
               'RETINANET_ON': False,
               'SCALES_PER_OCTAVE': 3,
               'SHARE_CLS_BBOX_TOWER': False,
               'SOFTMAX': False},
 'RFCN': {'PS_GRID_SIZE': 3},
 'RNG_SEED': 3,
 'ROOT_DIR': '/home/ubuntu/Detectron.pytorch',
 'RPN': {'ASPECT_RATIOS': (0.5, 1, 2),
         'CLS_ACTIVATION': 'sigmoid',
         'OUT_DIM': 512,
         'OUT_DIM_AS_IN_DIM': True,
         'RPN_ON': True,
         'SIZES': (64, 128, 256, 512),
         'STRIDE': 16},
 'SOLVER': {'BASE_LR': 2e-05,
            'BIAS_DOUBLE_LR': True,
            'BIAS_WEIGHT_DECAY': False,
            'GAMMA': 0.1,
            'LOG_LR_CHANGE_THRESHOLD': 1.1,
            'LRS': [],
            'LR_POLICY': 'steps_with_decay',
            'MAX_ITER': 10000,
            'MOMENTUM': 0.9,
            'SCALE_MOMENTUM': True,
            'SCALE_MOMENTUM_THRESHOLD': 1.1,
            'STEPS': [0, 5000, 8000],
            'STEP_SIZE': 30000,
            'TYPE': 'SGD',
            'WARM_UP_FACTOR': 0.3333333333333333,
            'WARM_UP_ITERS': 500,
            'WARM_UP_METHOD': 'linear',
            'WEIGHT_DECAY': 0.0001,
            'WEIGHT_DECAY_GN': 0.0},
 'TEST': {'BBOX_AUG': {'AREA_TH_HI': 32400,
                       'AREA_TH_LO': 2500,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'COORD_HEUR': 'UNION',
                       'ENABLED': False,
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False,
                       'SCORE_HEUR': 'UNION'},
          'BBOX_REG': True,
          'BBOX_VOTE': {'ENABLED': False,
                        'SCORING_METHOD': 'ID',
                        'SCORING_METHOD_BETA': 1.0,
                        'VOTE_TH': 0.8},
          'COMPETITION_MODE': True,
          'DATASETS': ('voc_2007_test',),
          'DETECTIONS_PER_IM': 100,
          'FORCE_JSON_DATASET_EVAL': False,
          'KPS_AUG': {'AREA_TH': 32400,
                      'ASPECT_RATIOS': (),
                      'ASPECT_RATIO_H_FLIP': False,
                      'ENABLED': False,
                      'HEUR': 'HM_AVG',
                      'H_FLIP': False,
                      'MAX_SIZE': 4000,
                      'SCALES': (),
                      'SCALE_H_FLIP': False,
                      'SCALE_SIZE_DEP': False},
          'MASK_AUG': {'AREA_TH': 32400,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'ENABLED': False,
                       'HEUR': 'SOFT_AVG',
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False},
          'MAX_SIZE': 1000,
          'NMS': 0.5,
          'PRECOMPUTED_PROPOSALS': False,
          'PROPOSAL_FILES': (),
          'PROPOSAL_LIMIT': 2000,
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 1000,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALE': 600,
          'SCORE_THRESH': 0.05,
          'SOFT_NMS': {'ENABLED': False, 'METHOD': 'linear', 'SIGMA': 0.5},
          'WEAK_SUPERVISE': False},
 'TRAIN': {'ASPECT_CROPPING': False,
           'ASPECT_GROUPING': True,
           'ASPECT_HI': 2,
           'ASPECT_LO': 0.5,
           'BATCH_SIZE_PER_IM': 512,
           'BBOX_INSIDE_WEIGHTS': (1.0, 1.0, 1.0, 1.0),
           'BBOX_NORMALIZE_MEANS': (0.0, 0.0, 0.0, 0.0),
           'BBOX_NORMALIZE_STDS': (0.1, 0.1, 0.2, 0.2),
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'COPY_CLS_TO_DET': False,
           'CROWD_FILTER_THRESH': 0.7,
           'DATASETS': (),
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'FREEZE_BOX_HEAD': True,
           'FREEZE_CONV_BODY': False,
           'FREEZE_RPN': False,
           'GT_MIN_AREA': -1,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_FILES': (),
           'RPN_BATCH_SIZE_PER_IM': 256,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 2000,
           'RPN_STRADDLE_THRESH': 0,
           'SCALES': (600,),
           'SNAPSHOT_ITERS': 2000,
           'SPATIAL_REG': False,
           'USE_FLIPPED': True,
           'WEAK_SUPERVISE': True,
           'WEAK_SUPERVISE_WITH_PRETRAIN': True},
 'VIS': False,
 'VIS_TH': 0.9}
loading annotations into memory...
Done (t=0.08s)
creating index...
index created!
INFO test_engine.py: 324: training mode? : False
INFO test_engine.py: 331: loading checkpoint Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step2999.pth
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1/1238 0.712s + 0.002s (eta: 0:14:42)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 11/1238 0.504s + 0.001s (eta: 0:10:20)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 21/1238 0.507s + 0.002s (eta: 0:10:19)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 31/1238 0.488s + 0.002s (eta: 0:09:50)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 41/1238 0.498s + 0.002s (eta: 0:09:58)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 51/1238 0.500s + 0.002s (eta: 0:09:56)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 61/1238 0.499s + 0.002s (eta: 0:09:49)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 71/1238 0.496s + 0.002s (eta: 0:09:40)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 81/1238 0.500s + 0.002s (eta: 0:09:40)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 91/1238 0.505s + 0.002s (eta: 0:09:41)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 101/1238 0.502s + 0.002s (eta: 0:09:33)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 111/1238 0.500s + 0.002s (eta: 0:09:25)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 121/1238 0.503s + 0.002s (eta: 0:09:24)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 131/1238 0.505s + 0.002s (eta: 0:09:20)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 141/1238 0.504s + 0.002s (eta: 0:09:15)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 151/1238 0.502s + 0.002s (eta: 0:09:07)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 161/1238 0.503s + 0.002s (eta: 0:09:03)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 171/1238 0.503s + 0.002s (eta: 0:08:58)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 181/1238 0.506s + 0.002s (eta: 0:08:57)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 191/1238 0.508s + 0.002s (eta: 0:08:53)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 201/1238 0.507s + 0.002s (eta: 0:08:48)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 211/1238 0.508s + 0.002s (eta: 0:08:43)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 221/1238 0.505s + 0.002s (eta: 0:08:34)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 231/1238 0.503s + 0.002s (eta: 0:08:28)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 241/1238 0.503s + 0.002s (eta: 0:08:22)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 251/1238 0.502s + 0.002s (eta: 0:08:17)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 261/1238 0.501s + 0.002s (eta: 0:08:11)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 271/1238 0.501s + 0.002s (eta: 0:08:06)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 281/1238 0.502s + 0.002s (eta: 0:08:01)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 291/1238 0.502s + 0.002s (eta: 0:07:57)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 301/1238 0.501s + 0.002s (eta: 0:07:51)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 311/1238 0.501s + 0.002s (eta: 0:07:46)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 321/1238 0.499s + 0.002s (eta: 0:07:39)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 331/1238 0.499s + 0.002s (eta: 0:07:34)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 341/1238 0.499s + 0.002s (eta: 0:07:29)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 351/1238 0.498s + 0.002s (eta: 0:07:23)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 361/1238 0.498s + 0.002s (eta: 0:07:18)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 371/1238 0.497s + 0.002s (eta: 0:07:12)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 381/1238 0.496s + 0.002s (eta: 0:07:06)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 391/1238 0.496s + 0.002s (eta: 0:07:01)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 401/1238 0.495s + 0.002s (eta: 0:06:56)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 411/1238 0.496s + 0.002s (eta: 0:06:51)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 421/1238 0.495s + 0.002s (eta: 0:06:46)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 431/1238 0.494s + 0.002s (eta: 0:06:40)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 441/1238 0.491s + 0.002s (eta: 0:06:33)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 451/1238 0.489s + 0.002s (eta: 0:06:26)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 461/1238 0.487s + 0.002s (eta: 0:06:19)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 471/1238 0.485s + 0.002s (eta: 0:06:13)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 481/1238 0.483s + 0.002s (eta: 0:06:07)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 491/1238 0.482s + 0.002s (eta: 0:06:01)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 501/1238 0.483s + 0.002s (eta: 0:05:57)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 511/1238 0.484s + 0.002s (eta: 0:05:53)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 521/1238 0.484s + 0.002s (eta: 0:05:48)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 531/1238 0.484s + 0.002s (eta: 0:05:43)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 541/1238 0.484s + 0.002s (eta: 0:05:39)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 551/1238 0.485s + 0.002s (eta: 0:05:34)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 561/1238 0.485s + 0.002s (eta: 0:05:29)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 571/1238 0.485s + 0.002s (eta: 0:05:24)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 581/1238 0.485s + 0.002s (eta: 0:05:19)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 591/1238 0.485s + 0.002s (eta: 0:05:15)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 601/1238 0.486s + 0.002s (eta: 0:05:10)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 611/1238 0.486s + 0.002s (eta: 0:05:05)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 621/1238 0.486s + 0.002s (eta: 0:05:01)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 631/1238 0.486s + 0.002s (eta: 0:04:56)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 641/1238 0.486s + 0.002s (eta: 0:04:51)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 651/1238 0.486s + 0.002s (eta: 0:04:46)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 661/1238 0.487s + 0.002s (eta: 0:04:41)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 671/1238 0.486s + 0.002s (eta: 0:04:36)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 681/1238 0.487s + 0.002s (eta: 0:04:32)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 691/1238 0.488s + 0.002s (eta: 0:04:27)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 701/1238 0.488s + 0.002s (eta: 0:04:23)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 711/1238 0.487s + 0.002s (eta: 0:04:17)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 721/1238 0.487s + 0.002s (eta: 0:04:12)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 731/1238 0.486s + 0.002s (eta: 0:04:07)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 741/1238 0.487s + 0.002s (eta: 0:04:02)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 751/1238 0.486s + 0.002s (eta: 0:03:57)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 761/1238 0.487s + 0.002s (eta: 0:03:53)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 771/1238 0.487s + 0.002s (eta: 0:03:48)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 781/1238 0.487s + 0.002s (eta: 0:03:43)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 791/1238 0.488s + 0.002s (eta: 0:03:38)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 801/1238 0.487s + 0.002s (eta: 0:03:33)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 811/1238 0.487s + 0.002s (eta: 0:03:28)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 821/1238 0.487s + 0.002s (eta: 0:03:23)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 831/1238 0.487s + 0.002s (eta: 0:03:18)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 841/1238 0.487s + 0.002s (eta: 0:03:14)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 851/1238 0.487s + 0.002s (eta: 0:03:09)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 861/1238 0.487s + 0.002s (eta: 0:03:04)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 871/1238 0.487s + 0.002s (eta: 0:02:59)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 881/1238 0.487s + 0.002s (eta: 0:02:54)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 891/1238 0.487s + 0.002s (eta: 0:02:49)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 901/1238 0.487s + 0.002s (eta: 0:02:44)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 911/1238 0.486s + 0.002s (eta: 0:02:39)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 921/1238 0.486s + 0.002s (eta: 0:02:34)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 931/1238 0.486s + 0.002s (eta: 0:02:29)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 941/1238 0.486s + 0.002s (eta: 0:02:24)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 951/1238 0.486s + 0.002s (eta: 0:02:20)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 961/1238 0.486s + 0.002s (eta: 0:02:15)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 971/1238 0.486s + 0.002s (eta: 0:02:10)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 981/1238 0.487s + 0.002s (eta: 0:02:05)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 991/1238 0.487s + 0.002s (eta: 0:02:00)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1001/1238 0.487s + 0.002s (eta: 0:01:55)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1011/1238 0.487s + 0.002s (eta: 0:01:51)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1021/1238 0.487s + 0.002s (eta: 0:01:46)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1031/1238 0.487s + 0.002s (eta: 0:01:41)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1041/1238 0.487s + 0.002s (eta: 0:01:36)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1051/1238 0.487s + 0.002s (eta: 0:01:31)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1061/1238 0.487s + 0.002s (eta: 0:01:26)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1071/1238 0.487s + 0.002s (eta: 0:01:21)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1081/1238 0.487s + 0.002s (eta: 0:01:16)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1091/1238 0.487s + 0.002s (eta: 0:01:11)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1101/1238 0.487s + 0.002s (eta: 0:01:06)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1111/1238 0.487s + 0.002s (eta: 0:01:02)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1121/1238 0.487s + 0.002s (eta: 0:00:57)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1131/1238 0.488s + 0.002s (eta: 0:00:52)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1141/1238 0.487s + 0.002s (eta: 0:00:47)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1151/1238 0.488s + 0.002s (eta: 0:00:42)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1161/1238 0.487s + 0.002s (eta: 0:00:37)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1171/1238 0.488s + 0.002s (eta: 0:00:32)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1181/1238 0.488s + 0.002s (eta: 0:00:27)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1191/1238 0.487s + 0.002s (eta: 0:00:22)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1201/1238 0.487s + 0.002s (eta: 0:00:18)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1211/1238 0.487s + 0.002s (eta: 0:00:13)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1221/1238 0.487s + 0.002s (eta: 0:00:08)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1231/1238 0.486s + 0.002s (eta: 0:00:03)
INFO test_engine.py: 314: Wrote detections to: /home/ubuntu/Detectron.pytorch/Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_0_1238.pkl
/home/ubuntu/anaconda3/envs/pytorch41/lib/python3.7/site-packages/torch/nn/functional.py:1890: UserWarning: nn.functional.upsample is deprecated. Use nn.functional.interpolate instead.
  warnings.warn("nn.functional.upsample is deprecated. Use nn.functional.interpolate instead.")
INFO subprocess.py: 129: # ---------------------------------------------------------------------------- #
INFO subprocess.py: 131: stdout of subprocess 1 with range [1239, 2476]
INFO subprocess.py: 133: # ---------------------------------------------------------------------------- #
INFO test_net.py:  72: Called with args:
INFO test_net.py:  73: Namespace(cfg_file='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_config.yaml', dataset=None, load_ckpt='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step2499.pth', load_detectron=None, multi_gpu_testing=False, num_classes=None, output_dir='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test', range=[1238, 2476], set_cfgs=['TEST.DATASETS', '("voc_2007_test",)'], vis=False)
INFO test_net.py: 130: Testing with config:
INFO test_net.py: 131: {'BBOX_XFORM_CLIP': 4.135166556742356,
 'CROP_RESIZE_WITH_MAX_POOL': True,
 'CUDA': False,
 'DATA_DIR': '/home/ubuntu/Detectron.pytorch/data',
 'DATA_LOADER': {'NUM_THREADS': 4},
 'DEBUG': False,
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXPECTED_RESULTS': [],
 'EXPECTED_RESULTS_ATOL': 0.005,
 'EXPECTED_RESULTS_EMAIL': '',
 'EXPECTED_RESULTS_RTOL': 0.1,
 'FAST_RCNN': {'BOX_OUT_STREAMS': 1,
               'CONV_HEAD_DIM': 256,
               'MLP_HEAD_DIM': 1024,
               'NUM_STACKED_CONVS': 4,
               'ROI_BOX_HEAD': 'fast_rcnn_heads.roi_2mlp_head',
               'ROI_XFORM_METHOD': 'RoIAlign',
               'ROI_XFORM_RESOLUTION': 7,
               'ROI_XFORM_SAMPLING_RATIO': 2},
 'FPN': {'COARSEST_STRIDE': 32,
         'DIM': 256,
         'EXTRA_CONV_LEVELS': False,
         'FPN_ON': True,
         'MULTILEVEL_ROIS': True,
         'MULTILEVEL_RPN': True,
         'ROI_CANONICAL_LEVEL': 4,
         'ROI_CANONICAL_SCALE': 224,
         'ROI_MAX_LEVEL': 5,
         'ROI_MIN_LEVEL': 2,
         'RPN_ANCHOR_START_SIZE': 32,
         'RPN_ASPECT_RATIOS': (0.5, 1, 2),
         'RPN_COLLECT_SCALE': 1,
         'RPN_MAX_LEVEL': 6,
         'RPN_MIN_LEVEL': 2,
         'USE_GN': False,
         'ZERO_INIT_LATERAL': False},
 'GROUP_NORM': {'DIM_PER_GP': -1, 'EPSILON': 1e-05, 'NUM_GROUPS': 32},
 'KRCNN': {'CONV_HEAD_DIM': 256,
           'CONV_HEAD_KERNEL': 3,
           'CONV_INIT': 'GaussianFill',
           'DECONV_DIM': 256,
           'DECONV_KERNEL': 4,
           'DILATION': 1,
           'HEATMAP_SIZE': -1,
           'INFERENCE_MIN_SIZE': 0,
           'KEYPOINT_CONFIDENCE': 'bbox',
           'LOSS_WEIGHT': 1.0,
           'MIN_KEYPOINT_COUNT_FOR_VALID_MINIBATCH': 20,
           'NMS_OKS': False,
           'NORMALIZE_BY_VISIBLE_KEYPOINTS': True,
           'NUM_KEYPOINTS': -1,
           'NUM_STACKED_CONVS': 8,
           'ROI_KEYPOINTS_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'UP_SCALE': -1,
           'USE_DECONV': False,
           'USE_DECONV_OUTPUT': False},
 'MATLAB': 'matlab',
 'MODEL': {'BBOX_REG_WEIGHTS': (10.0, 10.0, 5.0, 5.0),
           'CLS_AGNOSTIC_BBOX_REG': False,
           'CONV_BODY': 'FPN.fpn_ResNet101_conv5_body',
           'FASTER_RCNN': True,
           'KEYPOINTS_ON': False,
           'LOAD_IMAGENET_PRETRAINED_WEIGHTS': True,
           'MASK_ON': False,
           'NUM_CLASSES': 21,
           'RPN_ONLY': False,
           'SHARE_RES5': False,
           'TYPE': 'generalized_rcnn',
           'UNSUPERVISED_POSE': False},
 'MRCNN': {'CLS_SPECIFIC_MASK': True,
           'CONV_INIT': 'GaussianFill',
           'DILATION': 2,
           'DIM_REDUCED': 256,
           'MEMORY_EFFICIENT_LOSS': True,
           'RESOLUTION': 14,
           'ROI_MASK_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'THRESH_BINARIZE': 0.5,
           'UPSAMPLE_RATIO': 1,
           'USE_FC_OUTPUT': False,
           'WEIGHT_LOSS_MASK': 1.0},
 'NUM_GPUS': 8,
 'OUTPUT_DIR': 'Outputs',
 'PIXEL_MEANS': array([[[102.9801, 115.9465, 122.7717]]]),
 'POOLING_MODE': 'crop',
 'POOLING_SIZE': 7,
 'PYTORCH_VERSION_LESS_THAN_040': False,
 'RESNETS': {'FREEZE_AT': 2,
             'IMAGENET_PRETRAINED_WEIGHTS': 'data/pretrained_model/resnet101_caffe.pth',
             'NUM_GROUPS': 1,
             'RES5_DILATION': 1,
             'SHORTCUT_FUNC': 'basic_bn_shortcut',
             'STEM_FUNC': 'basic_bn_stem',
             'STRIDE_1X1': True,
             'TRANS_FUNC': 'bottleneck_transformation',
             'USE_GN': False,
             'WIDTH_PER_GROUP': 64},
 'RETINANET': {'ANCHOR_SCALE': 4,
               'ASPECT_RATIOS': (0.5, 1.0, 2.0),
               'BBOX_REG_BETA': 0.11,
               'BBOX_REG_WEIGHT': 1.0,
               'CLASS_SPECIFIC_BBOX': False,
               'INFERENCE_TH': 0.05,
               'LOSS_ALPHA': 0.25,
               'LOSS_GAMMA': 2.0,
               'NEGATIVE_OVERLAP': 0.4,
               'NUM_CONVS': 4,
               'POSITIVE_OVERLAP': 0.5,
               'PRE_NMS_TOP_N': 1000,
               'PRIOR_PROB': 0.01,
               'RETINANET_ON': False,
               'SCALES_PER_OCTAVE': 3,
               'SHARE_CLS_BBOX_TOWER': False,
               'SOFTMAX': False},
 'RFCN': {'PS_GRID_SIZE': 3},
 'RNG_SEED': 3,
 'ROOT_DIR': '/home/ubuntu/Detectron.pytorch',
 'RPN': {'ASPECT_RATIOS': (0.5, 1, 2),
         'CLS_ACTIVATION': 'sigmoid',
         'OUT_DIM': 512,
         'OUT_DIM_AS_IN_DIM': True,
         'RPN_ON': True,
         'SIZES': (64, 128, 256, 512),
         'STRIDE': 16},
 'SOLVER': {'BASE_LR': 2e-05,
            'BIAS_DOUBLE_LR': True,
            'BIAS_WEIGHT_DECAY': False,
            'GAMMA': 0.1,
            'LOG_LR_CHANGE_THRESHOLD': 1.1,
            'LRS': [],
            'LR_POLICY': 'steps_with_decay',
            'MAX_ITER': 10000,
            'MOMENTUM': 0.9,
            'SCALE_MOMENTUM': True,
            'SCALE_MOMENTUM_THRESHOLD': 1.1,
            'STEPS': [0, 5000, 8000],
            'STEP_SIZE': 30000,
            'TYPE': 'SGD',
            'WARM_UP_FACTOR': 0.3333333333333333,
            'WARM_UP_ITERS': 500,
            'WARM_UP_METHOD': 'linear',
            'WEIGHT_DECAY': 0.0001,
            'WEIGHT_DECAY_GN': 0.0},
 'TEST': {'BBOX_AUG': {'AREA_TH_HI': 32400,
                       'AREA_TH_LO': 2500,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'COORD_HEUR': 'UNION',
                       'ENABLED': False,
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False,
                       'SCORE_HEUR': 'UNION'},
          'BBOX_REG': True,
          'BBOX_VOTE': {'ENABLED': False,
                        'SCORING_METHOD': 'ID',
                        'SCORING_METHOD_BETA': 1.0,
                        'VOTE_TH': 0.8},
          'COMPETITION_MODE': True,
          'DATASETS': ('voc_2007_test',),
          'DETECTIONS_PER_IM': 100,
          'FORCE_JSON_DATASET_EVAL': False,
          'KPS_AUG': {'AREA_TH': 32400,
                      'ASPECT_RATIOS': (),
                      'ASPECT_RATIO_H_FLIP': False,
                      'ENABLED': False,
                      'HEUR': 'HM_AVG',
                      'H_FLIP': False,
                      'MAX_SIZE': 4000,
                      'SCALES': (),
                      'SCALE_H_FLIP': False,
                      'SCALE_SIZE_DEP': False},
          'MASK_AUG': {'AREA_TH': 32400,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'ENABLED': False,
                       'HEUR': 'SOFT_AVG',
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False},
          'MAX_SIZE': 1000,
          'NMS': 0.5,
          'PRECOMPUTED_PROPOSALS': False,
          'PROPOSAL_FILES': (),
          'PROPOSAL_LIMIT': 2000,
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 1000,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALE': 600,
          'SCORE_THRESH': 0.05,
          'SOFT_NMS': {'ENABLED': False, 'METHOD': 'linear', 'SIGMA': 0.5},
          'WEAK_SUPERVISE': False},
 'TRAIN': {'ASPECT_CROPPING': False,
           'ASPECT_GROUPING': True,
           'ASPECT_HI': 2,
           'ASPECT_LO': 0.5,
           'BATCH_SIZE_PER_IM': 512,
           'BBOX_INSIDE_WEIGHTS': (1.0, 1.0, 1.0, 1.0),
           'BBOX_NORMALIZE_MEANS': (0.0, 0.0, 0.0, 0.0),
           'BBOX_NORMALIZE_STDS': (0.1, 0.1, 0.2, 0.2),
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'COPY_CLS_TO_DET': False,
           'CROWD_FILTER_THRESH': 0.7,
           'DATASETS': (),
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'FREEZE_BOX_HEAD': True,
           'FREEZE_CONV_BODY': False,
           'FREEZE_RPN': False,
           'GT_MIN_AREA': -1,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_FILES': (),
           'RPN_BATCH_SIZE_PER_IM': 256,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 2000,
           'RPN_STRADDLE_THRESH': 0,
           'SCALES': (600,),
           'SNAPSHOT_ITERS': 2000,
           'SPATIAL_REG': False,
           'USE_FLIPPED': True,
           'WEAK_SUPERVISE': True,
           'WEAK_SUPERVISE_WITH_PRETRAIN': True},
 'VIS': False,
 'VIS_TH': 0.9}
loading annotations into memory...
Done (t=0.15s)
creating index...
index created!
INFO test_engine.py: 324: training mode? : False
INFO test_engine.py: 331: loading checkpoint Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step2499.pth
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1239/2476 0.657s + 0.001s (eta: 0:13:34)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1249/2476 0.478s + 0.002s (eta: 0:09:48)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1259/2476 0.493s + 0.002s (eta: 0:10:02)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1269/2476 0.484s + 0.002s (eta: 0:09:46)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1279/2476 0.478s + 0.002s (eta: 0:09:34)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1289/2476 0.480s + 0.002s (eta: 0:09:32)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1299/2476 0.481s + 0.003s (eta: 0:09:29)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1309/2476 0.480s + 0.002s (eta: 0:09:22)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1319/2476 0.480s + 0.002s (eta: 0:09:17)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1329/2476 0.481s + 0.002s (eta: 0:09:13)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1339/2476 0.485s + 0.002s (eta: 0:09:13)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1349/2476 0.486s + 0.002s (eta: 0:09:10)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1359/2476 0.484s + 0.002s (eta: 0:09:03)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1369/2476 0.483s + 0.002s (eta: 0:08:57)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1379/2476 0.487s + 0.002s (eta: 0:08:57)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1389/2476 0.489s + 0.002s (eta: 0:08:54)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1399/2476 0.488s + 0.002s (eta: 0:08:48)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1409/2476 0.492s + 0.002s (eta: 0:08:46)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1419/2476 0.492s + 0.002s (eta: 0:08:41)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1429/2476 0.491s + 0.002s (eta: 0:08:36)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1439/2476 0.492s + 0.002s (eta: 0:08:32)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1449/2476 0.491s + 0.002s (eta: 0:08:26)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1459/2476 0.492s + 0.002s (eta: 0:08:22)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1469/2476 0.495s + 0.002s (eta: 0:08:20)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1479/2476 0.495s + 0.002s (eta: 0:08:15)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1489/2476 0.494s + 0.002s (eta: 0:08:10)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1499/2476 0.495s + 0.002s (eta: 0:08:06)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1509/2476 0.497s + 0.002s (eta: 0:08:02)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1519/2476 0.497s + 0.002s (eta: 0:07:57)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1529/2476 0.497s + 0.002s (eta: 0:07:52)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1539/2476 0.499s + 0.002s (eta: 0:07:49)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1549/2476 0.498s + 0.002s (eta: 0:07:44)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1559/2476 0.498s + 0.002s (eta: 0:07:38)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1569/2476 0.498s + 0.002s (eta: 0:07:33)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1579/2476 0.497s + 0.002s (eta: 0:07:28)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1589/2476 0.497s + 0.002s (eta: 0:07:22)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1599/2476 0.498s + 0.002s (eta: 0:07:18)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1609/2476 0.496s + 0.002s (eta: 0:07:12)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1619/2476 0.496s + 0.002s (eta: 0:07:06)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1629/2476 0.496s + 0.002s (eta: 0:07:01)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1639/2476 0.495s + 0.002s (eta: 0:06:56)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1649/2476 0.495s + 0.002s (eta: 0:06:51)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1659/2476 0.495s + 0.002s (eta: 0:06:46)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1669/2476 0.496s + 0.002s (eta: 0:06:41)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1679/2476 0.496s + 0.002s (eta: 0:06:37)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1689/2476 0.497s + 0.002s (eta: 0:06:32)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1699/2476 0.497s + 0.002s (eta: 0:06:28)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1709/2476 0.497s + 0.002s (eta: 0:06:22)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1719/2476 0.497s + 0.002s (eta: 0:06:17)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1729/2476 0.498s + 0.002s (eta: 0:06:13)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1739/2476 0.498s + 0.002s (eta: 0:06:08)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1749/2476 0.497s + 0.002s (eta: 0:06:03)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1759/2476 0.497s + 0.002s (eta: 0:05:57)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1769/2476 0.497s + 0.002s (eta: 0:05:53)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1779/2476 0.497s + 0.002s (eta: 0:05:48)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1789/2476 0.497s + 0.002s (eta: 0:05:42)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1799/2476 0.498s + 0.002s (eta: 0:05:38)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1809/2476 0.498s + 0.002s (eta: 0:05:33)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1819/2476 0.498s + 0.002s (eta: 0:05:28)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1829/2476 0.498s + 0.002s (eta: 0:05:23)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1839/2476 0.497s + 0.002s (eta: 0:05:18)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1849/2476 0.497s + 0.002s (eta: 0:05:12)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1859/2476 0.497s + 0.002s (eta: 0:05:07)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1869/2476 0.496s + 0.002s (eta: 0:05:02)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1879/2476 0.496s + 0.002s (eta: 0:04:57)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1889/2476 0.496s + 0.002s (eta: 0:04:52)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1899/2476 0.496s + 0.002s (eta: 0:04:47)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1909/2476 0.495s + 0.002s (eta: 0:04:41)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1919/2476 0.495s + 0.002s (eta: 0:04:36)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1929/2476 0.495s + 0.002s (eta: 0:04:31)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1939/2476 0.495s + 0.002s (eta: 0:04:26)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1949/2476 0.495s + 0.002s (eta: 0:04:21)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1959/2476 0.495s + 0.002s (eta: 0:04:16)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1969/2476 0.495s + 0.002s (eta: 0:04:11)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1979/2476 0.495s + 0.002s (eta: 0:04:07)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1989/2476 0.495s + 0.002s (eta: 0:04:01)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1999/2476 0.494s + 0.002s (eta: 0:03:56)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2009/2476 0.492s + 0.002s (eta: 0:03:50)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2019/2476 0.493s + 0.002s (eta: 0:03:46)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2029/2476 0.493s + 0.002s (eta: 0:03:41)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2039/2476 0.493s + 0.002s (eta: 0:03:36)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2049/2476 0.493s + 0.002s (eta: 0:03:31)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2059/2476 0.493s + 0.002s (eta: 0:03:26)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2069/2476 0.493s + 0.002s (eta: 0:03:21)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2079/2476 0.493s + 0.002s (eta: 0:03:16)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2089/2476 0.493s + 0.002s (eta: 0:03:11)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2099/2476 0.493s + 0.002s (eta: 0:03:06)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2109/2476 0.493s + 0.002s (eta: 0:03:01)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2119/2476 0.494s + 0.002s (eta: 0:02:56)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2129/2476 0.494s + 0.002s (eta: 0:02:52)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2139/2476 0.493s + 0.002s (eta: 0:02:46)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2149/2476 0.494s + 0.002s (eta: 0:02:42)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2159/2476 0.494s + 0.002s (eta: 0:02:37)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2169/2476 0.494s + 0.002s (eta: 0:02:32)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2179/2476 0.494s + 0.002s (eta: 0:02:27)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2189/2476 0.494s + 0.002s (eta: 0:02:22)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2199/2476 0.494s + 0.002s (eta: 0:02:17)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2209/2476 0.494s + 0.002s (eta: 0:02:12)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2219/2476 0.494s + 0.002s (eta: 0:02:07)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2229/2476 0.494s + 0.002s (eta: 0:02:02)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2239/2476 0.494s + 0.002s (eta: 0:01:57)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2249/2476 0.494s + 0.002s (eta: 0:01:52)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2259/2476 0.494s + 0.002s (eta: 0:01:47)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2269/2476 0.494s + 0.002s (eta: 0:01:42)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2279/2476 0.494s + 0.002s (eta: 0:01:37)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2289/2476 0.494s + 0.002s (eta: 0:01:32)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2299/2476 0.495s + 0.002s (eta: 0:01:27)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2309/2476 0.495s + 0.002s (eta: 0:01:22)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2319/2476 0.496s + 0.002s (eta: 0:01:18)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2329/2476 0.496s + 0.002s (eta: 0:01:13)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2339/2476 0.496s + 0.002s (eta: 0:01:08)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2349/2476 0.496s + 0.002s (eta: 0:01:03)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2359/2476 0.496s + 0.002s (eta: 0:00:58)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2369/2476 0.496s + 0.002s (eta: 0:00:53)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2379/2476 0.497s + 0.002s (eta: 0:00:48)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2389/2476 0.496s + 0.002s (eta: 0:00:43)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2399/2476 0.496s + 0.002s (eta: 0:00:38)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2409/2476 0.496s + 0.002s (eta: 0:00:33)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2419/2476 0.496s + 0.002s (eta: 0:00:28)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2429/2476 0.496s + 0.002s (eta: 0:00:23)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2439/2476 0.496s + 0.002s (eta: 0:00:18)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2449/2476 0.496s + 0.002s (eta: 0:00:13)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2459/2476 0.496s + 0.002s (eta: 0:00:08)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2469/2476 0.495s + 0.002s (eta: 0:00:03)
INFO test_engine.py: 314: Wrote detections to: /home/ubuntu/Detectron.pytorch/Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_1238_2476.pkl
/home/ubuntu/anaconda3/envs/pytorch41/lib/python3.7/site-packages/torch/nn/functional.py:1890: UserWarning: nn.functional.upsample is deprecated. Use nn.functional.interpolate instead.
  warnings.warn("nn.functional.upsample is deprecated. Use nn.functional.interpolate instead.")

INFO subprocess.py: 129: # ---------------------------------------------------------------------------- #
INFO subprocess.py: 131: stdout of subprocess 2 with range [2477, 3714]
INFO subprocess.py: 133: # ---------------------------------------------------------------------------- #
INFO test_net.py:  72: Called with args:
INFO test_net.py:  73: Namespace(cfg_file='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_config.yaml', dataset=None, load_ckpt='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step2499.pth', load_detectron=None, multi_gpu_testing=False, num_classes=None, output_dir='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test', range=[2476, 3714], set_cfgs=['TEST.DATASETS', '("voc_2007_test",)'], vis=False)
INFO test_net.py: 130: Testing with config:
INFO test_net.py: 131: {'BBOX_XFORM_CLIP': 4.135166556742356,
 'CROP_RESIZE_WITH_MAX_POOL': True,
 'CUDA': False,
 'DATA_DIR': '/home/ubuntu/Detectron.pytorch/data',
 'DATA_LOADER': {'NUM_THREADS': 4},
 'DEBUG': False,
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXPECTED_RESULTS': [],
 'EXPECTED_RESULTS_ATOL': 0.005,
 'EXPECTED_RESULTS_EMAIL': '',
 'EXPECTED_RESULTS_RTOL': 0.1,
 'FAST_RCNN': {'BOX_OUT_STREAMS': 1,
               'CONV_HEAD_DIM': 256,
               'MLP_HEAD_DIM': 1024,
               'NUM_STACKED_CONVS': 4,
               'ROI_BOX_HEAD': 'fast_rcnn_heads.roi_2mlp_head',
               'ROI_XFORM_METHOD': 'RoIAlign',
               'ROI_XFORM_RESOLUTION': 7,
               'ROI_XFORM_SAMPLING_RATIO': 2},
 'FPN': {'COARSEST_STRIDE': 32,
         'DIM': 256,
         'EXTRA_CONV_LEVELS': False,
         'FPN_ON': True,
         'MULTILEVEL_ROIS': True,
         'MULTILEVEL_RPN': True,
         'ROI_CANONICAL_LEVEL': 4,
         'ROI_CANONICAL_SCALE': 224,
         'ROI_MAX_LEVEL': 5,
         'ROI_MIN_LEVEL': 2,
         'RPN_ANCHOR_START_SIZE': 32,
         'RPN_ASPECT_RATIOS': (0.5, 1, 2),
         'RPN_COLLECT_SCALE': 1,
         'RPN_MAX_LEVEL': 6,
         'RPN_MIN_LEVEL': 2,
         'USE_GN': False,
         'ZERO_INIT_LATERAL': False},
 'GROUP_NORM': {'DIM_PER_GP': -1, 'EPSILON': 1e-05, 'NUM_GROUPS': 32},
 'KRCNN': {'CONV_HEAD_DIM': 256,
           'CONV_HEAD_KERNEL': 3,
           'CONV_INIT': 'GaussianFill',
           'DECONV_DIM': 256,
           'DECONV_KERNEL': 4,
           'DILATION': 1,
           'HEATMAP_SIZE': -1,
           'INFERENCE_MIN_SIZE': 0,
           'KEYPOINT_CONFIDENCE': 'bbox',
           'LOSS_WEIGHT': 1.0,
           'MIN_KEYPOINT_COUNT_FOR_VALID_MINIBATCH': 20,
           'NMS_OKS': False,
           'NORMALIZE_BY_VISIBLE_KEYPOINTS': True,
           'NUM_KEYPOINTS': -1,
           'NUM_STACKED_CONVS': 8,
           'ROI_KEYPOINTS_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'UP_SCALE': -1,
           'USE_DECONV': False,
           'USE_DECONV_OUTPUT': False},
 'MATLAB': 'matlab',
 'MODEL': {'BBOX_REG_WEIGHTS': (10.0, 10.0, 5.0, 5.0),
           'CLS_AGNOSTIC_BBOX_REG': False,
           'CONV_BODY': 'FPN.fpn_ResNet101_conv5_body',
           'FASTER_RCNN': True,
           'KEYPOINTS_ON': False,
           'LOAD_IMAGENET_PRETRAINED_WEIGHTS': True,
           'MASK_ON': False,
           'NUM_CLASSES': 21,
           'RPN_ONLY': False,
           'SHARE_RES5': False,
           'TYPE': 'generalized_rcnn',
           'UNSUPERVISED_POSE': False},
 'MRCNN': {'CLS_SPECIFIC_MASK': True,
           'CONV_INIT': 'GaussianFill',
           'DILATION': 2,
           'DIM_REDUCED': 256,
           'MEMORY_EFFICIENT_LOSS': True,
           'RESOLUTION': 14,
           'ROI_MASK_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'THRESH_BINARIZE': 0.5,
           'UPSAMPLE_RATIO': 1,
           'USE_FC_OUTPUT': False,
           'WEIGHT_LOSS_MASK': 1.0},
 'NUM_GPUS': 8,
 'OUTPUT_DIR': 'Outputs',
 'PIXEL_MEANS': array([[[102.9801, 115.9465, 122.7717]]]),
 'POOLING_MODE': 'crop',
 'POOLING_SIZE': 7,
 'PYTORCH_VERSION_LESS_THAN_040': False,
 'RESNETS': {'FREEZE_AT': 2,
             'IMAGENET_PRETRAINED_WEIGHTS': 'data/pretrained_model/resnet101_caffe.pth',
             'NUM_GROUPS': 1,
             'RES5_DILATION': 1,
             'SHORTCUT_FUNC': 'basic_bn_shortcut',
             'STEM_FUNC': 'basic_bn_stem',
             'STRIDE_1X1': True,
             'TRANS_FUNC': 'bottleneck_transformation',
             'USE_GN': False,
             'WIDTH_PER_GROUP': 64},
 'RETINANET': {'ANCHOR_SCALE': 4,
               'ASPECT_RATIOS': (0.5, 1.0, 2.0),
               'BBOX_REG_BETA': 0.11,
               'BBOX_REG_WEIGHT': 1.0,
               'CLASS_SPECIFIC_BBOX': False,
               'INFERENCE_TH': 0.05,
               'LOSS_ALPHA': 0.25,
               'LOSS_GAMMA': 2.0,
               'NEGATIVE_OVERLAP': 0.4,
               'NUM_CONVS': 4,
               'POSITIVE_OVERLAP': 0.5,
               'PRE_NMS_TOP_N': 1000,
               'PRIOR_PROB': 0.01,
               'RETINANET_ON': False,
               'SCALES_PER_OCTAVE': 3,
               'SHARE_CLS_BBOX_TOWER': False,
               'SOFTMAX': False},
 'RFCN': {'PS_GRID_SIZE': 3},
 'RNG_SEED': 3,
 'ROOT_DIR': '/home/ubuntu/Detectron.pytorch',
 'RPN': {'ASPECT_RATIOS': (0.5, 1, 2),
         'CLS_ACTIVATION': 'sigmoid',
         'OUT_DIM': 512,
         'OUT_DIM_AS_IN_DIM': True,
         'RPN_ON': True,
         'SIZES': (64, 128, 256, 512),
         'STRIDE': 16},
 'SOLVER': {'BASE_LR': 2e-05,
            'BIAS_DOUBLE_LR': True,
            'BIAS_WEIGHT_DECAY': False,
            'GAMMA': 0.1,
            'LOG_LR_CHANGE_THRESHOLD': 1.1,
            'LRS': [],
            'LR_POLICY': 'steps_with_decay',
            'MAX_ITER': 10000,
            'MOMENTUM': 0.9,
            'SCALE_MOMENTUM': True,
            'SCALE_MOMENTUM_THRESHOLD': 1.1,
            'STEPS': [0, 5000, 8000],
            'STEP_SIZE': 30000,
            'TYPE': 'SGD',
            'WARM_UP_FACTOR': 0.3333333333333333,
            'WARM_UP_ITERS': 500,
            'WARM_UP_METHOD': 'linear',
            'WEIGHT_DECAY': 0.0001,
            'WEIGHT_DECAY_GN': 0.0},
 'TEST': {'BBOX_AUG': {'AREA_TH_HI': 32400,
                       'AREA_TH_LO': 2500,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'COORD_HEUR': 'UNION',
                       'ENABLED': False,
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False,
                       'SCORE_HEUR': 'UNION'},
          'BBOX_REG': True,
          'BBOX_VOTE': {'ENABLED': False,
                        'SCORING_METHOD': 'ID',
                        'SCORING_METHOD_BETA': 1.0,
                        'VOTE_TH': 0.8},
          'COMPETITION_MODE': True,
          'DATASETS': ('voc_2007_test',),
          'DETECTIONS_PER_IM': 100,
          'FORCE_JSON_DATASET_EVAL': False,
          'KPS_AUG': {'AREA_TH': 32400,
                      'ASPECT_RATIOS': (),
                      'ASPECT_RATIO_H_FLIP': False,
                      'ENABLED': False,
                      'HEUR': 'HM_AVG',
                      'H_FLIP': False,
                      'MAX_SIZE': 4000,
                      'SCALES': (),
                      'SCALE_H_FLIP': False,
                      'SCALE_SIZE_DEP': False},
          'MASK_AUG': {'AREA_TH': 32400,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'ENABLED': False,
                       'HEUR': 'SOFT_AVG',
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False},
          'MAX_SIZE': 1000,
          'NMS': 0.5,
          'PRECOMPUTED_PROPOSALS': False,
          'PROPOSAL_FILES': (),
          'PROPOSAL_LIMIT': 2000,
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 1000,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALE': 600,
          'SCORE_THRESH': 0.05,
          'SOFT_NMS': {'ENABLED': False, 'METHOD': 'linear', 'SIGMA': 0.5},
          'WEAK_SUPERVISE': False},
 'TRAIN': {'ASPECT_CROPPING': False,
           'ASPECT_GROUPING': True,
           'ASPECT_HI': 2,
           'ASPECT_LO': 0.5,
           'BATCH_SIZE_PER_IM': 512,
           'BBOX_INSIDE_WEIGHTS': (1.0, 1.0, 1.0, 1.0),
           'BBOX_NORMALIZE_MEANS': (0.0, 0.0, 0.0, 0.0),
           'BBOX_NORMALIZE_STDS': (0.1, 0.1, 0.2, 0.2),
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'COPY_CLS_TO_DET': False,
           'CROWD_FILTER_THRESH': 0.7,
           'DATASETS': (),
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'FREEZE_BOX_HEAD': True,
           'FREEZE_CONV_BODY': False,
           'FREEZE_RPN': False,
           'GT_MIN_AREA': -1,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_FILES': (),
           'RPN_BATCH_SIZE_PER_IM': 256,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 2000,
           'RPN_STRADDLE_THRESH': 0,
           'SCALES': (600,),
           'SNAPSHOT_ITERS': 2000,
           'SPATIAL_REG': False,
           'USE_FLIPPED': True,
           'WEAK_SUPERVISE': True,
           'WEAK_SUPERVISE_WITH_PRETRAIN': True},
 'VIS': False,
 'VIS_TH': 0.9}
loading annotations into memory...
Done (t=0.10s)
creating index...
index created!
INFO test_engine.py: 324: training mode? : False
INFO test_engine.py: 331: loading checkpoint Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step2499.pth
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2477/3714 0.655s + 0.001s (eta: 0:13:31)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2487/3714 0.504s + 0.001s (eta: 0:10:20)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2497/3714 0.498s + 0.001s (eta: 0:10:08)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2507/3714 0.503s + 0.001s (eta: 0:10:09)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2517/3714 0.508s + 0.002s (eta: 0:10:09)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2527/3714 0.507s + 0.002s (eta: 0:10:03)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2537/3714 0.502s + 0.002s (eta: 0:09:52)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2547/3714 0.500s + 0.002s (eta: 0:09:45)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2557/3714 0.495s + 0.002s (eta: 0:09:34)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2567/3714 0.493s + 0.002s (eta: 0:09:27)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2577/3714 0.495s + 0.002s (eta: 0:09:24)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2587/3714 0.492s + 0.002s (eta: 0:09:16)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2597/3714 0.491s + 0.002s (eta: 0:09:09)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2607/3714 0.492s + 0.002s (eta: 0:09:06)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2617/3714 0.490s + 0.002s (eta: 0:08:59)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2627/3714 0.492s + 0.002s (eta: 0:08:56)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2637/3714 0.490s + 0.002s (eta: 0:08:49)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2647/3714 0.490s + 0.002s (eta: 0:08:45)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2657/3714 0.490s + 0.002s (eta: 0:08:39)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2667/3714 0.494s + 0.002s (eta: 0:08:38)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2677/3714 0.495s + 0.002s (eta: 0:08:34)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2687/3714 0.494s + 0.002s (eta: 0:08:28)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2697/3714 0.496s + 0.002s (eta: 0:08:25)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2707/3714 0.497s + 0.002s (eta: 0:08:22)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2717/3714 0.498s + 0.002s (eta: 0:08:18)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2727/3714 0.498s + 0.002s (eta: 0:08:12)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2737/3714 0.499s + 0.002s (eta: 0:08:09)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2747/3714 0.499s + 0.002s (eta: 0:08:04)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2757/3714 0.497s + 0.002s (eta: 0:07:57)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2767/3714 0.496s + 0.002s (eta: 0:07:51)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2777/3714 0.496s + 0.002s (eta: 0:07:46)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2787/3714 0.496s + 0.002s (eta: 0:07:41)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2797/3714 0.495s + 0.002s (eta: 0:07:35)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2807/3714 0.496s + 0.002s (eta: 0:07:31)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2817/3714 0.495s + 0.002s (eta: 0:07:25)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2827/3714 0.495s + 0.002s (eta: 0:07:20)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2837/3714 0.494s + 0.002s (eta: 0:07:14)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2847/3714 0.493s + 0.002s (eta: 0:07:09)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2857/3714 0.493s + 0.002s (eta: 0:07:04)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2867/3714 0.493s + 0.002s (eta: 0:06:58)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2877/3714 0.494s + 0.002s (eta: 0:06:54)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2887/3714 0.493s + 0.002s (eta: 0:06:49)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2897/3714 0.491s + 0.002s (eta: 0:06:42)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2907/3714 0.492s + 0.002s (eta: 0:06:38)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2917/3714 0.492s + 0.002s (eta: 0:06:33)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2927/3714 0.493s + 0.002s (eta: 0:06:29)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2937/3714 0.491s + 0.002s (eta: 0:06:23)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2947/3714 0.491s + 0.002s (eta: 0:06:17)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2957/3714 0.490s + 0.002s (eta: 0:06:12)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2967/3714 0.490s + 0.002s (eta: 0:06:07)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2977/3714 0.489s + 0.002s (eta: 0:06:02)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2987/3714 0.489s + 0.002s (eta: 0:05:56)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2997/3714 0.489s + 0.002s (eta: 0:05:51)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3007/3714 0.489s + 0.002s (eta: 0:05:47)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3017/3714 0.488s + 0.002s (eta: 0:05:41)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3027/3714 0.488s + 0.002s (eta: 0:05:36)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3037/3714 0.488s + 0.002s (eta: 0:05:31)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3047/3714 0.488s + 0.002s (eta: 0:05:26)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3057/3714 0.488s + 0.002s (eta: 0:05:22)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3067/3714 0.488s + 0.002s (eta: 0:05:17)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3077/3714 0.488s + 0.002s (eta: 0:05:12)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3087/3714 0.489s + 0.002s (eta: 0:05:07)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3097/3714 0.490s + 0.002s (eta: 0:05:03)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3107/3714 0.490s + 0.002s (eta: 0:04:58)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3117/3714 0.490s + 0.002s (eta: 0:04:53)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3127/3714 0.489s + 0.002s (eta: 0:04:48)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3137/3714 0.489s + 0.002s (eta: 0:04:43)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3147/3714 0.488s + 0.002s (eta: 0:04:38)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3157/3714 0.489s + 0.002s (eta: 0:04:33)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3167/3714 0.489s + 0.002s (eta: 0:04:28)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3177/3714 0.489s + 0.002s (eta: 0:04:23)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3187/3714 0.488s + 0.002s (eta: 0:04:18)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3197/3714 0.489s + 0.002s (eta: 0:04:13)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3207/3714 0.489s + 0.002s (eta: 0:04:08)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3217/3714 0.488s + 0.002s (eta: 0:04:03)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3227/3714 0.488s + 0.002s (eta: 0:03:58)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3237/3714 0.487s + 0.002s (eta: 0:03:53)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3247/3714 0.486s + 0.002s (eta: 0:03:47)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3257/3714 0.484s + 0.002s (eta: 0:03:42)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3267/3714 0.485s + 0.002s (eta: 0:03:37)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3277/3714 0.485s + 0.002s (eta: 0:03:32)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3287/3714 0.484s + 0.002s (eta: 0:03:27)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3297/3714 0.484s + 0.002s (eta: 0:03:22)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3307/3714 0.485s + 0.002s (eta: 0:03:18)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3317/3714 0.486s + 0.002s (eta: 0:03:13)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3327/3714 0.485s + 0.002s (eta: 0:03:08)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3337/3714 0.486s + 0.002s (eta: 0:03:03)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3347/3714 0.486s + 0.002s (eta: 0:02:59)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3357/3714 0.487s + 0.002s (eta: 0:02:54)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3367/3714 0.487s + 0.002s (eta: 0:02:49)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3377/3714 0.487s + 0.002s (eta: 0:02:44)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3387/3714 0.487s + 0.002s (eta: 0:02:39)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3397/3714 0.487s + 0.002s (eta: 0:02:34)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3407/3714 0.486s + 0.002s (eta: 0:02:29)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3417/3714 0.486s + 0.002s (eta: 0:02:25)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3427/3714 0.486s + 0.002s (eta: 0:02:19)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3437/3714 0.486s + 0.002s (eta: 0:02:15)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3447/3714 0.485s + 0.002s (eta: 0:02:10)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3457/3714 0.486s + 0.002s (eta: 0:02:05)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3467/3714 0.486s + 0.002s (eta: 0:02:00)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3477/3714 0.486s + 0.002s (eta: 0:01:55)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3487/3714 0.486s + 0.002s (eta: 0:01:50)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3497/3714 0.486s + 0.002s (eta: 0:01:46)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3507/3714 0.486s + 0.002s (eta: 0:01:41)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3517/3714 0.487s + 0.002s (eta: 0:01:36)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3527/3714 0.487s + 0.002s (eta: 0:01:31)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3537/3714 0.487s + 0.002s (eta: 0:01:26)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3547/3714 0.487s + 0.002s (eta: 0:01:21)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3557/3714 0.487s + 0.002s (eta: 0:01:16)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3567/3714 0.487s + 0.002s (eta: 0:01:11)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3577/3714 0.487s + 0.002s (eta: 0:01:07)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3587/3714 0.487s + 0.002s (eta: 0:01:02)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3597/3714 0.487s + 0.002s (eta: 0:00:57)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3607/3714 0.487s + 0.002s (eta: 0:00:52)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3617/3714 0.487s + 0.002s (eta: 0:00:47)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3627/3714 0.488s + 0.002s (eta: 0:00:42)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3637/3714 0.487s + 0.002s (eta: 0:00:37)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3647/3714 0.488s + 0.002s (eta: 0:00:32)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3657/3714 0.487s + 0.002s (eta: 0:00:27)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3667/3714 0.488s + 0.002s (eta: 0:00:23)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3677/3714 0.488s + 0.002s (eta: 0:00:18)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3687/3714 0.488s + 0.002s (eta: 0:00:13)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3697/3714 0.488s + 0.002s (eta: 0:00:08)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3707/3714 0.488s + 0.002s (eta: 0:00:03)
INFO test_engine.py: 314: Wrote detections to: /home/ubuntu/Detectron.pytorch/Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_2476_3714.pkl
/home/ubuntu/anaconda3/envs/pytorch41/lib/python3.7/site-packages/torch/nn/functional.py:1890: UserWarning: nn.functional.upsample is deprecated. Use nn.functional.interpolate instead.
  warnings.warn("nn.functional.upsample is deprecated. Use nn.functional.interpolate instead.")

INFO subprocess.py: 129: # ---------------------------------------------------------------------------- #
INFO subprocess.py: 131: stdout of subprocess 3 with range [3715, 4952]
INFO subprocess.py: 133: # ---------------------------------------------------------------------------- #
INFO test_net.py:  72: Called with args:
INFO test_net.py:  73: Namespace(cfg_file='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_config.yaml', dataset=None, load_ckpt='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step2499.pth', load_detectron=None, multi_gpu_testing=False, num_classes=None, output_dir='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test', range=[3714, 4952], set_cfgs=['TEST.DATASETS', '("voc_2007_test",)'], vis=False)
INFO test_net.py: 130: Testing with config:
INFO test_net.py: 131: {'BBOX_XFORM_CLIP': 4.135166556742356,
 'CROP_RESIZE_WITH_MAX_POOL': True,
 'CUDA': False,
 'DATA_DIR': '/home/ubuntu/Detectron.pytorch/data',
 'DATA_LOADER': {'NUM_THREADS': 4},
 'DEBUG': False,
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXPECTED_RESULTS': [],
 'EXPECTED_RESULTS_ATOL': 0.005,
 'EXPECTED_RESULTS_EMAIL': '',
 'EXPECTED_RESULTS_RTOL': 0.1,
 'FAST_RCNN': {'BOX_OUT_STREAMS': 1,
               'CONV_HEAD_DIM': 256,
               'MLP_HEAD_DIM': 1024,
               'NUM_STACKED_CONVS': 4,
               'ROI_BOX_HEAD': 'fast_rcnn_heads.roi_2mlp_head',
               'ROI_XFORM_METHOD': 'RoIAlign',
               'ROI_XFORM_RESOLUTION': 7,
               'ROI_XFORM_SAMPLING_RATIO': 2},
 'FPN': {'COARSEST_STRIDE': 32,
         'DIM': 256,
         'EXTRA_CONV_LEVELS': False,
         'FPN_ON': True,
         'MULTILEVEL_ROIS': True,
         'MULTILEVEL_RPN': True,
         'ROI_CANONICAL_LEVEL': 4,
         'ROI_CANONICAL_SCALE': 224,
         'ROI_MAX_LEVEL': 5,
         'ROI_MIN_LEVEL': 2,
         'RPN_ANCHOR_START_SIZE': 32,
         'RPN_ASPECT_RATIOS': (0.5, 1, 2),
         'RPN_COLLECT_SCALE': 1,
         'RPN_MAX_LEVEL': 6,
         'RPN_MIN_LEVEL': 2,
         'USE_GN': False,
         'ZERO_INIT_LATERAL': False},
 'GROUP_NORM': {'DIM_PER_GP': -1, 'EPSILON': 1e-05, 'NUM_GROUPS': 32},
 'KRCNN': {'CONV_HEAD_DIM': 256,
           'CONV_HEAD_KERNEL': 3,
           'CONV_INIT': 'GaussianFill',
           'DECONV_DIM': 256,
           'DECONV_KERNEL': 4,
           'DILATION': 1,
           'HEATMAP_SIZE': -1,
           'INFERENCE_MIN_SIZE': 0,
           'KEYPOINT_CONFIDENCE': 'bbox',
           'LOSS_WEIGHT': 1.0,
           'MIN_KEYPOINT_COUNT_FOR_VALID_MINIBATCH': 20,
           'NMS_OKS': False,
           'NORMALIZE_BY_VISIBLE_KEYPOINTS': True,
           'NUM_KEYPOINTS': -1,
           'NUM_STACKED_CONVS': 8,
           'ROI_KEYPOINTS_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'UP_SCALE': -1,
           'USE_DECONV': False,
           'USE_DECONV_OUTPUT': False},
 'MATLAB': 'matlab',
 'MODEL': {'BBOX_REG_WEIGHTS': (10.0, 10.0, 5.0, 5.0),
           'CLS_AGNOSTIC_BBOX_REG': False,
           'CONV_BODY': 'FPN.fpn_ResNet101_conv5_body',
           'FASTER_RCNN': True,
           'KEYPOINTS_ON': False,
           'LOAD_IMAGENET_PRETRAINED_WEIGHTS': True,
           'MASK_ON': False,
           'NUM_CLASSES': 21,
           'RPN_ONLY': False,
           'SHARE_RES5': False,
           'TYPE': 'generalized_rcnn',
           'UNSUPERVISED_POSE': False},
 'MRCNN': {'CLS_SPECIFIC_MASK': True,
           'CONV_INIT': 'GaussianFill',
           'DILATION': 2,
           'DIM_REDUCED': 256,
           'MEMORY_EFFICIENT_LOSS': True,
           'RESOLUTION': 14,
           'ROI_MASK_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'THRESH_BINARIZE': 0.5,
           'UPSAMPLE_RATIO': 1,
           'USE_FC_OUTPUT': False,
           'WEIGHT_LOSS_MASK': 1.0},
 'NUM_GPUS': 8,
 'OUTPUT_DIR': 'Outputs',
 'PIXEL_MEANS': array([[[102.9801, 115.9465, 122.7717]]]),
 'POOLING_MODE': 'crop',
 'POOLING_SIZE': 7,
 'PYTORCH_VERSION_LESS_THAN_040': False,
 'RESNETS': {'FREEZE_AT': 2,
             'IMAGENET_PRETRAINED_WEIGHTS': 'data/pretrained_model/resnet101_caffe.pth',
             'NUM_GROUPS': 1,
             'RES5_DILATION': 1,
             'SHORTCUT_FUNC': 'basic_bn_shortcut',
             'STEM_FUNC': 'basic_bn_stem',
             'STRIDE_1X1': True,
             'TRANS_FUNC': 'bottleneck_transformation',
             'USE_GN': False,
             'WIDTH_PER_GROUP': 64},
 'RETINANET': {'ANCHOR_SCALE': 4,
               'ASPECT_RATIOS': (0.5, 1.0, 2.0),
               'BBOX_REG_BETA': 0.11,
               'BBOX_REG_WEIGHT': 1.0,
               'CLASS_SPECIFIC_BBOX': False,
               'INFERENCE_TH': 0.05,
               'LOSS_ALPHA': 0.25,
               'LOSS_GAMMA': 2.0,
               'NEGATIVE_OVERLAP': 0.4,
               'NUM_CONVS': 4,
               'POSITIVE_OVERLAP': 0.5,
               'PRE_NMS_TOP_N': 1000,
               'PRIOR_PROB': 0.01,
               'RETINANET_ON': False,
               'SCALES_PER_OCTAVE': 3,
               'SHARE_CLS_BBOX_TOWER': False,
               'SOFTMAX': False},
 'RFCN': {'PS_GRID_SIZE': 3},
 'RNG_SEED': 3,
 'ROOT_DIR': '/home/ubuntu/Detectron.pytorch',
 'RPN': {'ASPECT_RATIOS': (0.5, 1, 2),
         'CLS_ACTIVATION': 'sigmoid',
         'OUT_DIM': 512,
         'OUT_DIM_AS_IN_DIM': True,
         'RPN_ON': True,
         'SIZES': (64, 128, 256, 512),
         'STRIDE': 16},
 'SOLVER': {'BASE_LR': 2e-05,
            'BIAS_DOUBLE_LR': True,
            'BIAS_WEIGHT_DECAY': False,
            'GAMMA': 0.1,
            'LOG_LR_CHANGE_THRESHOLD': 1.1,
            'LRS': [],
            'LR_POLICY': 'steps_with_decay',
            'MAX_ITER': 10000,
            'MOMENTUM': 0.9,
            'SCALE_MOMENTUM': True,
            'SCALE_MOMENTUM_THRESHOLD': 1.1,
            'STEPS': [0, 5000, 8000],
            'STEP_SIZE': 30000,
            'TYPE': 'SGD',
            'WARM_UP_FACTOR': 0.3333333333333333,
            'WARM_UP_ITERS': 500,
            'WARM_UP_METHOD': 'linear',
            'WEIGHT_DECAY': 0.0001,
            'WEIGHT_DECAY_GN': 0.0},
 'TEST': {'BBOX_AUG': {'AREA_TH_HI': 32400,
                       'AREA_TH_LO': 2500,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'COORD_HEUR': 'UNION',
                       'ENABLED': False,
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False,
                       'SCORE_HEUR': 'UNION'},
          'BBOX_REG': True,
          'BBOX_VOTE': {'ENABLED': False,
                        'SCORING_METHOD': 'ID',
                        'SCORING_METHOD_BETA': 1.0,
                        'VOTE_TH': 0.8},
          'COMPETITION_MODE': True,
          'DATASETS': ('voc_2007_test',),
          'DETECTIONS_PER_IM': 100,
          'FORCE_JSON_DATASET_EVAL': False,
          'KPS_AUG': {'AREA_TH': 32400,
                      'ASPECT_RATIOS': (),
                      'ASPECT_RATIO_H_FLIP': False,
                      'ENABLED': False,
                      'HEUR': 'HM_AVG',
                      'H_FLIP': False,
                      'MAX_SIZE': 4000,
                      'SCALES': (),
                      'SCALE_H_FLIP': False,
                      'SCALE_SIZE_DEP': False},
          'MASK_AUG': {'AREA_TH': 32400,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'ENABLED': False,
                       'HEUR': 'SOFT_AVG',
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False},
          'MAX_SIZE': 1000,
          'NMS': 0.5,
          'PRECOMPUTED_PROPOSALS': False,
          'PROPOSAL_FILES': (),
          'PROPOSAL_LIMIT': 2000,
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 1000,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALE': 600,
          'SCORE_THRESH': 0.05,
          'SOFT_NMS': {'ENABLED': False, 'METHOD': 'linear', 'SIGMA': 0.5},
          'WEAK_SUPERVISE': False},
 'TRAIN': {'ASPECT_CROPPING': False,
           'ASPECT_GROUPING': True,
           'ASPECT_HI': 2,
           'ASPECT_LO': 0.5,
           'BATCH_SIZE_PER_IM': 512,
           'BBOX_INSIDE_WEIGHTS': (1.0, 1.0, 1.0, 1.0),
           'BBOX_NORMALIZE_MEANS': (0.0, 0.0, 0.0, 0.0),
           'BBOX_NORMALIZE_STDS': (0.1, 0.1, 0.2, 0.2),
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'COPY_CLS_TO_DET': False,
           'CROWD_FILTER_THRESH': 0.7,
           'DATASETS': (),
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'FREEZE_BOX_HEAD': True,
           'FREEZE_CONV_BODY': False,
           'FREEZE_RPN': False,
           'GT_MIN_AREA': -1,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_FILES': (),
           'RPN_BATCH_SIZE_PER_IM': 256,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 2000,
           'RPN_STRADDLE_THRESH': 0,
           'SCALES': (600,),
           'SNAPSHOT_ITERS': 2000,
           'SPATIAL_REG': False,
           'USE_FLIPPED': True,
           'WEAK_SUPERVISE': True,
           'WEAK_SUPERVISE_WITH_PRETRAIN': True},
 'VIS': False,
 'VIS_TH': 0.9}
loading annotations into memory...
Done (t=0.10s)
creating index...
index created!
INFO test_engine.py: 324: training mode? : False
INFO test_engine.py: 331: loading checkpoint Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step2499.pth
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3715/4952 0.549s + 0.002s (eta: 0:11:20)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3725/4952 0.525s + 0.003s (eta: 0:10:48)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3735/4952 0.515s + 0.002s (eta: 0:10:29)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3745/4952 0.508s + 0.002s (eta: 0:10:15)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3755/4952 0.497s + 0.002s (eta: 0:09:57)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3765/4952 0.493s + 0.002s (eta: 0:09:47)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3775/4952 0.493s + 0.002s (eta: 0:09:42)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3785/4952 0.495s + 0.002s (eta: 0:09:39)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3795/4952 0.495s + 0.002s (eta: 0:09:35)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3805/4952 0.493s + 0.002s (eta: 0:09:26)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3815/4952 0.492s + 0.002s (eta: 0:09:21)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3825/4952 0.491s + 0.002s (eta: 0:09:16)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3835/4952 0.490s + 0.002s (eta: 0:09:09)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3845/4952 0.489s + 0.002s (eta: 0:09:03)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3855/4952 0.489s + 0.002s (eta: 0:08:58)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3865/4952 0.489s + 0.002s (eta: 0:08:54)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3875/4952 0.488s + 0.002s (eta: 0:08:47)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3885/4952 0.487s + 0.002s (eta: 0:08:42)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3895/4952 0.487s + 0.002s (eta: 0:08:36)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3905/4952 0.486s + 0.002s (eta: 0:08:30)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3915/4952 0.486s + 0.002s (eta: 0:08:25)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3925/4952 0.485s + 0.002s (eta: 0:08:20)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3935/4952 0.484s + 0.002s (eta: 0:08:14)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3945/4952 0.483s + 0.002s (eta: 0:08:08)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3955/4952 0.484s + 0.002s (eta: 0:08:04)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3965/4952 0.483s + 0.002s (eta: 0:07:59)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3975/4952 0.485s + 0.002s (eta: 0:07:55)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3985/4952 0.485s + 0.002s (eta: 0:07:50)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3995/4952 0.484s + 0.002s (eta: 0:07:45)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4005/4952 0.484s + 0.002s (eta: 0:07:39)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4015/4952 0.485s + 0.002s (eta: 0:07:35)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4025/4952 0.486s + 0.002s (eta: 0:07:32)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4035/4952 0.486s + 0.002s (eta: 0:07:27)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4045/4952 0.488s + 0.002s (eta: 0:07:24)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4055/4952 0.490s + 0.002s (eta: 0:07:21)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4065/4952 0.490s + 0.002s (eta: 0:07:16)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4075/4952 0.490s + 0.002s (eta: 0:07:11)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4085/4952 0.491s + 0.002s (eta: 0:07:07)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4095/4952 0.491s + 0.002s (eta: 0:07:02)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4105/4952 0.492s + 0.002s (eta: 0:06:57)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4115/4952 0.492s + 0.002s (eta: 0:06:53)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4125/4952 0.491s + 0.002s (eta: 0:06:47)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4135/4952 0.492s + 0.002s (eta: 0:06:43)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4145/4952 0.493s + 0.002s (eta: 0:06:39)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4155/4952 0.492s + 0.002s (eta: 0:06:33)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4165/4952 0.493s + 0.002s (eta: 0:06:29)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4175/4952 0.492s + 0.002s (eta: 0:06:23)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4185/4952 0.491s + 0.002s (eta: 0:06:18)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4195/4952 0.492s + 0.002s (eta: 0:06:14)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4205/4952 0.493s + 0.002s (eta: 0:06:09)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4215/4952 0.493s + 0.002s (eta: 0:06:04)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4225/4952 0.494s + 0.002s (eta: 0:06:00)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4235/4952 0.495s + 0.002s (eta: 0:05:55)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4245/4952 0.495s + 0.002s (eta: 0:05:51)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4255/4952 0.495s + 0.002s (eta: 0:05:46)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4265/4952 0.495s + 0.002s (eta: 0:05:41)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4275/4952 0.495s + 0.002s (eta: 0:05:36)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4285/4952 0.495s + 0.002s (eta: 0:05:31)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4295/4952 0.494s + 0.002s (eta: 0:05:26)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4305/4952 0.495s + 0.002s (eta: 0:05:21)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4315/4952 0.494s + 0.002s (eta: 0:05:16)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4325/4952 0.494s + 0.002s (eta: 0:05:10)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4335/4952 0.493s + 0.002s (eta: 0:05:05)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4345/4952 0.494s + 0.002s (eta: 0:05:01)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4355/4952 0.494s + 0.002s (eta: 0:04:56)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4365/4952 0.495s + 0.002s (eta: 0:04:51)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4375/4952 0.495s + 0.002s (eta: 0:04:46)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4385/4952 0.495s + 0.002s (eta: 0:04:41)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4395/4952 0.495s + 0.002s (eta: 0:04:36)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4405/4952 0.495s + 0.002s (eta: 0:04:31)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4415/4952 0.495s + 0.002s (eta: 0:04:26)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4425/4952 0.494s + 0.002s (eta: 0:04:21)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4435/4952 0.494s + 0.002s (eta: 0:04:16)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4445/4952 0.495s + 0.002s (eta: 0:04:11)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4455/4952 0.494s + 0.002s (eta: 0:04:06)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4465/4952 0.494s + 0.002s (eta: 0:04:01)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4475/4952 0.493s + 0.002s (eta: 0:03:55)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4485/4952 0.492s + 0.002s (eta: 0:03:50)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4495/4952 0.492s + 0.002s (eta: 0:03:45)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4505/4952 0.492s + 0.002s (eta: 0:03:40)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4515/4952 0.493s + 0.002s (eta: 0:03:36)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4525/4952 0.492s + 0.002s (eta: 0:03:31)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4535/4952 0.492s + 0.002s (eta: 0:03:25)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4545/4952 0.492s + 0.002s (eta: 0:03:21)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4555/4952 0.492s + 0.002s (eta: 0:03:15)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4565/4952 0.492s + 0.002s (eta: 0:03:11)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4575/4952 0.492s + 0.002s (eta: 0:03:06)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4585/4952 0.492s + 0.002s (eta: 0:03:01)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4595/4952 0.492s + 0.002s (eta: 0:02:56)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4605/4952 0.492s + 0.002s (eta: 0:02:51)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4615/4952 0.492s + 0.002s (eta: 0:02:46)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4625/4952 0.492s + 0.002s (eta: 0:02:41)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4635/4952 0.492s + 0.002s (eta: 0:02:36)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4645/4952 0.492s + 0.002s (eta: 0:02:31)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4655/4952 0.492s + 0.002s (eta: 0:02:26)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4665/4952 0.492s + 0.002s (eta: 0:02:21)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4675/4952 0.492s + 0.002s (eta: 0:02:16)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4685/4952 0.492s + 0.002s (eta: 0:02:11)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4695/4952 0.493s + 0.002s (eta: 0:02:07)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4705/4952 0.493s + 0.002s (eta: 0:02:02)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4715/4952 0.493s + 0.002s (eta: 0:01:57)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4725/4952 0.493s + 0.002s (eta: 0:01:52)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4735/4952 0.493s + 0.002s (eta: 0:01:47)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4745/4952 0.493s + 0.002s (eta: 0:01:42)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4755/4952 0.493s + 0.002s (eta: 0:01:37)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4765/4952 0.493s + 0.002s (eta: 0:01:32)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4775/4952 0.493s + 0.002s (eta: 0:01:27)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4785/4952 0.493s + 0.002s (eta: 0:01:22)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4795/4952 0.493s + 0.002s (eta: 0:01:17)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4805/4952 0.493s + 0.002s (eta: 0:01:12)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4815/4952 0.494s + 0.002s (eta: 0:01:07)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4825/4952 0.494s + 0.002s (eta: 0:01:02)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4835/4952 0.494s + 0.002s (eta: 0:00:58)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4845/4952 0.494s + 0.002s (eta: 0:00:53)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4855/4952 0.494s + 0.002s (eta: 0:00:48)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4865/4952 0.495s + 0.002s (eta: 0:00:43)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4875/4952 0.495s + 0.002s (eta: 0:00:38)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4885/4952 0.495s + 0.002s (eta: 0:00:33)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4895/4952 0.495s + 0.002s (eta: 0:00:28)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4905/4952 0.495s + 0.002s (eta: 0:00:23)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4915/4952 0.495s + 0.002s (eta: 0:00:18)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4925/4952 0.495s + 0.002s (eta: 0:00:13)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4935/4952 0.495s + 0.002s (eta: 0:00:08)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4945/4952 0.494s + 0.002s (eta: 0:00:03)
INFO test_engine.py: 314: Wrote detections to: /home/ubuntu/Detectron.pytorch/Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_3714_4952.pkl
/home/ubuntu/anaconda3/envs/pytorch41/lib/python3.7/site-packages/torch/nn/functional.py:1890: UserWarning: nn.functional.upsample is deprecated. Use nn.functional.interpolate instead.
  warnings.warn("nn.functional.upsample is deprecated. Use nn.functional.interpolate instead.")

INFO test_engine.py: 211: Wrote detections to: /home/ubuntu/Detectron.pytorch/Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detections.pkl
INFO test_engine.py: 161: Total inference time: 638.653s
INFO task_evaluation.py:  77: Evaluating detections
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: aeroplane
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: bicycle
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: bird
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: boat
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: bottle
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: bus
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: car
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: cat
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: chair
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: cow
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: diningtable
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: dog
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: horse
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: motorbike
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: person
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: pottedplant
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: sheep
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: sofa
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: train
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: tvmonitor
INFO voc_dataset_evaluator.py: 115: VOC07 metric? Yes
INFO voc_eval.py: 171: [1083 1119  652 ...  778  230  660]
INFO voc_dataset_evaluator.py: 127: AP for aeroplane = 0.7730
INFO voc_eval.py: 171: [ 267   35  171 ...  295 1040  166]
INFO voc_dataset_evaluator.py: 127: AP for bicycle = 0.7871
INFO voc_eval.py: 171: [1151 1494 1185 ... 2362 1979 2023]
INFO voc_dataset_evaluator.py: 127: AP for bird = 0.7897
INFO voc_eval.py: 171: [1467 2090   74 ... 2133  908  657]
INFO voc_dataset_evaluator.py: 127: AP for boat = 0.6234
INFO voc_eval.py: 171: [ 960 1815  125 ... 2061 2016 1310]
INFO voc_dataset_evaluator.py: 127: AP for bottle = 0.6759
INFO voc_eval.py: 171: [332 279 859 137 857 485 832 216 531 882 701 603 224   4 211 501 711  29
  88 268 778 144 107 640 748 420  76 460  19 665 554 661 296 871 794 806
  37 651 702 472 799 644 668 200 504 862 424 700 596 448 727 389  58  85
  34 621  81 130 759 562 575 546 822  54 190 797 539 570  86 255 124 414
 741 681 515 238  24 735 186 320 777 601 293 440 743 490  72 549 167 367
 744 362 394 899 657  38 387 620 178 461 837 487 407 153 282 885 180 404
 798 868 807 673 537 585 270 134 305 662 118 728 840 519 847 431  21 638
 189 351  62 874 228 348 117 838 801 455 215 317 861 726 254 571 312 785
 524 523 547 195 672 484 493 402 819 639 226 323 538 574 497 386 469   1
 182 823 388 557 437 692 248 301 286 712 626 204 564 520 376 322  14 766
 342 479 788 363 272 607 505 658 775 805 358 843 542 243 593 703 565 670
 577 604  20 876 522  69 608 206   0 298 410 287 413 262 889  99 563 725
 810 482 179 258 616 510  55  78 757 347 146 416 425 498 354 648 579 803
 689 403 374 249  83 820 168 489 753 499 290 438 561 664 699 139 187 854
 308 647 385 878 415 284 400 150 240 439 450 109 572 834 274 717 202 786
 161  31 366 836 762 458 143 851 172 271 776 132 433 355 114 409 884  89
 886 321 694 875 697 263  59 737 356 567 133  11 683 468 244 170 471 617
 544 508 422 445  66 275 140 377 881  90 233  80 435  46 715 128 723 194
  39 141 858 225 365 135 880 682 229   6 176 177 457 686 841 745 476 666
 364 734 630 105 449  36 605 230 239 589 162 853 653 131 368 462 234 765
 350 873 173 104 396 760   9  67 151 652 710 656 191 669  10 898 158 606
 411 729  30 269 580   5 327 691 870 718 693 237 392 116 674 126 695  93
 826 181 578 764 548  27 495 628 892  42 314 535 120 494 222 163 588 361
 768 888 245 622 251 309 719 477 304 343 642 302 156  82 353  28 724  60
 675 213 677 443  79 529 844  84 545 511 698 164 319 210 113 378  56 427
 106 337 679 419 856 183 506 294 532 112 227 624 852 346 264 451 802   8
 817 602 722 247 102 297 252 103 454 441 115 165 828 594 250 756 429  32
 197 412  50 184 145 831 488  41 311 667 634  12 223 773 306 680 447 316
 814 709 391 345 733 731 338 235 209  47 850 276 453 654 340 467 833 500
  73 390 713 281 331  64 406 418 149 592 432 512 829 324 597 804 426 295
 584 330  25 610 637 771 582 369 507 552 188 125 897 600  51 738 631 526
 581 110  22 474 551 824 341 780 300  17 646 201 660 334 360 217 716 421
  44 684 236 650  71 465 273 444 827 690 397 456 894 541  23 379 527 739
 496 749 289 155 787 752  98  75 623 746 872 154 232 171 108 288 148 864
 198 516 483 463 627 344 774 303 111 373 818 219 335 280 370 865  92 815
  18 559  13 671 528 877 750 423 393 502 781 763 372 540 863 101  97 883
 587 326 278 517 259 398 430 867 267  61 770 576 747 100 246 417 842 405
 446 536 231 214  95 241 813 157 767  43 720 196 714 555 633 784 772 901
 256 486  96 292 169 129 649 830  91 835 285 159  63 598 382 291 612 812
  45  70 175  77 220 751 357 480 755 436 307 560 434 891 779 704 821 253
 473 887 761 401 573 613 708 329 846  87 205 707 492 277 212  52 614 470
 509 825 790   3 879 893 185  49 706 676 514 736 218 553 655 769 583 754
 260 586 550  57  68 333 811 459 242 641  40 525 208 349 521 166 160 643
 791  26 352 793 399 696 375 599 688 591 615 119  94  74 900 266 203 568
 556 478   7 481 848 381 595 609 257 635 789 152 310 619 730 339 518 475
 299 328 611 566 503  16 371 395 816 207 809 380 896 782 705  48 543 849
 491 783 452  33 663 895 740 687 136 359 645  65 618 625 221 795 265 792
 147 193 192 428 678 890   2  53 533 383 845 127 261 318 466 632 569 530
 464 558 142 121 283 590 122 174 384  15 839 659 313 800 325 869 866 721
  35 742 534 199 336 315 123 629 855 860 513 442 796 758 685 408 808 636
 732 138]
INFO voc_dataset_evaluator.py: 127: AP for bus = 0.7919
INFO voc_eval.py: 171: [1941 3113 4199 ...  868 4444 4511]
INFO voc_dataset_evaluator.py: 127: AP for car = 0.8596
INFO voc_eval.py: 171: [859 974 937 ... 221 442 667]
INFO voc_dataset_evaluator.py: 127: AP for cat = 0.8561
INFO voc_eval.py: 171: [ 138  137 3226 ...  645 4178 4844]
INFO voc_dataset_evaluator.py: 127: AP for chair = 0.6182
INFO voc_eval.py: 171: [1614 1324  759 ...   97  187 1029]
INFO voc_dataset_evaluator.py: 127: AP for cow = 0.7741
INFO voc_eval.py: 171: [1038  623 2853 ... 1972 3410 3296]
INFO voc_dataset_evaluator.py: 127: AP for diningtable = 0.6044
INFO voc_eval.py: 171: [ 114 1112  438 ... 1619   52 1390]
INFO voc_dataset_evaluator.py: 127: AP for dog = 0.8190
INFO voc_eval.py: 171: [ 149   26  507 ... 1534  591  628]
INFO voc_dataset_evaluator.py: 127: AP for horse = 0.8289
INFO voc_eval.py: 171: [921 192 275 166 247 312 120 841 558 147 455 149  47 467 157 724 439 818
 163  92 621 184 276 797 459 385 125  48 606 471 370 264 700 862 584 854
 382 294 893 513 808 583 617 429 716 885 110 253 892 118 211 825 106 258
 844 128 796  64 138  86 750 876   5 323 793 194 770 411 881 338 527 790
 476 585 546 839 183 142 928  79 519 364 837 446 235 554 180 951 391 341
 773 135 278 553 860 529 293 121 890 314 516 746 319  42 186  81 495 707
 536 820 251 868 369 680  75 383 232  27 517 185 448 786 447 521 330 675
 496 503 877 589 845 728 126  10 388 305 611 656 943 802 223 649 454 535
 901 573 509 665 743 547  59 912 919   8 265 579 891 756 923  37 425 766
 217 706 172 539 828 474 548 181 543 480 624  58  61 107 917 902 387 203
 735 655 664 855 640 299 909   3 622 537 780 538 333 390 422 198 620 197
 256 636 757 633 872 344 926 452 255 398 581 204 154   6 598 526 566 761
 365 572 623 850 591 394 549 378 216 101 896 903  30 283 672 920 510 392
 658  77 833 363 329 642 347 522 221 586 227 733 530 343 384 228 315 413
 741 225 412 295 852  97 762 431  72 639 945 799  55 657  82 507 310 791
 119 939 630 776 177 520 410 334 533 346 789 718 871 913 417 307 694 512
 453  57 175 430 813 389 592 941 409 935 473 103 564 348 381 628  41 104
 650  71 864 859 231  66 373 725 644 261 803 196 282 874 734 514 436 191
 800 936 662 374 899 905 306 900 158 308  69  96 709 832   2 683 210 130
 753 582 764 150 427 814  12 729 202 116 811 500 182 947 441 908 824 783
 528 869 214 570 821 296 151 702 504 332 929 353 886 653  80 804 659 784
 722 730 375 944 889 435 173 270 108 321 602 625 924  18 171  73   1 875
 460 239 801 326 432 379 267 588 243 550 696 215 456  62 463 880 213 829
 240 867 679 769 782 335 280 736 807 493 792 682 449 883  21 710 133 524
 645 914 626 836 318 472 719 565 499 484 300 127 518 139 742 759 627 571
  29 457 249 156 320 244 708 888 483 739 692 643  87 155 209 731 721 274
 397 262 233 858 534 105 715 508 562 122 494 940 925 301 316 882 542 596
 414 396 781 284 201 170 798 102 401 629   9 616 816 853 407  85  44 466
 846 934 774 805  63 937 604 670 340 339 440 705 159 608 613 795 525 113
 515  33 424 352 342 593 834 222 532 946 559 758  84 590  51 823 767 433
 918  39 634 831 195 609 745 727  17 124 481 165 137 599 506 614 567 465
 587 701 544 632 281 237 400 654 367 754 357 785 399 676 114   7 726 541
 865  13 594 612 220 302 777 405 291 738 279 380  94 619 915 755 691 146
 161 699 497 685 490  26  14  20 577 693 358  36 531  99 492 687 714 768
 646 360 809 641 568 322  52 189 822 324 678 511 160 250 952 458 164 268
 420 331 226  40 660 451 545 878 229 648  43 206 933 772 445 470 697  34
 826 563 272 949  49 362 336 688 600  19 403 684 491 236 482 406 290 942
 393 372 292 597 178  90 304 368 224 819 751 938 895 788  16 723 863 167
 765 744 193 325 574  65 297 907 610 361 434 376 669 443  23 303 242   0
 540  24 651 897 152 174 218  76  28 502 111 922 205 638 817 695 806 377
 698 100 285 248 575 578 749 168 618 288 576 462 475 426 298 148 254 337
 123 690 847  46   4 950  60 286 838 327 468 136 661 866 717  11 273 931
 489 647 132 477 129 144 395 603 219 763 423 555 351 827 835 438 419 245
 673 704 131 737  32  35 437 666 266 488 271 212 145 560 415 169 668 345
 879 501  22  54 927  88  50 241 712 873 408 569 681 478 605 207 190 313
 416 311 359 176  45 652 911 371 317 199 711 117 631 856 246 663 252 486
 257 259 238 551 230 153 141 848 843 179 830 557 601 269 861  53 752 857
 870  91  15  68 703 487 580 815 350 143 309 932 115 748 607 779 771 109
 498  98 523 556 450 505 810 948 479 260 402 418  25 740 287  89 898 671
 366 787 747 234 187 200 442  70 595 349 689 887 760 356 355 906 916 354
 615 464 674 277 713 894  31  93 561 208 162 775 444 428 778 386 840 794
  95 289 461 404 904 469 421 635  67 677 637 812 686 485 263  38 720  78
 112 910 930  56 140 134 552 842 851 849 328 188 884 732  74 667  83]
INFO voc_dataset_evaluator.py: 127: AP for motorbike = 0.7258
INFO voc_eval.py: 171: [ 2834  6205  8061 ...  4042  5097 11788]
INFO voc_dataset_evaluator.py: 127: AP for person = 0.8382
INFO voc_eval.py: 171: [1882  256  857 ... 2170 1967 1079]
INFO voc_dataset_evaluator.py: 127: AP for pottedplant = 0.4604
INFO voc_eval.py: 171: [1533 1268  564 ...  664   32 1538]
INFO voc_dataset_evaluator.py: 127: AP for sheep = 0.7556
INFO voc_eval.py: 171: [1219  813  959 ...  915 1401 1336]
INFO voc_dataset_evaluator.py: 127: AP for sofa = 0.6947
INFO voc_eval.py: 171: [ 164  514 1208 ...  213  321  538]
INFO voc_dataset_evaluator.py: 127: AP for train = 0.7646
INFO voc_eval.py: 171: [425 634 251 278  91 205  19 404 647 557 531  56 370 158 423 745 201  87
 457 341 406 220 108 456 169 622 621 420 399 530 234 264 499 516 442  33
 538 686  39  73 199 223 429 609 240 335 150 210 142  92 700 376 648 444
 309 762 144 151 715 654 130 301 638 430 519 102 474 131 229 332 450 748
 518 626  53  61 300  70 699 675 407 727 270 471 275 356 358  17 534 569
 464 659 107 120 771   6 652 273  81 256 643 617 472 602 127  10 363 307
  14  71 257 115 155 153  43 359 118  96 529 485 277   5 563 451  20 711
  68 697 730 618 624 408 632 231 725 147  38 401 409 282  83 410 164 440
 121   2 754 719 319 508 473 353  99 453 389 588 702 400 779 635 596  82
 283 589 728 373 293  60 656 435 140 258 113 183 494 262 570 628 443 642
 555 757 737 117 323 664 532 330  78 738 112 493 765 568 763 382 775 561
 179 734  67 479 572 599 378 387 288 171 677 366 279 417 137 299 657 213
  88 551 671 733 522 163 736 343  76 502 446 166 639 188 454 196 374 637
 539 655 593 780 578 603 439  31 680  59  75 524 337 546 741 280 313   3
 742 682 284 437 206 391 305 152 402 345 381 219 195 447 573  22 731 303
 482 394 339 173 237 383 691 116 315 495 290 662 753  84 582 100   9  80
 128 688 713 379 710 497 649 375 520 689 176 475 517 760 558 170  63  32
 525 318 132 174 105 606 487 178  44 452 172 750 707 501 665 629 255 215
  46 106 645 186 361 461 523 242 761  93 543 431 723 211 202 666 134 327
 500 553 550 272 758 660 528 774 781 712 346 585 422 304  97  94 672 156
 732 489 496 245 138  50 306  29  64 380 271 746 767 397 605 416  41 122
 386 344 320  30   4 432  16 567  49 463 616 190 396 465 449 641 167 651
 752 705 749 576 552 512 772 591  89 595 321 600 455 208 533 148 693 633
 594 663 312 484 233 103 241 537 445 395 198 547 364 333 415 184 357 291
 175 704 729 658 109 571   7 207 751 390 135 286 104  77 678 566 695 549
 371 412 436 619 123 507 377 222  36 292 426 668 336 218 216 192 722 129
 325 545 747 119 486 692 513 310 650 574 625 766 143 285  52 708 764 703
 612 488 411 427 393 369  47 347 683  86 630  58 340 342 706 535 653 157
 716  28 506 460 238 687 372 260 384 744  25 646 468 768 185 294 636 197
 720 592 276 669 141  85 314 714 735 778 564 274 673 101  40 145  69  21
 459 246 355 200 776 149 405 243 481 681 236 674 133 587   8  45 476 441
 165 136  74 726 584 177 614 554 317 247  26 462 679 110 526 209 203 338
 139 329 721 324 154 419 521  98 540 542 556  18 607 180 182 418 685 548
 322 640 433 354  34 717 562 759 503  51 421 214   0 424 259 267 367 470
 477 159 670  62 269 756 583 469 458 125 162  57 126 438 414 490 492 308
 491 124 252 615 191 221 777 392 160 235 611 268 743 739 266 388  13 694
 413 181 620 581 515 536  24 511 362 498 189 773  54 265 610 248  12 349
 560 565 514 527 740 326 770 250 227 232 311 631 295 661 613 755  66 193
 701 253 114 111  11 204 168  90 281 590 509 365 348 627 718 709 434 350
 225 586 510  55 351 403 467 224 254 580 296 297 604 289 724 598 316  48
 187  15 428 212 579 676 698 575 505 623  79  27 331  72 146  95 448  42
 368  35 302 244 360 559 352 239 667 541 263 504 334 261 194 608 601 480
 478 690  65 597 226 684 249 398 696  23 328 385 287  37 644 544 466 230
 161 769 577 217 228 483   1 298]
INFO voc_dataset_evaluator.py: 127: AP for tvmonitor = 0.7231
INFO voc_dataset_evaluator.py: 130: Mean AP = 0.7382
INFO voc_dataset_evaluator.py: 131: ~~~~~~~~
INFO voc_dataset_evaluator.py: 132: Results:
INFO voc_dataset_evaluator.py: 134: 0.773
INFO voc_dataset_evaluator.py: 134: 0.787
INFO voc_dataset_evaluator.py: 134: 0.790
INFO voc_dataset_evaluator.py: 134: 0.623
INFO voc_dataset_evaluator.py: 134: 0.676
INFO voc_dataset_evaluator.py: 134: 0.792
INFO voc_dataset_evaluator.py: 134: 0.860
INFO voc_dataset_evaluator.py: 134: 0.856
INFO voc_dataset_evaluator.py: 134: 0.618
INFO voc_dataset_evaluator.py: 134: 0.774
INFO voc_dataset_evaluator.py: 134: 0.604
INFO voc_dataset_evaluator.py: 134: 0.819
INFO voc_dataset_evaluator.py: 134: 0.829
INFO voc_dataset_evaluator.py: 134: 0.726
INFO voc_dataset_evaluator.py: 134: 0.838
INFO voc_dataset_evaluator.py: 134: 0.460
INFO voc_dataset_evaluator.py: 134: 0.756
INFO voc_dataset_evaluator.py: 134: 0.695
INFO voc_dataset_evaluator.py: 134: 0.765
INFO voc_dataset_evaluator.py: 134: 0.723
INFO voc_dataset_evaluator.py: 135: 0.738
INFO voc_dataset_evaluator.py: 136: ~~~~~~~~
INFO voc_dataset_evaluator.py: 137: 
INFO voc_dataset_evaluator.py: 138: ----------------------------------------------------------
INFO voc_dataset_evaluator.py: 139: Results computed with the **unofficial** Python eval code.
INFO voc_dataset_evaluator.py: 140: Results should be very close to the official MATLAB code.
INFO voc_dataset_evaluator.py: 141: Use `./tools/reval.py --matlab ...` for your paper.
INFO voc_dataset_evaluator.py: 142: -- Thanks, The Management
INFO voc_dataset_evaluator.py: 143: ----------------------------------------------------------
INFO task_evaluation.py:  63: Evaluating bounding boxes is done!
INFO task_evaluation.py: 189: copypaste: Dataset: voc_2007_test
INFO task_evaluation.py: 191: copypaste: Task: box
INFO task_evaluation.py: 194: copypaste: AP,AP50,AP75,APs,APm,APl
INFO task_evaluation.py: 195: copypaste: -1.0000,-1.0000,-1.0000,-1.0000,-1.0000,-1.0000
Start testing on iteration 3499
INFO test_net.py:  72: Called with args:
INFO test_net.py:  73: Namespace(cfg_file='configs/dt/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv.yaml', dataset='voc2007', load_ckpt='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step3499.pth', load_detectron=None, multi_gpu_testing=True, num_classes=None, output_dir=None, range=None, set_cfgs=[], vis=False)
INFO test_net.py:  83: Automatically set output directory to Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test
INFO test_net.py: 130: Testing with config:
INFO test_net.py: 131: {'BBOX_XFORM_CLIP': 4.135166556742356,
 'CROP_RESIZE_WITH_MAX_POOL': True,
 'CUDA': False,
 'DATA_DIR': '/home/ubuntu/Detectron.pytorch/data',
 'DATA_LOADER': {'NUM_THREADS': 4},
 'DEBUG': False,
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXPECTED_RESULTS': [],
 'EXPECTED_RESULTS_ATOL': 0.005,
 'EXPECTED_RESULTS_EMAIL': '',
 'EXPECTED_RESULTS_RTOL': 0.1,
 'FAST_RCNN': {'BOX_OUT_STREAMS': 1,
               'CONV_HEAD_DIM': 256,
               'MLP_HEAD_DIM': 1024,
               'NUM_STACKED_CONVS': 4,
               'ROI_BOX_HEAD': 'fast_rcnn_heads.roi_2mlp_head',
               'ROI_XFORM_METHOD': 'RoIAlign',
               'ROI_XFORM_RESOLUTION': 7,
               'ROI_XFORM_SAMPLING_RATIO': 2},
 'FPN': {'COARSEST_STRIDE': 32,
         'DIM': 256,
         'EXTRA_CONV_LEVELS': False,
         'FPN_ON': True,
         'MULTILEVEL_ROIS': True,
         'MULTILEVEL_RPN': True,
         'ROI_CANONICAL_LEVEL': 4,
         'ROI_CANONICAL_SCALE': 224,
         'ROI_MAX_LEVEL': 5,
         'ROI_MIN_LEVEL': 2,
         'RPN_ANCHOR_START_SIZE': 32,
         'RPN_ASPECT_RATIOS': (0.5, 1, 2),
         'RPN_COLLECT_SCALE': 1,
         'RPN_MAX_LEVEL': 6,
         'RPN_MIN_LEVEL': 2,
         'USE_GN': False,
         'ZERO_INIT_LATERAL': False},
 'GROUP_NORM': {'DIM_PER_GP': -1, 'EPSILON': 1e-05, 'NUM_GROUPS': 32},
 'KRCNN': {'CONV_HEAD_DIM': 256,
           'CONV_HEAD_KERNEL': 3,
           'CONV_INIT': 'GaussianFill',
           'DECONV_DIM': 256,
           'DECONV_KERNEL': 4,
           'DILATION': 1,
           'HEATMAP_SIZE': -1,
           'INFERENCE_MIN_SIZE': 0,
           'KEYPOINT_CONFIDENCE': 'bbox',
           'LOSS_WEIGHT': 1.0,
           'MIN_KEYPOINT_COUNT_FOR_VALID_MINIBATCH': 20,
           'NMS_OKS': False,
           'NORMALIZE_BY_VISIBLE_KEYPOINTS': True,
           'NUM_KEYPOINTS': -1,
           'NUM_STACKED_CONVS': 8,
           'ROI_KEYPOINTS_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'UP_SCALE': -1,
           'USE_DECONV': False,
           'USE_DECONV_OUTPUT': False},
 'MATLAB': 'matlab',
 'MODEL': {'BBOX_REG_WEIGHTS': (10.0, 10.0, 5.0, 5.0),
           'CLS_AGNOSTIC_BBOX_REG': False,
           'CONV_BODY': 'FPN.fpn_ResNet101_conv5_body',
           'FASTER_RCNN': True,
           'KEYPOINTS_ON': False,
           'LOAD_IMAGENET_PRETRAINED_WEIGHTS': True,
           'MASK_ON': False,
           'NUM_CLASSES': 21,
           'RPN_ONLY': False,
           'SHARE_RES5': False,
           'TYPE': 'generalized_rcnn',
           'UNSUPERVISED_POSE': False},
 'MRCNN': {'CLS_SPECIFIC_MASK': True,
           'CONV_INIT': 'GaussianFill',
           'DILATION': 2,
           'DIM_REDUCED': 256,
           'MEMORY_EFFICIENT_LOSS': True,
           'RESOLUTION': 14,
           'ROI_MASK_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'THRESH_BINARIZE': 0.5,
           'UPSAMPLE_RATIO': 1,
           'USE_FC_OUTPUT': False,
           'WEIGHT_LOSS_MASK': 1.0},
 'NUM_GPUS': 8,
 'OUTPUT_DIR': 'Outputs',
 'PIXEL_MEANS': array([[[102.9801, 115.9465, 122.7717]]]),
 'POOLING_MODE': 'crop',
 'POOLING_SIZE': 7,
 'PYTORCH_VERSION_LESS_THAN_040': False,
 'RESNETS': {'FREEZE_AT': 2,
             'IMAGENET_PRETRAINED_WEIGHTS': 'data/pretrained_model/resnet101_caffe.pth',
             'NUM_GROUPS': 1,
             'RES5_DILATION': 1,
             'SHORTCUT_FUNC': 'basic_bn_shortcut',
             'STEM_FUNC': 'basic_bn_stem',
             'STRIDE_1X1': True,
             'TRANS_FUNC': 'bottleneck_transformation',
             'USE_GN': False,
             'WIDTH_PER_GROUP': 64},
 'RETINANET': {'ANCHOR_SCALE': 4,
               'ASPECT_RATIOS': (0.5, 1.0, 2.0),
               'BBOX_REG_BETA': 0.11,
               'BBOX_REG_WEIGHT': 1.0,
               'CLASS_SPECIFIC_BBOX': False,
               'INFERENCE_TH': 0.05,
               'LOSS_ALPHA': 0.25,
               'LOSS_GAMMA': 2.0,
               'NEGATIVE_OVERLAP': 0.4,
               'NUM_CONVS': 4,
               'POSITIVE_OVERLAP': 0.5,
               'PRE_NMS_TOP_N': 1000,
               'PRIOR_PROB': 0.01,
               'RETINANET_ON': False,
               'SCALES_PER_OCTAVE': 3,
               'SHARE_CLS_BBOX_TOWER': False,
               'SOFTMAX': False},
 'RFCN': {'PS_GRID_SIZE': 3},
 'RNG_SEED': 3,
 'ROOT_DIR': '/home/ubuntu/Detectron.pytorch',
 'RPN': {'ASPECT_RATIOS': (0.5, 1, 2),
         'CLS_ACTIVATION': 'sigmoid',
         'OUT_DIM': 512,
         'OUT_DIM_AS_IN_DIM': True,
         'RPN_ON': True,
         'SIZES': (64, 128, 256, 512),
         'STRIDE': 16},
 'SOLVER': {'BASE_LR': 2e-05,
            'BIAS_DOUBLE_LR': True,
            'BIAS_WEIGHT_DECAY': False,
            'GAMMA': 0.1,
            'LOG_LR_CHANGE_THRESHOLD': 1.1,
            'LRS': [],
            'LR_POLICY': 'steps_with_decay',
            'MAX_ITER': 10000,
            'MOMENTUM': 0.9,
            'SCALE_MOMENTUM': True,
            'SCALE_MOMENTUM_THRESHOLD': 1.1,
            'STEPS': [0, 5000, 8000],
            'STEP_SIZE': 30000,
            'TYPE': 'SGD',
            'WARM_UP_FACTOR': 0.3333333333333333,
            'WARM_UP_ITERS': 500,
            'WARM_UP_METHOD': 'linear',
            'WEIGHT_DECAY': 0.0001,
            'WEIGHT_DECAY_GN': 0.0},
 'TEST': {'BBOX_AUG': {'AREA_TH_HI': 32400,
                       'AREA_TH_LO': 2500,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'COORD_HEUR': 'UNION',
                       'ENABLED': False,
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False,
                       'SCORE_HEUR': 'UNION'},
          'BBOX_REG': True,
          'BBOX_VOTE': {'ENABLED': False,
                        'SCORING_METHOD': 'ID',
                        'SCORING_METHOD_BETA': 1.0,
                        'VOTE_TH': 0.8},
          'COMPETITION_MODE': True,
          'DATASETS': ('voc_2007_test',),
          'DETECTIONS_PER_IM': 100,
          'FORCE_JSON_DATASET_EVAL': False,
          'KPS_AUG': {'AREA_TH': 32400,
                      'ASPECT_RATIOS': (),
                      'ASPECT_RATIO_H_FLIP': False,
                      'ENABLED': False,
                      'HEUR': 'HM_AVG',
                      'H_FLIP': False,
                      'MAX_SIZE': 4000,
                      'SCALES': (),
                      'SCALE_H_FLIP': False,
                      'SCALE_SIZE_DEP': False},
          'MASK_AUG': {'AREA_TH': 32400,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'ENABLED': False,
                       'HEUR': 'SOFT_AVG',
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False},
          'MAX_SIZE': 1000,
          'NMS': 0.5,
          'PRECOMPUTED_PROPOSALS': False,
          'PROPOSAL_FILES': (),
          'PROPOSAL_LIMIT': 2000,
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 1000,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALE': 600,
          'SCORE_THRESH': 0.05,
          'SOFT_NMS': {'ENABLED': False, 'METHOD': 'linear', 'SIGMA': 0.5},
          'WEAK_SUPERVISE': False},
 'TRAIN': {'ASPECT_CROPPING': False,
           'ASPECT_GROUPING': True,
           'ASPECT_HI': 2,
           'ASPECT_LO': 0.5,
           'BATCH_SIZE_PER_IM': 512,
           'BBOX_INSIDE_WEIGHTS': (1.0, 1.0, 1.0, 1.0),
           'BBOX_NORMALIZE_MEANS': (0.0, 0.0, 0.0, 0.0),
           'BBOX_NORMALIZE_STDS': (0.1, 0.1, 0.2, 0.2),
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'COPY_CLS_TO_DET': False,
           'CROWD_FILTER_THRESH': 0.7,
           'DATASETS': (),
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'FREEZE_BOX_HEAD': True,
           'FREEZE_CONV_BODY': False,
           'FREEZE_RPN': False,
           'GT_MIN_AREA': -1,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_FILES': (),
           'RPN_BATCH_SIZE_PER_IM': 256,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 2000,
           'RPN_STRADDLE_THRESH': 0,
           'SCALES': (600,),
           'SNAPSHOT_ITERS': 2000,
           'SPATIAL_REG': False,
           'USE_FLIPPED': True,
           'WEAK_SUPERVISE': True,
           'WEAK_SUPERVISE_WITH_PRETRAIN': True},
 'VIS': False,
 'VIS_TH': 0.9}
loading annotations into memory...
Done (t=0.22s)
creating index...
index created!
INFO subprocess.py:  59: 0,1,2,3
INFO subprocess.py:  67: gpu_inds: [0, 1, 2, 3]
INFO subprocess.py:  89: detection range command 0: python /home/ubuntu/Detectron.pytorch/tools/test_net.py --range 0 1238 --cfg Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_config.yaml --set TEST.DATASETS '("voc_2007_test",)' --output_dir Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test --load_ckpt Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step3499.pth
INFO subprocess.py:  89: detection range command 1: python /home/ubuntu/Detectron.pytorch/tools/test_net.py --range 1238 2476 --cfg Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_config.yaml --set TEST.DATASETS '("voc_2007_test",)' --output_dir Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test --load_ckpt Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step3499.pth
INFO subprocess.py:  89: detection range command 2: python /home/ubuntu/Detectron.pytorch/tools/test_net.py --range 2476 3714 --cfg Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_config.yaml --set TEST.DATASETS '("voc_2007_test",)' --output_dir Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test --load_ckpt Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step3499.pth
INFO subprocess.py:  89: detection range command 3: python /home/ubuntu/Detectron.pytorch/tools/test_net.py --range 3714 4952 --cfg Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_config.yaml --set TEST.DATASETS '("voc_2007_test",)' --output_dir Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test --load_ckpt Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step3499.pth
INFO subprocess.py: 129: # ---------------------------------------------------------------------------- #
INFO subprocess.py: 131: stdout of subprocess 0 with range [1, 1238]
INFO subprocess.py: 133: # ---------------------------------------------------------------------------- #
INFO test_net.py:  72: Called with args:
INFO test_net.py:  73: Namespace(cfg_file='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_config.yaml', dataset=None, load_ckpt='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step3499.pth', load_detectron=None, multi_gpu_testing=False, num_classes=None, output_dir='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test', range=[0, 1238], set_cfgs=['TEST.DATASETS', '("voc_2007_test",)'], vis=False)
INFO test_net.py: 130: Testing with config:
INFO test_net.py: 131: {'BBOX_XFORM_CLIP': 4.135166556742356,
 'CROP_RESIZE_WITH_MAX_POOL': True,
 'CUDA': False,
 'DATA_DIR': '/home/ubuntu/Detectron.pytorch/data',
 'DATA_LOADER': {'NUM_THREADS': 4},
 'DEBUG': False,
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXPECTED_RESULTS': [],
 'EXPECTED_RESULTS_ATOL': 0.005,
 'EXPECTED_RESULTS_EMAIL': '',
 'EXPECTED_RESULTS_RTOL': 0.1,
 'FAST_RCNN': {'BOX_OUT_STREAMS': 1,
               'CONV_HEAD_DIM': 256,
               'MLP_HEAD_DIM': 1024,
               'NUM_STACKED_CONVS': 4,
               'ROI_BOX_HEAD': 'fast_rcnn_heads.roi_2mlp_head',
               'ROI_XFORM_METHOD': 'RoIAlign',
               'ROI_XFORM_RESOLUTION': 7,
               'ROI_XFORM_SAMPLING_RATIO': 2},
 'FPN': {'COARSEST_STRIDE': 32,
         'DIM': 256,
         'EXTRA_CONV_LEVELS': False,
         'FPN_ON': True,
         'MULTILEVEL_ROIS': True,
         'MULTILEVEL_RPN': True,
         'ROI_CANONICAL_LEVEL': 4,
         'ROI_CANONICAL_SCALE': 224,
         'ROI_MAX_LEVEL': 5,
         'ROI_MIN_LEVEL': 2,
         'RPN_ANCHOR_START_SIZE': 32,
         'RPN_ASPECT_RATIOS': (0.5, 1, 2),
         'RPN_COLLECT_SCALE': 1,
         'RPN_MAX_LEVEL': 6,
         'RPN_MIN_LEVEL': 2,
         'USE_GN': False,
         'ZERO_INIT_LATERAL': False},
 'GROUP_NORM': {'DIM_PER_GP': -1, 'EPSILON': 1e-05, 'NUM_GROUPS': 32},
 'KRCNN': {'CONV_HEAD_DIM': 256,
           'CONV_HEAD_KERNEL': 3,
           'CONV_INIT': 'GaussianFill',
           'DECONV_DIM': 256,
           'DECONV_KERNEL': 4,
           'DILATION': 1,
           'HEATMAP_SIZE': -1,
           'INFERENCE_MIN_SIZE': 0,
           'KEYPOINT_CONFIDENCE': 'bbox',
           'LOSS_WEIGHT': 1.0,
           'MIN_KEYPOINT_COUNT_FOR_VALID_MINIBATCH': 20,
           'NMS_OKS': False,
           'NORMALIZE_BY_VISIBLE_KEYPOINTS': True,
           'NUM_KEYPOINTS': -1,
           'NUM_STACKED_CONVS': 8,
           'ROI_KEYPOINTS_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'UP_SCALE': -1,
           'USE_DECONV': False,
           'USE_DECONV_OUTPUT': False},
 'MATLAB': 'matlab',
 'MODEL': {'BBOX_REG_WEIGHTS': (10.0, 10.0, 5.0, 5.0),
           'CLS_AGNOSTIC_BBOX_REG': False,
           'CONV_BODY': 'FPN.fpn_ResNet101_conv5_body',
           'FASTER_RCNN': True,
           'KEYPOINTS_ON': False,
           'LOAD_IMAGENET_PRETRAINED_WEIGHTS': True,
           'MASK_ON': False,
           'NUM_CLASSES': 21,
           'RPN_ONLY': False,
           'SHARE_RES5': False,
           'TYPE': 'generalized_rcnn',
           'UNSUPERVISED_POSE': False},
 'MRCNN': {'CLS_SPECIFIC_MASK': True,
           'CONV_INIT': 'GaussianFill',
           'DILATION': 2,
           'DIM_REDUCED': 256,
           'MEMORY_EFFICIENT_LOSS': True,
           'RESOLUTION': 14,
           'ROI_MASK_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'THRESH_BINARIZE': 0.5,
           'UPSAMPLE_RATIO': 1,
           'USE_FC_OUTPUT': False,
           'WEIGHT_LOSS_MASK': 1.0},
 'NUM_GPUS': 8,
 'OUTPUT_DIR': 'Outputs',
 'PIXEL_MEANS': array([[[102.9801, 115.9465, 122.7717]]]),
 'POOLING_MODE': 'crop',
 'POOLING_SIZE': 7,
 'PYTORCH_VERSION_LESS_THAN_040': False,
 'RESNETS': {'FREEZE_AT': 2,
             'IMAGENET_PRETRAINED_WEIGHTS': 'data/pretrained_model/resnet101_caffe.pth',
             'NUM_GROUPS': 1,
             'RES5_DILATION': 1,
             'SHORTCUT_FUNC': 'basic_bn_shortcut',
             'STEM_FUNC': 'basic_bn_stem',
             'STRIDE_1X1': True,
             'TRANS_FUNC': 'bottleneck_transformation',
             'USE_GN': False,
             'WIDTH_PER_GROUP': 64},
 'RETINANET': {'ANCHOR_SCALE': 4,
               'ASPECT_RATIOS': (0.5, 1.0, 2.0),
               'BBOX_REG_BETA': 0.11,
               'BBOX_REG_WEIGHT': 1.0,
               'CLASS_SPECIFIC_BBOX': False,
               'INFERENCE_TH': 0.05,
               'LOSS_ALPHA': 0.25,
               'LOSS_GAMMA': 2.0,
               'NEGATIVE_OVERLAP': 0.4,
               'NUM_CONVS': 4,
               'POSITIVE_OVERLAP': 0.5,
               'PRE_NMS_TOP_N': 1000,
               'PRIOR_PROB': 0.01,
               'RETINANET_ON': False,
               'SCALES_PER_OCTAVE': 3,
               'SHARE_CLS_BBOX_TOWER': False,
               'SOFTMAX': False},
 'RFCN': {'PS_GRID_SIZE': 3},
 'RNG_SEED': 3,
 'ROOT_DIR': '/home/ubuntu/Detectron.pytorch',
 'RPN': {'ASPECT_RATIOS': (0.5, 1, 2),
         'CLS_ACTIVATION': 'sigmoid',
         'OUT_DIM': 512,
         'OUT_DIM_AS_IN_DIM': True,
         'RPN_ON': True,
         'SIZES': (64, 128, 256, 512),
         'STRIDE': 16},
 'SOLVER': {'BASE_LR': 2e-05,
            'BIAS_DOUBLE_LR': True,
            'BIAS_WEIGHT_DECAY': False,
            'GAMMA': 0.1,
            'LOG_LR_CHANGE_THRESHOLD': 1.1,
            'LRS': [],
            'LR_POLICY': 'steps_with_decay',
            'MAX_ITER': 10000,
            'MOMENTUM': 0.9,
            'SCALE_MOMENTUM': True,
            'SCALE_MOMENTUM_THRESHOLD': 1.1,
            'STEPS': [0, 5000, 8000],
            'STEP_SIZE': 30000,
            'TYPE': 'SGD',
            'WARM_UP_FACTOR': 0.3333333333333333,
            'WARM_UP_ITERS': 500,
            'WARM_UP_METHOD': 'linear',
            'WEIGHT_DECAY': 0.0001,
            'WEIGHT_DECAY_GN': 0.0},
 'TEST': {'BBOX_AUG': {'AREA_TH_HI': 32400,
                       'AREA_TH_LO': 2500,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'COORD_HEUR': 'UNION',
                       'ENABLED': False,
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False,
                       'SCORE_HEUR': 'UNION'},
          'BBOX_REG': True,
          'BBOX_VOTE': {'ENABLED': False,
                        'SCORING_METHOD': 'ID',
                        'SCORING_METHOD_BETA': 1.0,
                        'VOTE_TH': 0.8},
          'COMPETITION_MODE': True,
          'DATASETS': ('voc_2007_test',),
          'DETECTIONS_PER_IM': 100,
          'FORCE_JSON_DATASET_EVAL': False,
          'KPS_AUG': {'AREA_TH': 32400,
                      'ASPECT_RATIOS': (),
                      'ASPECT_RATIO_H_FLIP': False,
                      'ENABLED': False,
                      'HEUR': 'HM_AVG',
                      'H_FLIP': False,
                      'MAX_SIZE': 4000,
                      'SCALES': (),
                      'SCALE_H_FLIP': False,
                      'SCALE_SIZE_DEP': False},
          'MASK_AUG': {'AREA_TH': 32400,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'ENABLED': False,
                       'HEUR': 'SOFT_AVG',
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False},
          'MAX_SIZE': 1000,
          'NMS': 0.5,
          'PRECOMPUTED_PROPOSALS': False,
          'PROPOSAL_FILES': (),
          'PROPOSAL_LIMIT': 2000,
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 1000,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALE': 600,
          'SCORE_THRESH': 0.05,
          'SOFT_NMS': {'ENABLED': False, 'METHOD': 'linear', 'SIGMA': 0.5},
          'WEAK_SUPERVISE': False},
 'TRAIN': {'ASPECT_CROPPING': False,
           'ASPECT_GROUPING': True,
           'ASPECT_HI': 2,
           'ASPECT_LO': 0.5,
           'BATCH_SIZE_PER_IM': 512,
           'BBOX_INSIDE_WEIGHTS': (1.0, 1.0, 1.0, 1.0),
           'BBOX_NORMALIZE_MEANS': (0.0, 0.0, 0.0, 0.0),
           'BBOX_NORMALIZE_STDS': (0.1, 0.1, 0.2, 0.2),
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'COPY_CLS_TO_DET': False,
           'CROWD_FILTER_THRESH': 0.7,
           'DATASETS': (),
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'FREEZE_BOX_HEAD': True,
           'FREEZE_CONV_BODY': False,
           'FREEZE_RPN': False,
           'GT_MIN_AREA': -1,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_FILES': (),
           'RPN_BATCH_SIZE_PER_IM': 256,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 2000,
           'RPN_STRADDLE_THRESH': 0,
           'SCALES': (600,),
           'SNAPSHOT_ITERS': 2000,
           'SPATIAL_REG': False,
           'USE_FLIPPED': True,
           'WEAK_SUPERVISE': True,
           'WEAK_SUPERVISE_WITH_PRETRAIN': True},
 'VIS': False,
 'VIS_TH': 0.9}
loading annotations into memory...
Done (t=0.13s)
creating index...
index created!
INFO test_engine.py: 324: training mode? : False
INFO test_engine.py: 331: loading checkpoint Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step3499.pth
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1/1238 0.641s + 0.002s (eta: 0:13:14)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 11/1238 0.501s + 0.002s (eta: 0:10:16)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 21/1238 0.483s + 0.001s (eta: 0:09:49)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 31/1238 0.487s + 0.001s (eta: 0:09:49)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 41/1238 0.489s + 0.001s (eta: 0:09:46)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 51/1238 0.500s + 0.002s (eta: 0:09:55)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 61/1238 0.494s + 0.002s (eta: 0:09:43)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 71/1238 0.490s + 0.002s (eta: 0:09:34)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 81/1238 0.491s + 0.002s (eta: 0:09:31)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 91/1238 0.496s + 0.002s (eta: 0:09:32)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 101/1238 0.496s + 0.003s (eta: 0:09:26)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 111/1238 0.501s + 0.003s (eta: 0:09:27)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 121/1238 0.503s + 0.002s (eta: 0:09:24)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 131/1238 0.504s + 0.002s (eta: 0:09:20)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 141/1238 0.497s + 0.002s (eta: 0:09:07)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 151/1238 0.498s + 0.002s (eta: 0:09:04)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 161/1238 0.499s + 0.002s (eta: 0:08:59)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 171/1238 0.499s + 0.002s (eta: 0:08:54)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 181/1238 0.500s + 0.002s (eta: 0:08:50)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 191/1238 0.500s + 0.002s (eta: 0:08:45)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 201/1238 0.499s + 0.002s (eta: 0:08:40)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 211/1238 0.500s + 0.002s (eta: 0:08:35)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 221/1238 0.500s + 0.002s (eta: 0:08:30)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 231/1238 0.500s + 0.002s (eta: 0:08:26)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 241/1238 0.500s + 0.002s (eta: 0:08:20)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 251/1238 0.499s + 0.002s (eta: 0:08:14)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 261/1238 0.497s + 0.002s (eta: 0:08:07)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 271/1238 0.497s + 0.002s (eta: 0:08:02)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 281/1238 0.497s + 0.002s (eta: 0:07:57)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 291/1238 0.496s + 0.002s (eta: 0:07:51)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 301/1238 0.496s + 0.002s (eta: 0:07:46)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 311/1238 0.496s + 0.002s (eta: 0:07:41)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 321/1238 0.496s + 0.002s (eta: 0:07:36)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 331/1238 0.496s + 0.002s (eta: 0:07:32)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 341/1238 0.497s + 0.002s (eta: 0:07:27)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 351/1238 0.497s + 0.002s (eta: 0:07:23)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 361/1238 0.498s + 0.002s (eta: 0:07:18)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 371/1238 0.498s + 0.002s (eta: 0:07:13)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 381/1238 0.498s + 0.002s (eta: 0:07:08)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 391/1238 0.498s + 0.002s (eta: 0:07:03)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 401/1238 0.498s + 0.002s (eta: 0:06:58)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 411/1238 0.497s + 0.002s (eta: 0:06:53)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 421/1238 0.495s + 0.002s (eta: 0:06:46)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 431/1238 0.492s + 0.002s (eta: 0:06:38)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 441/1238 0.489s + 0.002s (eta: 0:06:31)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 451/1238 0.487s + 0.002s (eta: 0:06:24)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 461/1238 0.484s + 0.002s (eta: 0:06:17)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 471/1238 0.483s + 0.002s (eta: 0:06:12)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 481/1238 0.482s + 0.002s (eta: 0:06:06)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 491/1238 0.482s + 0.002s (eta: 0:06:01)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 501/1238 0.483s + 0.002s (eta: 0:05:57)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 511/1238 0.482s + 0.002s (eta: 0:05:52)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 521/1238 0.483s + 0.002s (eta: 0:05:47)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 531/1238 0.483s + 0.002s (eta: 0:05:43)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 541/1238 0.483s + 0.002s (eta: 0:05:38)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 551/1238 0.483s + 0.002s (eta: 0:05:33)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 561/1238 0.483s + 0.002s (eta: 0:05:28)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 571/1238 0.483s + 0.002s (eta: 0:05:23)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 581/1238 0.483s + 0.002s (eta: 0:05:18)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 591/1238 0.484s + 0.002s (eta: 0:05:14)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 601/1238 0.484s + 0.002s (eta: 0:05:09)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 611/1238 0.485s + 0.002s (eta: 0:05:05)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 621/1238 0.485s + 0.002s (eta: 0:05:00)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 631/1238 0.484s + 0.002s (eta: 0:04:55)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 641/1238 0.485s + 0.002s (eta: 0:04:50)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 651/1238 0.485s + 0.002s (eta: 0:04:45)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 661/1238 0.485s + 0.002s (eta: 0:04:41)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 671/1238 0.486s + 0.002s (eta: 0:04:36)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 681/1238 0.485s + 0.002s (eta: 0:04:31)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 691/1238 0.485s + 0.002s (eta: 0:04:26)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 701/1238 0.486s + 0.002s (eta: 0:04:21)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 711/1238 0.486s + 0.002s (eta: 0:04:17)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 721/1238 0.487s + 0.002s (eta: 0:04:12)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 731/1238 0.486s + 0.002s (eta: 0:04:07)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 741/1238 0.486s + 0.002s (eta: 0:04:02)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 751/1238 0.485s + 0.002s (eta: 0:03:57)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 761/1238 0.485s + 0.002s (eta: 0:03:52)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 771/1238 0.485s + 0.002s (eta: 0:03:47)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 781/1238 0.485s + 0.002s (eta: 0:03:42)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 791/1238 0.485s + 0.002s (eta: 0:03:37)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 801/1238 0.485s + 0.002s (eta: 0:03:32)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 811/1238 0.485s + 0.002s (eta: 0:03:27)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 821/1238 0.485s + 0.002s (eta: 0:03:22)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 831/1238 0.485s + 0.002s (eta: 0:03:18)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 841/1238 0.485s + 0.002s (eta: 0:03:13)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 851/1238 0.485s + 0.002s (eta: 0:03:08)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 861/1238 0.485s + 0.002s (eta: 0:03:03)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 871/1238 0.486s + 0.002s (eta: 0:02:58)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 881/1238 0.486s + 0.002s (eta: 0:02:54)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 891/1238 0.486s + 0.002s (eta: 0:02:49)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 901/1238 0.486s + 0.002s (eta: 0:02:44)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 911/1238 0.485s + 0.002s (eta: 0:02:39)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 921/1238 0.485s + 0.002s (eta: 0:02:34)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 931/1238 0.485s + 0.002s (eta: 0:02:29)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 941/1238 0.485s + 0.002s (eta: 0:02:24)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 951/1238 0.486s + 0.002s (eta: 0:02:20)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 961/1238 0.486s + 0.002s (eta: 0:02:15)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 971/1238 0.486s + 0.002s (eta: 0:02:10)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 981/1238 0.486s + 0.002s (eta: 0:02:05)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 991/1238 0.486s + 0.002s (eta: 0:02:00)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1001/1238 0.486s + 0.002s (eta: 0:01:55)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1011/1238 0.486s + 0.002s (eta: 0:01:50)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1021/1238 0.486s + 0.002s (eta: 0:01:45)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1031/1238 0.486s + 0.002s (eta: 0:01:40)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1041/1238 0.486s + 0.002s (eta: 0:01:36)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1051/1238 0.486s + 0.002s (eta: 0:01:31)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1061/1238 0.486s + 0.002s (eta: 0:01:26)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1071/1238 0.487s + 0.002s (eta: 0:01:21)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1081/1238 0.487s + 0.002s (eta: 0:01:16)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1091/1238 0.487s + 0.002s (eta: 0:01:11)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1101/1238 0.487s + 0.002s (eta: 0:01:07)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1111/1238 0.487s + 0.002s (eta: 0:01:02)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1121/1238 0.487s + 0.002s (eta: 0:00:57)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1131/1238 0.487s + 0.002s (eta: 0:00:52)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1141/1238 0.487s + 0.002s (eta: 0:00:47)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1151/1238 0.487s + 0.002s (eta: 0:00:42)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1161/1238 0.487s + 0.002s (eta: 0:00:37)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1171/1238 0.487s + 0.002s (eta: 0:00:32)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1181/1238 0.487s + 0.002s (eta: 0:00:27)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1191/1238 0.487s + 0.002s (eta: 0:00:22)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1201/1238 0.488s + 0.002s (eta: 0:00:18)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1211/1238 0.488s + 0.002s (eta: 0:00:13)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1221/1238 0.488s + 0.002s (eta: 0:00:08)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1231/1238 0.488s + 0.002s (eta: 0:00:03)
INFO test_engine.py: 314: Wrote detections to: /home/ubuntu/Detectron.pytorch/Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_0_1238.pkl
/home/ubuntu/anaconda3/envs/pytorch41/lib/python3.7/site-packages/torch/nn/functional.py:1890: UserWarning: nn.functional.upsample is deprecated. Use nn.functional.interpolate instead.
  warnings.warn("nn.functional.upsample is deprecated. Use nn.functional.interpolate instead.")
INFO subprocess.py: 129: # ---------------------------------------------------------------------------- #
INFO subprocess.py: 131: stdout of subprocess 1 with range [1239, 2476]
INFO subprocess.py: 133: # ---------------------------------------------------------------------------- #
INFO test_net.py:  72: Called with args:
INFO test_net.py:  73: Namespace(cfg_file='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_config.yaml', dataset=None, load_ckpt='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step2999.pth', load_detectron=None, multi_gpu_testing=False, num_classes=None, output_dir='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test', range=[1238, 2476], set_cfgs=['TEST.DATASETS', '("voc_2007_test",)'], vis=False)
INFO test_net.py: 130: Testing with config:
INFO test_net.py: 131: {'BBOX_XFORM_CLIP': 4.135166556742356,
 'CROP_RESIZE_WITH_MAX_POOL': True,
 'CUDA': False,
 'DATA_DIR': '/home/ubuntu/Detectron.pytorch/data',
 'DATA_LOADER': {'NUM_THREADS': 4},
 'DEBUG': False,
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXPECTED_RESULTS': [],
 'EXPECTED_RESULTS_ATOL': 0.005,
 'EXPECTED_RESULTS_EMAIL': '',
 'EXPECTED_RESULTS_RTOL': 0.1,
 'FAST_RCNN': {'BOX_OUT_STREAMS': 1,
               'CONV_HEAD_DIM': 256,
               'MLP_HEAD_DIM': 1024,
               'NUM_STACKED_CONVS': 4,
               'ROI_BOX_HEAD': 'fast_rcnn_heads.roi_2mlp_head',
               'ROI_XFORM_METHOD': 'RoIAlign',
               'ROI_XFORM_RESOLUTION': 7,
               'ROI_XFORM_SAMPLING_RATIO': 2},
 'FPN': {'COARSEST_STRIDE': 32,
         'DIM': 256,
         'EXTRA_CONV_LEVELS': False,
         'FPN_ON': True,
         'MULTILEVEL_ROIS': True,
         'MULTILEVEL_RPN': True,
         'ROI_CANONICAL_LEVEL': 4,
         'ROI_CANONICAL_SCALE': 224,
         'ROI_MAX_LEVEL': 5,
         'ROI_MIN_LEVEL': 2,
         'RPN_ANCHOR_START_SIZE': 32,
         'RPN_ASPECT_RATIOS': (0.5, 1, 2),
         'RPN_COLLECT_SCALE': 1,
         'RPN_MAX_LEVEL': 6,
         'RPN_MIN_LEVEL': 2,
         'USE_GN': False,
         'ZERO_INIT_LATERAL': False},
 'GROUP_NORM': {'DIM_PER_GP': -1, 'EPSILON': 1e-05, 'NUM_GROUPS': 32},
 'KRCNN': {'CONV_HEAD_DIM': 256,
           'CONV_HEAD_KERNEL': 3,
           'CONV_INIT': 'GaussianFill',
           'DECONV_DIM': 256,
           'DECONV_KERNEL': 4,
           'DILATION': 1,
           'HEATMAP_SIZE': -1,
           'INFERENCE_MIN_SIZE': 0,
           'KEYPOINT_CONFIDENCE': 'bbox',
           'LOSS_WEIGHT': 1.0,
           'MIN_KEYPOINT_COUNT_FOR_VALID_MINIBATCH': 20,
           'NMS_OKS': False,
           'NORMALIZE_BY_VISIBLE_KEYPOINTS': True,
           'NUM_KEYPOINTS': -1,
           'NUM_STACKED_CONVS': 8,
           'ROI_KEYPOINTS_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'UP_SCALE': -1,
           'USE_DECONV': False,
           'USE_DECONV_OUTPUT': False},
 'MATLAB': 'matlab',
 'MODEL': {'BBOX_REG_WEIGHTS': (10.0, 10.0, 5.0, 5.0),
           'CLS_AGNOSTIC_BBOX_REG': False,
           'CONV_BODY': 'FPN.fpn_ResNet101_conv5_body',
           'FASTER_RCNN': True,
           'KEYPOINTS_ON': False,
           'LOAD_IMAGENET_PRETRAINED_WEIGHTS': True,
           'MASK_ON': False,
           'NUM_CLASSES': 21,
           'RPN_ONLY': False,
           'SHARE_RES5': False,
           'TYPE': 'generalized_rcnn',
           'UNSUPERVISED_POSE': False},
 'MRCNN': {'CLS_SPECIFIC_MASK': True,
           'CONV_INIT': 'GaussianFill',
           'DILATION': 2,
           'DIM_REDUCED': 256,
           'MEMORY_EFFICIENT_LOSS': True,
           'RESOLUTION': 14,
           'ROI_MASK_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'THRESH_BINARIZE': 0.5,
           'UPSAMPLE_RATIO': 1,
           'USE_FC_OUTPUT': False,
           'WEIGHT_LOSS_MASK': 1.0},
 'NUM_GPUS': 8,
 'OUTPUT_DIR': 'Outputs',
 'PIXEL_MEANS': array([[[102.9801, 115.9465, 122.7717]]]),
 'POOLING_MODE': 'crop',
 'POOLING_SIZE': 7,
 'PYTORCH_VERSION_LESS_THAN_040': False,
 'RESNETS': {'FREEZE_AT': 2,
             'IMAGENET_PRETRAINED_WEIGHTS': 'data/pretrained_model/resnet101_caffe.pth',
             'NUM_GROUPS': 1,
             'RES5_DILATION': 1,
             'SHORTCUT_FUNC': 'basic_bn_shortcut',
             'STEM_FUNC': 'basic_bn_stem',
             'STRIDE_1X1': True,
             'TRANS_FUNC': 'bottleneck_transformation',
             'USE_GN': False,
             'WIDTH_PER_GROUP': 64},
 'RETINANET': {'ANCHOR_SCALE': 4,
               'ASPECT_RATIOS': (0.5, 1.0, 2.0),
               'BBOX_REG_BETA': 0.11,
               'BBOX_REG_WEIGHT': 1.0,
               'CLASS_SPECIFIC_BBOX': False,
               'INFERENCE_TH': 0.05,
               'LOSS_ALPHA': 0.25,
               'LOSS_GAMMA': 2.0,
               'NEGATIVE_OVERLAP': 0.4,
               'NUM_CONVS': 4,
               'POSITIVE_OVERLAP': 0.5,
               'PRE_NMS_TOP_N': 1000,
               'PRIOR_PROB': 0.01,
               'RETINANET_ON': False,
               'SCALES_PER_OCTAVE': 3,
               'SHARE_CLS_BBOX_TOWER': False,
               'SOFTMAX': False},
 'RFCN': {'PS_GRID_SIZE': 3},
 'RNG_SEED': 3,
 'ROOT_DIR': '/home/ubuntu/Detectron.pytorch',
 'RPN': {'ASPECT_RATIOS': (0.5, 1, 2),
         'CLS_ACTIVATION': 'sigmoid',
         'OUT_DIM': 512,
         'OUT_DIM_AS_IN_DIM': True,
         'RPN_ON': True,
         'SIZES': (64, 128, 256, 512),
         'STRIDE': 16},
 'SOLVER': {'BASE_LR': 2e-05,
            'BIAS_DOUBLE_LR': True,
            'BIAS_WEIGHT_DECAY': False,
            'GAMMA': 0.1,
            'LOG_LR_CHANGE_THRESHOLD': 1.1,
            'LRS': [],
            'LR_POLICY': 'steps_with_decay',
            'MAX_ITER': 10000,
            'MOMENTUM': 0.9,
            'SCALE_MOMENTUM': True,
            'SCALE_MOMENTUM_THRESHOLD': 1.1,
            'STEPS': [0, 5000, 8000],
            'STEP_SIZE': 30000,
            'TYPE': 'SGD',
            'WARM_UP_FACTOR': 0.3333333333333333,
            'WARM_UP_ITERS': 500,
            'WARM_UP_METHOD': 'linear',
            'WEIGHT_DECAY': 0.0001,
            'WEIGHT_DECAY_GN': 0.0},
 'TEST': {'BBOX_AUG': {'AREA_TH_HI': 32400,
                       'AREA_TH_LO': 2500,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'COORD_HEUR': 'UNION',
                       'ENABLED': False,
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False,
                       'SCORE_HEUR': 'UNION'},
          'BBOX_REG': True,
          'BBOX_VOTE': {'ENABLED': False,
                        'SCORING_METHOD': 'ID',
                        'SCORING_METHOD_BETA': 1.0,
                        'VOTE_TH': 0.8},
          'COMPETITION_MODE': True,
          'DATASETS': ('voc_2007_test',),
          'DETECTIONS_PER_IM': 100,
          'FORCE_JSON_DATASET_EVAL': False,
          'KPS_AUG': {'AREA_TH': 32400,
                      'ASPECT_RATIOS': (),
                      'ASPECT_RATIO_H_FLIP': False,
                      'ENABLED': False,
                      'HEUR': 'HM_AVG',
                      'H_FLIP': False,
                      'MAX_SIZE': 4000,
                      'SCALES': (),
                      'SCALE_H_FLIP': False,
                      'SCALE_SIZE_DEP': False},
          'MASK_AUG': {'AREA_TH': 32400,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'ENABLED': False,
                       'HEUR': 'SOFT_AVG',
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False},
          'MAX_SIZE': 1000,
          'NMS': 0.5,
          'PRECOMPUTED_PROPOSALS': False,
          'PROPOSAL_FILES': (),
          'PROPOSAL_LIMIT': 2000,
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 1000,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALE': 600,
          'SCORE_THRESH': 0.05,
          'SOFT_NMS': {'ENABLED': False, 'METHOD': 'linear', 'SIGMA': 0.5},
          'WEAK_SUPERVISE': False},
 'TRAIN': {'ASPECT_CROPPING': False,
           'ASPECT_GROUPING': True,
           'ASPECT_HI': 2,
           'ASPECT_LO': 0.5,
           'BATCH_SIZE_PER_IM': 512,
           'BBOX_INSIDE_WEIGHTS': (1.0, 1.0, 1.0, 1.0),
           'BBOX_NORMALIZE_MEANS': (0.0, 0.0, 0.0, 0.0),
           'BBOX_NORMALIZE_STDS': (0.1, 0.1, 0.2, 0.2),
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'COPY_CLS_TO_DET': False,
           'CROWD_FILTER_THRESH': 0.7,
           'DATASETS': (),
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'FREEZE_BOX_HEAD': True,
           'FREEZE_CONV_BODY': False,
           'FREEZE_RPN': False,
           'GT_MIN_AREA': -1,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_FILES': (),
           'RPN_BATCH_SIZE_PER_IM': 256,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 2000,
           'RPN_STRADDLE_THRESH': 0,
           'SCALES': (600,),
           'SNAPSHOT_ITERS': 2000,
           'SPATIAL_REG': False,
           'USE_FLIPPED': True,
           'WEAK_SUPERVISE': True,
           'WEAK_SUPERVISE_WITH_PRETRAIN': True},
 'VIS': False,
 'VIS_TH': 0.9}
loading annotations into memory...
Done (t=0.10s)
creating index...
index created!
INFO test_engine.py: 324: training mode? : False
INFO test_engine.py: 331: loading checkpoint Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step2999.pth
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1239/2476 0.567s + 0.002s (eta: 0:11:42)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1249/2476 0.462s + 0.002s (eta: 0:09:28)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1259/2476 0.465s + 0.001s (eta: 0:09:27)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1269/2476 0.473s + 0.002s (eta: 0:09:33)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1279/2476 0.477s + 0.002s (eta: 0:09:33)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1289/2476 0.481s + 0.002s (eta: 0:09:32)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1299/2476 0.482s + 0.002s (eta: 0:09:29)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1309/2476 0.487s + 0.002s (eta: 0:09:30)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1319/2476 0.492s + 0.002s (eta: 0:09:31)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1329/2476 0.489s + 0.002s (eta: 0:09:23)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1339/2476 0.487s + 0.002s (eta: 0:09:15)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1349/2476 0.486s + 0.002s (eta: 0:09:09)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1359/2476 0.489s + 0.002s (eta: 0:09:08)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1369/2476 0.494s + 0.002s (eta: 0:09:09)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1379/2476 0.497s + 0.002s (eta: 0:09:06)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1389/2476 0.496s + 0.002s (eta: 0:09:00)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1399/2476 0.492s + 0.002s (eta: 0:08:52)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1409/2476 0.493s + 0.002s (eta: 0:08:47)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1419/2476 0.495s + 0.002s (eta: 0:08:44)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1429/2476 0.496s + 0.002s (eta: 0:08:41)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1439/2476 0.494s + 0.002s (eta: 0:08:34)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1449/2476 0.497s + 0.002s (eta: 0:08:31)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1459/2476 0.496s + 0.002s (eta: 0:08:26)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1469/2476 0.495s + 0.002s (eta: 0:08:20)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1479/2476 0.495s + 0.002s (eta: 0:08:14)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1489/2476 0.494s + 0.002s (eta: 0:08:09)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1499/2476 0.494s + 0.002s (eta: 0:08:04)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1509/2476 0.495s + 0.002s (eta: 0:08:00)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1519/2476 0.495s + 0.002s (eta: 0:07:55)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1529/2476 0.493s + 0.002s (eta: 0:07:48)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1539/2476 0.493s + 0.002s (eta: 0:07:43)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1549/2476 0.493s + 0.002s (eta: 0:07:38)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1559/2476 0.493s + 0.002s (eta: 0:07:33)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1569/2476 0.493s + 0.002s (eta: 0:07:29)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1579/2476 0.493s + 0.002s (eta: 0:07:24)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1589/2476 0.493s + 0.002s (eta: 0:07:18)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1599/2476 0.493s + 0.002s (eta: 0:07:14)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1609/2476 0.494s + 0.002s (eta: 0:07:09)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1619/2476 0.492s + 0.002s (eta: 0:07:03)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1629/2476 0.492s + 0.002s (eta: 0:06:58)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1639/2476 0.492s + 0.002s (eta: 0:06:54)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1649/2476 0.492s + 0.002s (eta: 0:06:48)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1659/2476 0.492s + 0.002s (eta: 0:06:43)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1669/2476 0.492s + 0.002s (eta: 0:06:38)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1679/2476 0.493s + 0.002s (eta: 0:06:34)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1689/2476 0.495s + 0.002s (eta: 0:06:30)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1699/2476 0.495s + 0.002s (eta: 0:06:26)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1709/2476 0.495s + 0.002s (eta: 0:06:21)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1719/2476 0.495s + 0.002s (eta: 0:06:16)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1729/2476 0.495s + 0.002s (eta: 0:06:11)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1739/2476 0.496s + 0.002s (eta: 0:06:07)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1749/2476 0.496s + 0.002s (eta: 0:06:02)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1759/2476 0.496s + 0.002s (eta: 0:05:56)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1769/2476 0.497s + 0.002s (eta: 0:05:52)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1779/2476 0.497s + 0.002s (eta: 0:05:47)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1789/2476 0.496s + 0.002s (eta: 0:05:42)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1799/2476 0.496s + 0.002s (eta: 0:05:37)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1809/2476 0.496s + 0.002s (eta: 0:05:32)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1819/2476 0.496s + 0.002s (eta: 0:05:27)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1829/2476 0.496s + 0.002s (eta: 0:05:22)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1839/2476 0.495s + 0.002s (eta: 0:05:16)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1849/2476 0.495s + 0.002s (eta: 0:05:11)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1859/2476 0.495s + 0.002s (eta: 0:05:06)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1869/2476 0.494s + 0.002s (eta: 0:05:01)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1879/2476 0.494s + 0.002s (eta: 0:04:56)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1889/2476 0.494s + 0.002s (eta: 0:04:51)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1899/2476 0.494s + 0.002s (eta: 0:04:46)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1909/2476 0.494s + 0.002s (eta: 0:04:41)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1919/2476 0.494s + 0.002s (eta: 0:04:36)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1929/2476 0.494s + 0.002s (eta: 0:04:31)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1939/2476 0.495s + 0.002s (eta: 0:04:26)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1949/2476 0.495s + 0.002s (eta: 0:04:21)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1959/2476 0.495s + 0.002s (eta: 0:04:16)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1969/2476 0.495s + 0.002s (eta: 0:04:11)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1979/2476 0.495s + 0.002s (eta: 0:04:06)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1989/2476 0.495s + 0.002s (eta: 0:04:02)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1999/2476 0.486s + 0.002s (eta: 0:03:52)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2009/2476 0.486s + 0.002s (eta: 0:03:47)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2019/2476 0.486s + 0.002s (eta: 0:03:42)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2029/2476 0.486s + 0.002s (eta: 0:03:38)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2039/2476 0.486s + 0.002s (eta: 0:03:33)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2049/2476 0.487s + 0.002s (eta: 0:03:28)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2059/2476 0.487s + 0.002s (eta: 0:03:23)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2069/2476 0.486s + 0.002s (eta: 0:03:18)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2079/2476 0.487s + 0.002s (eta: 0:03:13)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2089/2476 0.487s + 0.002s (eta: 0:03:09)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2099/2476 0.487s + 0.002s (eta: 0:03:04)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2109/2476 0.487s + 0.002s (eta: 0:02:59)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2119/2476 0.487s + 0.002s (eta: 0:02:54)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2129/2476 0.486s + 0.002s (eta: 0:02:49)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2139/2476 0.486s + 0.002s (eta: 0:02:44)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2149/2476 0.486s + 0.002s (eta: 0:02:39)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2159/2476 0.486s + 0.002s (eta: 0:02:34)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2169/2476 0.486s + 0.002s (eta: 0:02:29)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2179/2476 0.486s + 0.002s (eta: 0:02:24)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2189/2476 0.486s + 0.002s (eta: 0:02:20)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2199/2476 0.486s + 0.002s (eta: 0:02:15)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2209/2476 0.486s + 0.002s (eta: 0:02:10)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2219/2476 0.486s + 0.002s (eta: 0:02:05)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2229/2476 0.486s + 0.002s (eta: 0:02:00)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2239/2476 0.486s + 0.002s (eta: 0:01:55)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2249/2476 0.486s + 0.002s (eta: 0:01:50)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2259/2476 0.486s + 0.002s (eta: 0:01:45)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2269/2476 0.486s + 0.002s (eta: 0:01:41)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2279/2476 0.487s + 0.002s (eta: 0:01:36)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2289/2476 0.487s + 0.002s (eta: 0:01:31)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2299/2476 0.487s + 0.002s (eta: 0:01:26)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2309/2476 0.487s + 0.002s (eta: 0:01:21)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2319/2476 0.487s + 0.002s (eta: 0:01:16)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2329/2476 0.487s + 0.002s (eta: 0:01:11)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2339/2476 0.488s + 0.002s (eta: 0:01:07)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2349/2476 0.488s + 0.002s (eta: 0:01:02)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2359/2476 0.488s + 0.002s (eta: 0:00:57)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2369/2476 0.488s + 0.002s (eta: 0:00:52)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2379/2476 0.488s + 0.002s (eta: 0:00:47)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2389/2476 0.488s + 0.002s (eta: 0:00:42)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2399/2476 0.487s + 0.002s (eta: 0:00:37)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2409/2476 0.488s + 0.002s (eta: 0:00:32)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2419/2476 0.488s + 0.002s (eta: 0:00:27)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2429/2476 0.488s + 0.002s (eta: 0:00:23)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2439/2476 0.488s + 0.002s (eta: 0:00:18)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2449/2476 0.488s + 0.002s (eta: 0:00:13)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2459/2476 0.488s + 0.002s (eta: 0:00:08)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2469/2476 0.488s + 0.002s (eta: 0:00:03)
INFO test_engine.py: 314: Wrote detections to: /home/ubuntu/Detectron.pytorch/Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_1238_2476.pkl
/home/ubuntu/anaconda3/envs/pytorch41/lib/python3.7/site-packages/torch/nn/functional.py:1890: UserWarning: nn.functional.upsample is deprecated. Use nn.functional.interpolate instead.
  warnings.warn("nn.functional.upsample is deprecated. Use nn.functional.interpolate instead.")

INFO subprocess.py: 129: # ---------------------------------------------------------------------------- #
INFO subprocess.py: 131: stdout of subprocess 2 with range [2477, 3714]
INFO subprocess.py: 133: # ---------------------------------------------------------------------------- #
INFO test_net.py:  72: Called with args:
INFO test_net.py:  73: Namespace(cfg_file='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_config.yaml', dataset=None, load_ckpt='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step2999.pth', load_detectron=None, multi_gpu_testing=False, num_classes=None, output_dir='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test', range=[2476, 3714], set_cfgs=['TEST.DATASETS', '("voc_2007_test",)'], vis=False)
INFO test_net.py: 130: Testing with config:
INFO test_net.py: 131: {'BBOX_XFORM_CLIP': 4.135166556742356,
 'CROP_RESIZE_WITH_MAX_POOL': True,
 'CUDA': False,
 'DATA_DIR': '/home/ubuntu/Detectron.pytorch/data',
 'DATA_LOADER': {'NUM_THREADS': 4},
 'DEBUG': False,
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXPECTED_RESULTS': [],
 'EXPECTED_RESULTS_ATOL': 0.005,
 'EXPECTED_RESULTS_EMAIL': '',
 'EXPECTED_RESULTS_RTOL': 0.1,
 'FAST_RCNN': {'BOX_OUT_STREAMS': 1,
               'CONV_HEAD_DIM': 256,
               'MLP_HEAD_DIM': 1024,
               'NUM_STACKED_CONVS': 4,
               'ROI_BOX_HEAD': 'fast_rcnn_heads.roi_2mlp_head',
               'ROI_XFORM_METHOD': 'RoIAlign',
               'ROI_XFORM_RESOLUTION': 7,
               'ROI_XFORM_SAMPLING_RATIO': 2},
 'FPN': {'COARSEST_STRIDE': 32,
         'DIM': 256,
         'EXTRA_CONV_LEVELS': False,
         'FPN_ON': True,
         'MULTILEVEL_ROIS': True,
         'MULTILEVEL_RPN': True,
         'ROI_CANONICAL_LEVEL': 4,
         'ROI_CANONICAL_SCALE': 224,
         'ROI_MAX_LEVEL': 5,
         'ROI_MIN_LEVEL': 2,
         'RPN_ANCHOR_START_SIZE': 32,
         'RPN_ASPECT_RATIOS': (0.5, 1, 2),
         'RPN_COLLECT_SCALE': 1,
         'RPN_MAX_LEVEL': 6,
         'RPN_MIN_LEVEL': 2,
         'USE_GN': False,
         'ZERO_INIT_LATERAL': False},
 'GROUP_NORM': {'DIM_PER_GP': -1, 'EPSILON': 1e-05, 'NUM_GROUPS': 32},
 'KRCNN': {'CONV_HEAD_DIM': 256,
           'CONV_HEAD_KERNEL': 3,
           'CONV_INIT': 'GaussianFill',
           'DECONV_DIM': 256,
           'DECONV_KERNEL': 4,
           'DILATION': 1,
           'HEATMAP_SIZE': -1,
           'INFERENCE_MIN_SIZE': 0,
           'KEYPOINT_CONFIDENCE': 'bbox',
           'LOSS_WEIGHT': 1.0,
           'MIN_KEYPOINT_COUNT_FOR_VALID_MINIBATCH': 20,
           'NMS_OKS': False,
           'NORMALIZE_BY_VISIBLE_KEYPOINTS': True,
           'NUM_KEYPOINTS': -1,
           'NUM_STACKED_CONVS': 8,
           'ROI_KEYPOINTS_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'UP_SCALE': -1,
           'USE_DECONV': False,
           'USE_DECONV_OUTPUT': False},
 'MATLAB': 'matlab',
 'MODEL': {'BBOX_REG_WEIGHTS': (10.0, 10.0, 5.0, 5.0),
           'CLS_AGNOSTIC_BBOX_REG': False,
           'CONV_BODY': 'FPN.fpn_ResNet101_conv5_body',
           'FASTER_RCNN': True,
           'KEYPOINTS_ON': False,
           'LOAD_IMAGENET_PRETRAINED_WEIGHTS': True,
           'MASK_ON': False,
           'NUM_CLASSES': 21,
           'RPN_ONLY': False,
           'SHARE_RES5': False,
           'TYPE': 'generalized_rcnn',
           'UNSUPERVISED_POSE': False},
 'MRCNN': {'CLS_SPECIFIC_MASK': True,
           'CONV_INIT': 'GaussianFill',
           'DILATION': 2,
           'DIM_REDUCED': 256,
           'MEMORY_EFFICIENT_LOSS': True,
           'RESOLUTION': 14,
           'ROI_MASK_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'THRESH_BINARIZE': 0.5,
           'UPSAMPLE_RATIO': 1,
           'USE_FC_OUTPUT': False,
           'WEIGHT_LOSS_MASK': 1.0},
 'NUM_GPUS': 8,
 'OUTPUT_DIR': 'Outputs',
 'PIXEL_MEANS': array([[[102.9801, 115.9465, 122.7717]]]),
 'POOLING_MODE': 'crop',
 'POOLING_SIZE': 7,
 'PYTORCH_VERSION_LESS_THAN_040': False,
 'RESNETS': {'FREEZE_AT': 2,
             'IMAGENET_PRETRAINED_WEIGHTS': 'data/pretrained_model/resnet101_caffe.pth',
             'NUM_GROUPS': 1,
             'RES5_DILATION': 1,
             'SHORTCUT_FUNC': 'basic_bn_shortcut',
             'STEM_FUNC': 'basic_bn_stem',
             'STRIDE_1X1': True,
             'TRANS_FUNC': 'bottleneck_transformation',
             'USE_GN': False,
             'WIDTH_PER_GROUP': 64},
 'RETINANET': {'ANCHOR_SCALE': 4,
               'ASPECT_RATIOS': (0.5, 1.0, 2.0),
               'BBOX_REG_BETA': 0.11,
               'BBOX_REG_WEIGHT': 1.0,
               'CLASS_SPECIFIC_BBOX': False,
               'INFERENCE_TH': 0.05,
               'LOSS_ALPHA': 0.25,
               'LOSS_GAMMA': 2.0,
               'NEGATIVE_OVERLAP': 0.4,
               'NUM_CONVS': 4,
               'POSITIVE_OVERLAP': 0.5,
               'PRE_NMS_TOP_N': 1000,
               'PRIOR_PROB': 0.01,
               'RETINANET_ON': False,
               'SCALES_PER_OCTAVE': 3,
               'SHARE_CLS_BBOX_TOWER': False,
               'SOFTMAX': False},
 'RFCN': {'PS_GRID_SIZE': 3},
 'RNG_SEED': 3,
 'ROOT_DIR': '/home/ubuntu/Detectron.pytorch',
 'RPN': {'ASPECT_RATIOS': (0.5, 1, 2),
         'CLS_ACTIVATION': 'sigmoid',
         'OUT_DIM': 512,
         'OUT_DIM_AS_IN_DIM': True,
         'RPN_ON': True,
         'SIZES': (64, 128, 256, 512),
         'STRIDE': 16},
 'SOLVER': {'BASE_LR': 2e-05,
            'BIAS_DOUBLE_LR': True,
            'BIAS_WEIGHT_DECAY': False,
            'GAMMA': 0.1,
            'LOG_LR_CHANGE_THRESHOLD': 1.1,
            'LRS': [],
            'LR_POLICY': 'steps_with_decay',
            'MAX_ITER': 10000,
            'MOMENTUM': 0.9,
            'SCALE_MOMENTUM': True,
            'SCALE_MOMENTUM_THRESHOLD': 1.1,
            'STEPS': [0, 5000, 8000],
            'STEP_SIZE': 30000,
            'TYPE': 'SGD',
            'WARM_UP_FACTOR': 0.3333333333333333,
            'WARM_UP_ITERS': 500,
            'WARM_UP_METHOD': 'linear',
            'WEIGHT_DECAY': 0.0001,
            'WEIGHT_DECAY_GN': 0.0},
 'TEST': {'BBOX_AUG': {'AREA_TH_HI': 32400,
                       'AREA_TH_LO': 2500,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'COORD_HEUR': 'UNION',
                       'ENABLED': False,
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False,
                       'SCORE_HEUR': 'UNION'},
          'BBOX_REG': True,
          'BBOX_VOTE': {'ENABLED': False,
                        'SCORING_METHOD': 'ID',
                        'SCORING_METHOD_BETA': 1.0,
                        'VOTE_TH': 0.8},
          'COMPETITION_MODE': True,
          'DATASETS': ('voc_2007_test',),
          'DETECTIONS_PER_IM': 100,
          'FORCE_JSON_DATASET_EVAL': False,
          'KPS_AUG': {'AREA_TH': 32400,
                      'ASPECT_RATIOS': (),
                      'ASPECT_RATIO_H_FLIP': False,
                      'ENABLED': False,
                      'HEUR': 'HM_AVG',
                      'H_FLIP': False,
                      'MAX_SIZE': 4000,
                      'SCALES': (),
                      'SCALE_H_FLIP': False,
                      'SCALE_SIZE_DEP': False},
          'MASK_AUG': {'AREA_TH': 32400,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'ENABLED': False,
                       'HEUR': 'SOFT_AVG',
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False},
          'MAX_SIZE': 1000,
          'NMS': 0.5,
          'PRECOMPUTED_PROPOSALS': False,
          'PROPOSAL_FILES': (),
          'PROPOSAL_LIMIT': 2000,
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 1000,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALE': 600,
          'SCORE_THRESH': 0.05,
          'SOFT_NMS': {'ENABLED': False, 'METHOD': 'linear', 'SIGMA': 0.5},
          'WEAK_SUPERVISE': False},
 'TRAIN': {'ASPECT_CROPPING': False,
           'ASPECT_GROUPING': True,
           'ASPECT_HI': 2,
           'ASPECT_LO': 0.5,
           'BATCH_SIZE_PER_IM': 512,
           'BBOX_INSIDE_WEIGHTS': (1.0, 1.0, 1.0, 1.0),
           'BBOX_NORMALIZE_MEANS': (0.0, 0.0, 0.0, 0.0),
           'BBOX_NORMALIZE_STDS': (0.1, 0.1, 0.2, 0.2),
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'COPY_CLS_TO_DET': False,
           'CROWD_FILTER_THRESH': 0.7,
           'DATASETS': (),
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'FREEZE_BOX_HEAD': True,
           'FREEZE_CONV_BODY': False,
           'FREEZE_RPN': False,
           'GT_MIN_AREA': -1,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_FILES': (),
           'RPN_BATCH_SIZE_PER_IM': 256,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 2000,
           'RPN_STRADDLE_THRESH': 0,
           'SCALES': (600,),
           'SNAPSHOT_ITERS': 2000,
           'SPATIAL_REG': False,
           'USE_FLIPPED': True,
           'WEAK_SUPERVISE': True,
           'WEAK_SUPERVISE_WITH_PRETRAIN': True},
 'VIS': False,
 'VIS_TH': 0.9}
loading annotations into memory...
Done (t=0.20s)
creating index...
index created!
INFO test_engine.py: 324: training mode? : False
INFO test_engine.py: 331: loading checkpoint Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step2999.pth
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2477/3714 0.653s + 0.001s (eta: 0:13:29)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2487/3714 0.509s + 0.001s (eta: 0:10:26)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2497/3714 0.511s + 0.001s (eta: 0:10:23)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2507/3714 0.503s + 0.001s (eta: 0:10:09)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2517/3714 0.499s + 0.001s (eta: 0:09:59)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2527/3714 0.490s + 0.001s (eta: 0:09:43)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2537/3714 0.494s + 0.001s (eta: 0:09:43)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2547/3714 0.491s + 0.001s (eta: 0:09:34)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2557/3714 0.488s + 0.001s (eta: 0:09:25)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2567/3714 0.491s + 0.002s (eta: 0:09:25)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2577/3714 0.492s + 0.002s (eta: 0:09:21)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2587/3714 0.492s + 0.002s (eta: 0:09:16)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2597/3714 0.490s + 0.002s (eta: 0:09:08)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2607/3714 0.490s + 0.002s (eta: 0:09:04)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2617/3714 0.491s + 0.002s (eta: 0:09:00)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2627/3714 0.493s + 0.002s (eta: 0:08:57)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2637/3714 0.495s + 0.002s (eta: 0:08:55)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2647/3714 0.496s + 0.002s (eta: 0:08:50)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2657/3714 0.497s + 0.002s (eta: 0:08:47)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2667/3714 0.496s + 0.002s (eta: 0:08:41)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2677/3714 0.494s + 0.002s (eta: 0:08:34)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2687/3714 0.494s + 0.002s (eta: 0:08:28)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2697/3714 0.494s + 0.002s (eta: 0:08:23)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2707/3714 0.494s + 0.002s (eta: 0:08:19)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2717/3714 0.494s + 0.002s (eta: 0:08:14)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2727/3714 0.493s + 0.002s (eta: 0:08:08)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2737/3714 0.493s + 0.002s (eta: 0:08:02)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2747/3714 0.492s + 0.002s (eta: 0:07:57)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2757/3714 0.491s + 0.002s (eta: 0:07:51)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2767/3714 0.492s + 0.002s (eta: 0:07:47)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2777/3714 0.492s + 0.002s (eta: 0:07:42)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2787/3714 0.495s + 0.002s (eta: 0:07:40)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2797/3714 0.495s + 0.002s (eta: 0:07:35)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2807/3714 0.496s + 0.002s (eta: 0:07:31)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2817/3714 0.497s + 0.002s (eta: 0:07:27)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2827/3714 0.497s + 0.002s (eta: 0:07:22)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2837/3714 0.498s + 0.002s (eta: 0:07:18)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2847/3714 0.496s + 0.002s (eta: 0:07:12)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2857/3714 0.496s + 0.002s (eta: 0:07:06)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2867/3714 0.496s + 0.002s (eta: 0:07:01)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2877/3714 0.497s + 0.002s (eta: 0:06:57)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2887/3714 0.497s + 0.002s (eta: 0:06:52)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2897/3714 0.497s + 0.002s (eta: 0:06:47)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2907/3714 0.498s + 0.002s (eta: 0:06:43)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2917/3714 0.498s + 0.002s (eta: 0:06:38)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2927/3714 0.497s + 0.002s (eta: 0:06:32)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2937/3714 0.496s + 0.002s (eta: 0:06:26)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2947/3714 0.497s + 0.002s (eta: 0:06:22)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2957/3714 0.497s + 0.002s (eta: 0:06:17)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2967/3714 0.498s + 0.002s (eta: 0:06:12)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2977/3714 0.498s + 0.002s (eta: 0:06:08)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2987/3714 0.499s + 0.002s (eta: 0:06:03)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2997/3714 0.499s + 0.002s (eta: 0:05:59)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3007/3714 0.498s + 0.002s (eta: 0:05:53)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3017/3714 0.498s + 0.002s (eta: 0:05:48)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3027/3714 0.498s + 0.002s (eta: 0:05:43)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3037/3714 0.498s + 0.002s (eta: 0:05:38)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3047/3714 0.498s + 0.002s (eta: 0:05:33)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3057/3714 0.498s + 0.002s (eta: 0:05:28)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3067/3714 0.497s + 0.002s (eta: 0:05:22)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3077/3714 0.497s + 0.002s (eta: 0:05:17)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3087/3714 0.498s + 0.002s (eta: 0:05:13)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3097/3714 0.498s + 0.002s (eta: 0:05:08)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3107/3714 0.498s + 0.002s (eta: 0:05:03)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3117/3714 0.499s + 0.002s (eta: 0:04:58)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3127/3714 0.499s + 0.002s (eta: 0:04:53)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3137/3714 0.498s + 0.002s (eta: 0:04:48)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3147/3714 0.498s + 0.002s (eta: 0:04:43)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3157/3714 0.498s + 0.002s (eta: 0:04:38)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3167/3714 0.498s + 0.002s (eta: 0:04:33)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3177/3714 0.498s + 0.002s (eta: 0:04:28)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3187/3714 0.497s + 0.002s (eta: 0:04:23)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3197/3714 0.497s + 0.002s (eta: 0:04:17)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3207/3714 0.497s + 0.002s (eta: 0:04:12)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3217/3714 0.497s + 0.002s (eta: 0:04:07)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3227/3714 0.496s + 0.002s (eta: 0:04:02)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3237/3714 0.497s + 0.002s (eta: 0:03:57)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3247/3714 0.497s + 0.002s (eta: 0:03:52)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3257/3714 0.497s + 0.002s (eta: 0:03:47)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3267/3714 0.497s + 0.002s (eta: 0:03:42)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3277/3714 0.497s + 0.002s (eta: 0:03:37)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3287/3714 0.496s + 0.002s (eta: 0:03:32)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3297/3714 0.496s + 0.002s (eta: 0:03:27)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3307/3714 0.496s + 0.002s (eta: 0:03:22)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3317/3714 0.496s + 0.002s (eta: 0:03:17)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3327/3714 0.496s + 0.002s (eta: 0:03:12)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3337/3714 0.496s + 0.002s (eta: 0:03:07)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3347/3714 0.496s + 0.002s (eta: 0:03:02)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3357/3714 0.496s + 0.002s (eta: 0:02:57)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3367/3714 0.496s + 0.002s (eta: 0:02:52)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3377/3714 0.496s + 0.002s (eta: 0:02:47)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3387/3714 0.496s + 0.002s (eta: 0:02:42)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3397/3714 0.496s + 0.002s (eta: 0:02:37)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3407/3714 0.495s + 0.002s (eta: 0:02:32)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3417/3714 0.495s + 0.002s (eta: 0:02:27)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3427/3714 0.495s + 0.002s (eta: 0:02:22)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3437/3714 0.494s + 0.002s (eta: 0:02:17)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3447/3714 0.495s + 0.002s (eta: 0:02:12)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3457/3714 0.495s + 0.002s (eta: 0:02:07)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3467/3714 0.495s + 0.002s (eta: 0:02:02)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3477/3714 0.494s + 0.002s (eta: 0:01:57)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3487/3714 0.494s + 0.002s (eta: 0:01:52)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3497/3714 0.494s + 0.002s (eta: 0:01:47)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3507/3714 0.495s + 0.002s (eta: 0:01:42)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3517/3714 0.495s + 0.002s (eta: 0:01:37)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3527/3714 0.495s + 0.002s (eta: 0:01:32)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3537/3714 0.495s + 0.002s (eta: 0:01:27)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3547/3714 0.495s + 0.002s (eta: 0:01:22)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3557/3714 0.495s + 0.002s (eta: 0:01:17)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3567/3714 0.495s + 0.002s (eta: 0:01:12)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3577/3714 0.494s + 0.002s (eta: 0:01:07)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3587/3714 0.495s + 0.002s (eta: 0:01:03)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3597/3714 0.495s + 0.002s (eta: 0:00:58)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3607/3714 0.495s + 0.002s (eta: 0:00:53)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3617/3714 0.495s + 0.002s (eta: 0:00:48)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3627/3714 0.495s + 0.002s (eta: 0:00:43)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3637/3714 0.495s + 0.002s (eta: 0:00:38)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3647/3714 0.496s + 0.002s (eta: 0:00:33)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3657/3714 0.495s + 0.002s (eta: 0:00:28)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3667/3714 0.495s + 0.002s (eta: 0:00:23)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3677/3714 0.495s + 0.002s (eta: 0:00:18)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3687/3714 0.495s + 0.002s (eta: 0:00:13)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3697/3714 0.495s + 0.002s (eta: 0:00:08)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3707/3714 0.494s + 0.002s (eta: 0:00:03)
INFO test_engine.py: 314: Wrote detections to: /home/ubuntu/Detectron.pytorch/Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_2476_3714.pkl
/home/ubuntu/anaconda3/envs/pytorch41/lib/python3.7/site-packages/torch/nn/functional.py:1890: UserWarning: nn.functional.upsample is deprecated. Use nn.functional.interpolate instead.
  warnings.warn("nn.functional.upsample is deprecated. Use nn.functional.interpolate instead.")

INFO subprocess.py: 129: # ---------------------------------------------------------------------------- #
INFO subprocess.py: 131: stdout of subprocess 3 with range [3715, 4952]
INFO subprocess.py: 133: # ---------------------------------------------------------------------------- #
INFO test_net.py:  72: Called with args:
INFO test_net.py:  73: Namespace(cfg_file='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_config.yaml', dataset=None, load_ckpt='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step2999.pth', load_detectron=None, multi_gpu_testing=False, num_classes=None, output_dir='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test', range=[3714, 4952], set_cfgs=['TEST.DATASETS', '("voc_2007_test",)'], vis=False)
INFO test_net.py: 130: Testing with config:
INFO test_net.py: 131: {'BBOX_XFORM_CLIP': 4.135166556742356,
 'CROP_RESIZE_WITH_MAX_POOL': True,
 'CUDA': False,
 'DATA_DIR': '/home/ubuntu/Detectron.pytorch/data',
 'DATA_LOADER': {'NUM_THREADS': 4},
 'DEBUG': False,
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXPECTED_RESULTS': [],
 'EXPECTED_RESULTS_ATOL': 0.005,
 'EXPECTED_RESULTS_EMAIL': '',
 'EXPECTED_RESULTS_RTOL': 0.1,
 'FAST_RCNN': {'BOX_OUT_STREAMS': 1,
               'CONV_HEAD_DIM': 256,
               'MLP_HEAD_DIM': 1024,
               'NUM_STACKED_CONVS': 4,
               'ROI_BOX_HEAD': 'fast_rcnn_heads.roi_2mlp_head',
               'ROI_XFORM_METHOD': 'RoIAlign',
               'ROI_XFORM_RESOLUTION': 7,
               'ROI_XFORM_SAMPLING_RATIO': 2},
 'FPN': {'COARSEST_STRIDE': 32,
         'DIM': 256,
         'EXTRA_CONV_LEVELS': False,
         'FPN_ON': True,
         'MULTILEVEL_ROIS': True,
         'MULTILEVEL_RPN': True,
         'ROI_CANONICAL_LEVEL': 4,
         'ROI_CANONICAL_SCALE': 224,
         'ROI_MAX_LEVEL': 5,
         'ROI_MIN_LEVEL': 2,
         'RPN_ANCHOR_START_SIZE': 32,
         'RPN_ASPECT_RATIOS': (0.5, 1, 2),
         'RPN_COLLECT_SCALE': 1,
         'RPN_MAX_LEVEL': 6,
         'RPN_MIN_LEVEL': 2,
         'USE_GN': False,
         'ZERO_INIT_LATERAL': False},
 'GROUP_NORM': {'DIM_PER_GP': -1, 'EPSILON': 1e-05, 'NUM_GROUPS': 32},
 'KRCNN': {'CONV_HEAD_DIM': 256,
           'CONV_HEAD_KERNEL': 3,
           'CONV_INIT': 'GaussianFill',
           'DECONV_DIM': 256,
           'DECONV_KERNEL': 4,
           'DILATION': 1,
           'HEATMAP_SIZE': -1,
           'INFERENCE_MIN_SIZE': 0,
           'KEYPOINT_CONFIDENCE': 'bbox',
           'LOSS_WEIGHT': 1.0,
           'MIN_KEYPOINT_COUNT_FOR_VALID_MINIBATCH': 20,
           'NMS_OKS': False,
           'NORMALIZE_BY_VISIBLE_KEYPOINTS': True,
           'NUM_KEYPOINTS': -1,
           'NUM_STACKED_CONVS': 8,
           'ROI_KEYPOINTS_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'UP_SCALE': -1,
           'USE_DECONV': False,
           'USE_DECONV_OUTPUT': False},
 'MATLAB': 'matlab',
 'MODEL': {'BBOX_REG_WEIGHTS': (10.0, 10.0, 5.0, 5.0),
           'CLS_AGNOSTIC_BBOX_REG': False,
           'CONV_BODY': 'FPN.fpn_ResNet101_conv5_body',
           'FASTER_RCNN': True,
           'KEYPOINTS_ON': False,
           'LOAD_IMAGENET_PRETRAINED_WEIGHTS': True,
           'MASK_ON': False,
           'NUM_CLASSES': 21,
           'RPN_ONLY': False,
           'SHARE_RES5': False,
           'TYPE': 'generalized_rcnn',
           'UNSUPERVISED_POSE': False},
 'MRCNN': {'CLS_SPECIFIC_MASK': True,
           'CONV_INIT': 'GaussianFill',
           'DILATION': 2,
           'DIM_REDUCED': 256,
           'MEMORY_EFFICIENT_LOSS': True,
           'RESOLUTION': 14,
           'ROI_MASK_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'THRESH_BINARIZE': 0.5,
           'UPSAMPLE_RATIO': 1,
           'USE_FC_OUTPUT': False,
           'WEIGHT_LOSS_MASK': 1.0},
 'NUM_GPUS': 8,
 'OUTPUT_DIR': 'Outputs',
 'PIXEL_MEANS': array([[[102.9801, 115.9465, 122.7717]]]),
 'POOLING_MODE': 'crop',
 'POOLING_SIZE': 7,
 'PYTORCH_VERSION_LESS_THAN_040': False,
 'RESNETS': {'FREEZE_AT': 2,
             'IMAGENET_PRETRAINED_WEIGHTS': 'data/pretrained_model/resnet101_caffe.pth',
             'NUM_GROUPS': 1,
             'RES5_DILATION': 1,
             'SHORTCUT_FUNC': 'basic_bn_shortcut',
             'STEM_FUNC': 'basic_bn_stem',
             'STRIDE_1X1': True,
             'TRANS_FUNC': 'bottleneck_transformation',
             'USE_GN': False,
             'WIDTH_PER_GROUP': 64},
 'RETINANET': {'ANCHOR_SCALE': 4,
               'ASPECT_RATIOS': (0.5, 1.0, 2.0),
               'BBOX_REG_BETA': 0.11,
               'BBOX_REG_WEIGHT': 1.0,
               'CLASS_SPECIFIC_BBOX': False,
               'INFERENCE_TH': 0.05,
               'LOSS_ALPHA': 0.25,
               'LOSS_GAMMA': 2.0,
               'NEGATIVE_OVERLAP': 0.4,
               'NUM_CONVS': 4,
               'POSITIVE_OVERLAP': 0.5,
               'PRE_NMS_TOP_N': 1000,
               'PRIOR_PROB': 0.01,
               'RETINANET_ON': False,
               'SCALES_PER_OCTAVE': 3,
               'SHARE_CLS_BBOX_TOWER': False,
               'SOFTMAX': False},
 'RFCN': {'PS_GRID_SIZE': 3},
 'RNG_SEED': 3,
 'ROOT_DIR': '/home/ubuntu/Detectron.pytorch',
 'RPN': {'ASPECT_RATIOS': (0.5, 1, 2),
         'CLS_ACTIVATION': 'sigmoid',
         'OUT_DIM': 512,
         'OUT_DIM_AS_IN_DIM': True,
         'RPN_ON': True,
         'SIZES': (64, 128, 256, 512),
         'STRIDE': 16},
 'SOLVER': {'BASE_LR': 2e-05,
            'BIAS_DOUBLE_LR': True,
            'BIAS_WEIGHT_DECAY': False,
            'GAMMA': 0.1,
            'LOG_LR_CHANGE_THRESHOLD': 1.1,
            'LRS': [],
            'LR_POLICY': 'steps_with_decay',
            'MAX_ITER': 10000,
            'MOMENTUM': 0.9,
            'SCALE_MOMENTUM': True,
            'SCALE_MOMENTUM_THRESHOLD': 1.1,
            'STEPS': [0, 5000, 8000],
            'STEP_SIZE': 30000,
            'TYPE': 'SGD',
            'WARM_UP_FACTOR': 0.3333333333333333,
            'WARM_UP_ITERS': 500,
            'WARM_UP_METHOD': 'linear',
            'WEIGHT_DECAY': 0.0001,
            'WEIGHT_DECAY_GN': 0.0},
 'TEST': {'BBOX_AUG': {'AREA_TH_HI': 32400,
                       'AREA_TH_LO': 2500,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'COORD_HEUR': 'UNION',
                       'ENABLED': False,
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False,
                       'SCORE_HEUR': 'UNION'},
          'BBOX_REG': True,
          'BBOX_VOTE': {'ENABLED': False,
                        'SCORING_METHOD': 'ID',
                        'SCORING_METHOD_BETA': 1.0,
                        'VOTE_TH': 0.8},
          'COMPETITION_MODE': True,
          'DATASETS': ('voc_2007_test',),
          'DETECTIONS_PER_IM': 100,
          'FORCE_JSON_DATASET_EVAL': False,
          'KPS_AUG': {'AREA_TH': 32400,
                      'ASPECT_RATIOS': (),
                      'ASPECT_RATIO_H_FLIP': False,
                      'ENABLED': False,
                      'HEUR': 'HM_AVG',
                      'H_FLIP': False,
                      'MAX_SIZE': 4000,
                      'SCALES': (),
                      'SCALE_H_FLIP': False,
                      'SCALE_SIZE_DEP': False},
          'MASK_AUG': {'AREA_TH': 32400,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'ENABLED': False,
                       'HEUR': 'SOFT_AVG',
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False},
          'MAX_SIZE': 1000,
          'NMS': 0.5,
          'PRECOMPUTED_PROPOSALS': False,
          'PROPOSAL_FILES': (),
          'PROPOSAL_LIMIT': 2000,
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 1000,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALE': 600,
          'SCORE_THRESH': 0.05,
          'SOFT_NMS': {'ENABLED': False, 'METHOD': 'linear', 'SIGMA': 0.5},
          'WEAK_SUPERVISE': False},
 'TRAIN': {'ASPECT_CROPPING': False,
           'ASPECT_GROUPING': True,
           'ASPECT_HI': 2,
           'ASPECT_LO': 0.5,
           'BATCH_SIZE_PER_IM': 512,
           'BBOX_INSIDE_WEIGHTS': (1.0, 1.0, 1.0, 1.0),
           'BBOX_NORMALIZE_MEANS': (0.0, 0.0, 0.0, 0.0),
           'BBOX_NORMALIZE_STDS': (0.1, 0.1, 0.2, 0.2),
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'COPY_CLS_TO_DET': False,
           'CROWD_FILTER_THRESH': 0.7,
           'DATASETS': (),
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'FREEZE_BOX_HEAD': True,
           'FREEZE_CONV_BODY': False,
           'FREEZE_RPN': False,
           'GT_MIN_AREA': -1,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_FILES': (),
           'RPN_BATCH_SIZE_PER_IM': 256,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 2000,
           'RPN_STRADDLE_THRESH': 0,
           'SCALES': (600,),
           'SNAPSHOT_ITERS': 2000,
           'SPATIAL_REG': False,
           'USE_FLIPPED': True,
           'WEAK_SUPERVISE': True,
           'WEAK_SUPERVISE_WITH_PRETRAIN': True},
 'VIS': False,
 'VIS_TH': 0.9}
loading annotations into memory...
Done (t=0.15s)
creating index...
index created!
INFO test_engine.py: 324: training mode? : False
INFO test_engine.py: 331: loading checkpoint Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step2999.pth
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3715/4952 0.761s + 0.001s (eta: 0:15:43)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3725/4952 0.482s + 0.001s (eta: 0:09:52)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3735/4952 0.501s + 0.001s (eta: 0:10:11)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3745/4952 0.495s + 0.001s (eta: 0:09:59)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3755/4952 0.498s + 0.001s (eta: 0:09:58)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3765/4952 0.502s + 0.001s (eta: 0:09:57)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3775/4952 0.500s + 0.001s (eta: 0:09:50)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3785/4952 0.496s + 0.001s (eta: 0:09:39)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3795/4952 0.496s + 0.001s (eta: 0:09:35)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3805/4952 0.496s + 0.001s (eta: 0:09:30)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3815/4952 0.499s + 0.001s (eta: 0:09:28)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3825/4952 0.497s + 0.001s (eta: 0:09:21)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3835/4952 0.495s + 0.001s (eta: 0:09:14)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3845/4952 0.493s + 0.002s (eta: 0:09:07)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3855/4952 0.493s + 0.002s (eta: 0:09:03)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3865/4952 0.491s + 0.002s (eta: 0:08:56)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3875/4952 0.490s + 0.002s (eta: 0:08:49)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3885/4952 0.489s + 0.002s (eta: 0:08:43)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3895/4952 0.490s + 0.002s (eta: 0:08:40)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3905/4952 0.491s + 0.002s (eta: 0:08:36)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3915/4952 0.492s + 0.002s (eta: 0:08:31)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3925/4952 0.491s + 0.002s (eta: 0:08:25)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3935/4952 0.491s + 0.002s (eta: 0:08:21)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3945/4952 0.491s + 0.002s (eta: 0:08:16)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3955/4952 0.492s + 0.002s (eta: 0:08:12)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3965/4952 0.491s + 0.002s (eta: 0:08:06)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3975/4952 0.492s + 0.002s (eta: 0:08:02)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3985/4952 0.493s + 0.002s (eta: 0:07:58)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3995/4952 0.493s + 0.002s (eta: 0:07:53)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4005/4952 0.492s + 0.002s (eta: 0:07:47)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4015/4952 0.492s + 0.002s (eta: 0:07:42)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4025/4952 0.492s + 0.002s (eta: 0:07:37)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4035/4952 0.492s + 0.002s (eta: 0:07:32)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4045/4952 0.491s + 0.002s (eta: 0:07:26)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4055/4952 0.490s + 0.002s (eta: 0:07:21)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4065/4952 0.490s + 0.002s (eta: 0:07:15)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4075/4952 0.488s + 0.002s (eta: 0:07:10)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4085/4952 0.489s + 0.002s (eta: 0:07:05)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4095/4952 0.490s + 0.002s (eta: 0:07:01)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4105/4952 0.490s + 0.002s (eta: 0:06:56)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4115/4952 0.489s + 0.002s (eta: 0:06:51)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4125/4952 0.490s + 0.002s (eta: 0:06:46)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4135/4952 0.490s + 0.002s (eta: 0:06:42)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4145/4952 0.490s + 0.002s (eta: 0:06:37)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4155/4952 0.492s + 0.002s (eta: 0:06:33)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4165/4952 0.491s + 0.002s (eta: 0:06:27)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4175/4952 0.491s + 0.002s (eta: 0:06:22)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4185/4952 0.492s + 0.002s (eta: 0:06:18)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4195/4952 0.492s + 0.002s (eta: 0:06:13)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4205/4952 0.492s + 0.002s (eta: 0:06:09)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4215/4952 0.492s + 0.002s (eta: 0:06:03)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4225/4952 0.492s + 0.002s (eta: 0:05:59)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4235/4952 0.491s + 0.002s (eta: 0:05:53)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4245/4952 0.491s + 0.002s (eta: 0:05:48)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4255/4952 0.491s + 0.002s (eta: 0:05:43)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4265/4952 0.491s + 0.002s (eta: 0:05:38)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4275/4952 0.491s + 0.002s (eta: 0:05:33)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4285/4952 0.492s + 0.002s (eta: 0:05:29)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4295/4952 0.492s + 0.002s (eta: 0:05:24)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4305/4952 0.492s + 0.002s (eta: 0:05:19)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4315/4952 0.493s + 0.002s (eta: 0:05:15)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4325/4952 0.493s + 0.002s (eta: 0:05:10)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4335/4952 0.493s + 0.002s (eta: 0:05:05)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4345/4952 0.494s + 0.002s (eta: 0:05:00)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4355/4952 0.494s + 0.002s (eta: 0:04:55)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4365/4952 0.494s + 0.002s (eta: 0:04:51)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4375/4952 0.494s + 0.002s (eta: 0:04:46)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4385/4952 0.493s + 0.002s (eta: 0:04:40)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4395/4952 0.493s + 0.002s (eta: 0:04:35)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4405/4952 0.493s + 0.002s (eta: 0:04:30)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4415/4952 0.493s + 0.002s (eta: 0:04:25)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4425/4952 0.493s + 0.002s (eta: 0:04:20)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4435/4952 0.494s + 0.002s (eta: 0:04:16)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4445/4952 0.494s + 0.002s (eta: 0:04:11)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4455/4952 0.494s + 0.002s (eta: 0:04:06)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4465/4952 0.494s + 0.002s (eta: 0:04:01)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4475/4952 0.493s + 0.002s (eta: 0:03:56)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4485/4952 0.494s + 0.002s (eta: 0:03:51)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4495/4952 0.492s + 0.002s (eta: 0:03:45)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4505/4952 0.492s + 0.002s (eta: 0:03:40)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4515/4952 0.493s + 0.002s (eta: 0:03:36)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4525/4952 0.493s + 0.002s (eta: 0:03:31)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4535/4952 0.493s + 0.002s (eta: 0:03:26)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4545/4952 0.494s + 0.002s (eta: 0:03:21)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4555/4952 0.493s + 0.002s (eta: 0:03:16)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4565/4952 0.494s + 0.002s (eta: 0:03:11)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4575/4952 0.493s + 0.002s (eta: 0:03:06)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4585/4952 0.493s + 0.002s (eta: 0:03:01)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4595/4952 0.493s + 0.002s (eta: 0:02:56)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4605/4952 0.493s + 0.002s (eta: 0:02:51)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4615/4952 0.493s + 0.002s (eta: 0:02:46)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4625/4952 0.493s + 0.002s (eta: 0:02:41)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4635/4952 0.493s + 0.002s (eta: 0:02:36)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4645/4952 0.493s + 0.002s (eta: 0:02:31)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4655/4952 0.493s + 0.002s (eta: 0:02:26)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4665/4952 0.493s + 0.002s (eta: 0:02:21)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4675/4952 0.493s + 0.002s (eta: 0:02:17)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4685/4952 0.493s + 0.002s (eta: 0:02:12)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4695/4952 0.493s + 0.002s (eta: 0:02:07)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4705/4952 0.492s + 0.002s (eta: 0:02:02)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4715/4952 0.493s + 0.002s (eta: 0:01:57)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4725/4952 0.493s + 0.002s (eta: 0:01:52)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4735/4952 0.493s + 0.002s (eta: 0:01:47)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4745/4952 0.493s + 0.002s (eta: 0:01:42)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4755/4952 0.493s + 0.002s (eta: 0:01:37)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4765/4952 0.493s + 0.002s (eta: 0:01:32)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4775/4952 0.492s + 0.002s (eta: 0:01:27)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4785/4952 0.492s + 0.002s (eta: 0:01:22)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4795/4952 0.492s + 0.002s (eta: 0:01:17)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4805/4952 0.492s + 0.002s (eta: 0:01:12)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4815/4952 0.492s + 0.002s (eta: 0:01:07)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4825/4952 0.493s + 0.002s (eta: 0:01:02)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4835/4952 0.492s + 0.002s (eta: 0:00:57)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4845/4952 0.492s + 0.002s (eta: 0:00:52)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4855/4952 0.492s + 0.002s (eta: 0:00:47)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4865/4952 0.492s + 0.002s (eta: 0:00:42)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4875/4952 0.492s + 0.002s (eta: 0:00:38)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4885/4952 0.492s + 0.002s (eta: 0:00:33)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4895/4952 0.492s + 0.002s (eta: 0:00:28)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4905/4952 0.492s + 0.002s (eta: 0:00:23)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4915/4952 0.493s + 0.002s (eta: 0:00:18)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4925/4952 0.493s + 0.002s (eta: 0:00:13)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4935/4952 0.492s + 0.002s (eta: 0:00:08)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4945/4952 0.492s + 0.002s (eta: 0:00:03)
INFO test_engine.py: 314: Wrote detections to: /home/ubuntu/Detectron.pytorch/Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_3714_4952.pkl
/home/ubuntu/anaconda3/envs/pytorch41/lib/python3.7/site-packages/torch/nn/functional.py:1890: UserWarning: nn.functional.upsample is deprecated. Use nn.functional.interpolate instead.
  warnings.warn("nn.functional.upsample is deprecated. Use nn.functional.interpolate instead.")

INFO test_engine.py: 211: Wrote detections to: /home/ubuntu/Detectron.pytorch/Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detections.pkl
INFO test_engine.py: 161: Total inference time: 637.046s
INFO task_evaluation.py:  77: Evaluating detections
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: aeroplane
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: bicycle
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: bird
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: boat
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: bottle
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: bus
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: car
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: cat
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: chair
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: cow
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: diningtable
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: dog
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: horse
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: motorbike
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: person
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: pottedplant
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: sheep
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: sofa
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: train
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: tvmonitor
INFO voc_dataset_evaluator.py: 115: VOC07 metric? Yes
INFO voc_eval.py: 171: [1076 1113  647 ...  339   14  632]
INFO voc_dataset_evaluator.py: 127: AP for aeroplane = 0.7725
INFO voc_eval.py: 171: [268 173  35 ... 168  29 228]
INFO voc_dataset_evaluator.py: 127: AP for bicycle = 0.7916
INFO voc_eval.py: 171: [1150 1486 1198 ...  977 1966  169]
INFO voc_dataset_evaluator.py: 127: AP for bird = 0.7898
INFO voc_eval.py: 171: [1460 2080   74 ... 1728 1366 1164]
INFO voc_dataset_evaluator.py: 127: AP for boat = 0.6221
INFO voc_eval.py: 171: [ 955 1807  121 ...  893 1304 1327]
INFO voc_dataset_evaluator.py: 127: AP for bottle = 0.6773
INFO voc_eval.py: 171: [328 849 275 847 479 872 524 212 135 821 692 495  28 702 207 595 220   4
  86 632 414 739 105 141 768 264  74  18 454 546 653 657 292 784  35 861
 795 643 196 788 466 636 693 852 498 660 691 588 418 442 718 383  56  83
  79 613  33 128 750 554 567 811 538  52 187 786  84 531 562 251 122 408
 673 732 508 234  23 183 726 316 767 593 889 289 434 734  70 541 484 164
 362 735 357 388 649  36 381 612 175 455 826 401 481 150 278 177 875 397
 787 858 796 529 665 577 266 132 301 654 116 719 830 512 837 425  20 630
 186 346  60 864 224 115 343 827 790 449 211 313 851 717 563 250 308 775
 516 539 192 517 664 478 487 396 808 631 222 319 530 491 566 380   1 463
 179 812 382 431 549 683 244 297 282 703 618 556 200 513 370  14 756 318
 337 473 358 778 268 499 599 765 650 794 353 833 534 239 585 694 557 662
  19 569 596 866  67 600 202   0 515 294 283 404 258 879 407  97 555 716
 799 476 176 608 254  53 504  76 748 342 143 410 419 492 349 571 640 680
 792 368 245  81 809 744 493 483 286 432 553 690 656 136 184 844 379 304
 398 409 280 394 868 165 444 639 564 433 823 107 270 236 147 708 361  30
 158 825 776 753 198 452 317 140 267 841 766 169 130 427 112 350 403 874
 876  87 685 865 259 688  57 559 728 351  11 131 675 462 240 166 465 536
 609 502 416 439 271  64 137 371  88 229 429 871  78 706  44 740 191 126
  37 848 138 714 221 133 870 360 674 225   6 451 173 174 677 470 736 359
 443 658 725 226 597  34 103 622 159 581 235 843 755 129 645 230 456 345
 170 363 863 751 390   9 832 148 102  65 701 188 644  10 648 661 598 155
 720  29 572 405  58 265   5 860 709 323 682 386 233 684 114 580 666 124
  91 570 815 686 540 178 888 754 527 620 356 489  40 882  26 488 118 160
 218 878 758 300 241 247 614 338 305 710 634 471 298 153  80 348 667  27
 715 209  77 669 437 834  82 161 505 537 206 522 689 315 372  55 413 421
 332 180 671 111 104 846 290 110 616 842 525 223 260 594 341 791   8 806
 243 101 713 448 446 248 293 435 113 162 586  31 817 406 820 423 194 246
 747 307 181 482  48 626  39 659  12 219 672 763 302 385 700 312 803 340
 231 441  45 333 205 724 722 272 335 840 447 822 646 494 704  71 461 793
 506 384 584 589  62 146 320 327 277 400 426 420 412 100 818 167 291  24
 602 326 364 576 544 501 761 629 574 185 123 770 336 729 623 887 573 592
 108 296 813 197 519 652 638  49 468 500 330 310 355  21 213 707  16 232
 543 415  42 676 459 816  69 373 884 142 681 642 269 438 450 391 533 490
 777 520 854 741  22 285 615  96 168 730  73 151 737 509 106 284 228 152
 764 145 195 619 457 862 367 477 339 109 299 215 807 331  17 551 276 855
  90 771 804 663  13 365 867 742 496 417 387 532 521 274 322 873  99 853
  95 579 255 857 510  59 760 392 263 831 738 399 411 424 568 242 757 227
 440  93  98 528 210 711 802 154 237 547  41 625 705 762 774 891 193 819
  94 252 127 172 824 156 641 281 801  75  89 743 480 881 216 287  61 288
 769 376 303  68 552 467 590 352 474 695 604  43 428 430 746 565  85 249
 486 877 325 606 810 698 752 836 201 464 395 699 503 182  50 273 605 697
 668 780 208   3 814 369  66 545 869 883 575  47 163 759 578 727 214 647
 542 344 635 514  54 745 633 256   7 781 204 800 687 238 329 157  38 518
 393  92 607 453 117  25 199 782 890 583 591 375  72 838 560 805 548 475
 347 679 262 779 472 306 721 535 587 295 253 772 798 611 829 203 334 149
 603 366 374 627 511 601  15 886 839  46 445 558 497 485 469 389 324 261
 696  32 731 773 678 354  63 217 637 885 144 655 134 189 257 610 785 835
 783 880   2 526 561  51 422 670 190 617 582 314 523 120 378 624 125 550
 789 458 651 377 171 279 309 856 121 321 507 749 859 845 828 119 460 139
 850 402 436 797 723 621 712 733 628 311]
INFO voc_dataset_evaluator.py: 127: AP for bus = 0.7920
INFO voc_eval.py: 171: [3714 5548 1942 ...  240 3205 4948]
INFO voc_dataset_evaluator.py: 127: AP for car = 0.8595
INFO voc_eval.py: 171: [858 973 936 ... 248 492 666]
INFO voc_dataset_evaluator.py: 127: AP for cat = 0.8559
INFO voc_eval.py: 171: [ 138  137 2238 ... 1345 5365 2458]
INFO voc_dataset_evaluator.py: 127: AP for chair = 0.6178
INFO voc_eval.py: 171: [1315 1601  753 ...  974  186  821]
INFO voc_dataset_evaluator.py: 127: AP for cow = 0.7727
INFO voc_eval.py: 171: [1039  626 2836 ...  904 1960 1677]
INFO voc_dataset_evaluator.py: 127: AP for diningtable = 0.6041
INFO voc_eval.py: 171: [ 111 1108  436 ...  150 1664 1132]
INFO voc_dataset_evaluator.py: 127: AP for dog = 0.8190
INFO voc_eval.py: 171: [ 27 149 504 ... 916 595 590]
INFO voc_dataset_evaluator.py: 127: AP for horse = 0.8292
INFO voc_eval.py: 171: [909 188 271 243 307 118 832 144 146 881 450  46 462 154 716 552 434 163
 809 160 615  90 270 181 380 787 454 123 600 365 466 260  47 108 693 851
 843 578 377 798 289 508 708 577 611 424 873 249 880 116 816 207 254 104
 126 834  63 786 135  84 741 865   5 783 318 761 190 406 870 522 333 780
 471 579 540 139  77 180 830 916 514 828 441 231 548 939 359 177 386 764
 336 132 547 273 849 288 524 878 119 309 737 511 314  79  41 183 700 490
 530 811 567 247  73 857 673 364 228 512 378  26 182 443 442 776 659 516
 324 668 491 498 866 583 720 835 124  10 383 300 605 650 931 219 792 643
 449 529 889 504 734 541  58 900   8 907 261 573 879 747 911  36 420 169
 757 699 213 819 533 469 542 178 536 476  57 618  60 105 905 890 382 726
 199 649 844 658 634 294   3 897 616 531 769 327 532 385 194 417 614 193
 630 748 627 339 861 914 447 251 575 252 393 200 151   6 592 752 560 360
 566 839 617 585 389 543 373 212  99 884 891  29 278 665 908 505 387 652
  75 824 521 358 342 636 323 517 217 580 223 724 338 379 224 310 408 732
 221 407 841 290  95 753  71 426 633 933 789  54 651  80 502 305 781 117
 926 624 766 174 515 328 527 405 779 341 710 860 901 412 302 507 687  56
 448 172 804 425 586 384 929 101 404 468 558 343 376 622  40 102 853 644
  65  70 227 848 368 717 638 257 793 192 725 431 509 863 277 187 887 922
 790 656 369 301 888 893  72 155 303  68  94 823 702   2 744 128 576 206
 676 526 755 422 147 114  12 721 805 801 198 179 495 935 436 815 896 773
 923 523 858 291 695 812 210 564 148 499 918 326 917  78 647 348 874 774
 794 653 722 714 370 932 265 170 877 430 912 316 619  18 106 168 596 864
 455 235 791   1 321 374 263 582 427 544 239 211 689  61 770 451 869 209
 458 820 672 330 488 236 856 275 760 797 444 782 727 872 675  20 703 130
 313 519 640 902 711 620 559 467 494 295 827 479 136 125 513 733 621 750
 153 245 240 565 452 315 701  28 876 685 478 637 730 269 723 713  85 205
 103 152 847 229 392 258 528 707 503 913 120 556 489 296 927 311 409 391
 590 871 279 535 197 167   9 396 788 100 623 807 842 610 401  83  44 795
 461 836 765  62 924 663 598 335 334 698 156 435 520 607 767 785 111 510
 419 337 329 347  32 218 934 587 825 749 553 814  82  50 428 906 822 191
 584 603  38 758 719  17 628 736 593 475 122 134 162 561 581 694 537 276
 608 501 759 460 648 626 395 233 775 394 745   7 352 718 602 362 112 854
 669 538 606 771  13 588 216 297  92 729 613 274 286 400 375 746 692 143
 158 684 903  14 485  25 492 678 571 686  35  97 772 680 706 487 353 639
 525 799 635 562 355 185 317  51 157 319 813 671 453 506 161 246 325 222
 415 940  39  42 920 654 539 446 642 465 202 867 763 331 817 267 937 690
 357  33 388 440 225  48 930 681 557  19 398 285 594 591 232 402 677 287
 486 477 367 175  88 742 272 810 220 363 299 925 883 778 715  16 164 292
 895 320 852 189 429 568 735 438  22  64 356 604 756 298 662 371 928 149
  23 171 238 885   0 214 109 534 632  74 910 688 645 497 796 283 201 372
 808 244 691  27 572 569 457 165 280 570 740  98 145 470 421 293 612  45
 250 281 332 683 121 322  11 938   4  59 133 655 463 829 709 472 855 837
 268 127 641 826 418 215 433 484 241 346 597 818 697 414 666 390  34 432
 141 868 728 660 129 754 142 549  31 208 554 661 410  21 496 166 340  86
 483 266 262 705 915  49  53 563 237 411 862 831 674 599 203 186 403  43
 306 173 312 308 473 625 704 234 226 255 657 545 195 366 354 899 115 646
 845 138 242 248 850 253 150 846 859 176 551 481 264 595 806 821  15 838
  52  67 833 696  89 743 601 768 921 777 518 739 762 345 107 500 493 731
 664 936 361 113 474  24  96 738 140 574 482 886 751 445 184 196 304  87
 800 397 413 282 256 875 682 667  69 609 350 589 230 459 550 437 349 351
 344 159 904  91 894  30 555 882  93 204 423 439 629  66 416 670 456 464
 631 381 399 784 284 802 546 919 892 898 137 131  55  37 259  76  81 480
 679 803 110 712 840]
INFO voc_dataset_evaluator.py: 127: AP for motorbike = 0.7256
INFO voc_eval.py: 171: [ 2833  6497  7978 ... 16918 15247  7704]
INFO voc_dataset_evaluator.py: 127: AP for person = 0.8374
INFO voc_eval.py: 171: [1879  257 2313 ...  285  227  913]
INFO voc_dataset_evaluator.py: 127: AP for pottedplant = 0.4622
INFO voc_eval.py: 171: [1326 1255  290 ...  656 1427  893]
INFO voc_dataset_evaluator.py: 127: AP for sheep = 0.7560
INFO voc_eval.py: 171: [1222  815  494 ...  651 1578  986]
INFO voc_dataset_evaluator.py: 127: AP for sofa = 0.6948
INFO voc_eval.py: 171: [ 164  513 1204 ... 1139 1084  949]
INFO voc_dataset_evaluator.py: 127: AP for train = 0.7654
INFO voc_eval.py: 171: [425 633 251 278  90 646 205 404  18  55 556 530 370 158 744 423 201 456
  86 341 107 455 406 220 169 621 620 420 529 234 399 498 264 515 441 537
  32  38 428 685 199  72 223 608 335 240 210 150 142 699 647 309 376  91
 443 761 144 151 301 130 637 653 714 429 101 518 473 131 229 332 747 449
 625 517  52  60 300  69 674 698 407 726 270 470 275 356  16 533 358 568
 463 658 106 119 770   5 273 651  80 256 642 616 471 127 601   9 307 363
  13  70 257 114 155 153  42 359 117  95 528 484 277   4 562 450  19  67
 710 729 696 617 623 408 631 231 724 147  37 401 282 409 410 164  82 439
 753 120 718 319   1 507 472 452 353  98 389 587 701 400 778 634 283 595
  81 373 588 727 293  59 655 434 140 258 183 112 493 262 569 627 442 641
 554 756 736 116 323 663  77 531 330 737 492 567 764 111 762 382 774 560
 179 733  66 478 571 598 378 288 387 676 171 366 279 417 137 299 656 213
 521 550 670 732  87 342 163  75 501 735 166 445 638 453 188 196 636 374
 538 654 592 779 577 602 438  30 679  58  74 337 523 545 740 280 741 313
 681   2 284 436 206 391 305 152 344 402 381 219 195 446 572  21 730 481
 303 394 339 237 173 383 690 115 315 290 494 661 752  83  99  79   8 687
 128 712 379 496 375 648 519 709 688 176 474 578 516 759 557 170 524  31
  62 318 104 132 174 605 486  43 178 451 172 749 706 500 628 255 664  45
 215 105 186 644 460 361 522 242  92 760 542 430 211 722 202 499 665 134
 552 549 327 272 757 659 780 773 527 711 345 422 584  96 156 304  93 731
 671 488 495 245  49 138  28  63 306 380 271 604 745 766 397 386 416 122
 343 431  40 566 320   3 462  29 190  48  15 464 615 396 167 650 448 751
 640 551 704 575 748 511 771  88 321 454 590 599 594 208 532 148 692 632
 312 662 593 483 102 233 241 198 444 546 536 333 395 184 357 364 291 415
 175 703 728 657 108 570 750 207   6 390 286  76 135 103 677 506 412 123
 565 548 371 694 435 222  35 618 377 426 292 336 129 667 218 325 216 544
 721 192 746 649 485 118 691 310 624 512 573  51 143 285 763 765 707 702
 487 611 427 411 629 682 705 369 346 393  85  46  57 340 157 652 534 505
  27 715 686 459 238 260 743 372 645  24 767 185 384 467 294 591 668 276
 635 719  84 141 734 274 777 405 347 100 713 563 197 314 121 672  39  68
 145 775 200  20 243 480 149 458 133 355 680 246 475 236 673 165 586   7
  44 583 136 725 553 440 247 177 209 613  25 461  73 317 203 678 109 525
 720  17  97 329 324 154 541 419 182 520 338 539 555 139 606  14 418 716
 684 432  33 502 639 354 180 547 758 322 421 367 476  50 561 259 267 214
 159   0 424 457 469 755 669 614 582 162 269 126 125 491 490 489 468 124
 308 252  56 776  61 191 437 610 235  53 392 414 619 221 160 497 581 413
 693 268 514 742 266 510 362 388  23 535 738 181  12 189 772 349 609 526
 265 326 564 769 250  11 248 513 739 559 295 700 612 754 660 232 311 193
  10 227 630 113 253  65  89 204 168 110 508 348 365 589 281 350 433 403
 626 585 717 466 254 224  54 351 225  47 723 509 597 708 289 296 580 603
 297 675 316 187 212 622 574  26 579 504 331  71  78 146 447 697 244  34
  94 558  41 352 360 334 596 503 540 368 302 263 607 683 666 261 239 385
 479 600 482 226 398  64 465 328 477 576 194 695  22 689 643 249 287 217
  36 298 230 543 768 228 161]
INFO voc_dataset_evaluator.py: 127: AP for tvmonitor = 0.7218
INFO voc_dataset_evaluator.py: 130: Mean AP = 0.7383
INFO voc_dataset_evaluator.py: 131: ~~~~~~~~
INFO voc_dataset_evaluator.py: 132: Results:
INFO voc_dataset_evaluator.py: 134: 0.773
INFO voc_dataset_evaluator.py: 134: 0.792
INFO voc_dataset_evaluator.py: 134: 0.790
INFO voc_dataset_evaluator.py: 134: 0.622
INFO voc_dataset_evaluator.py: 134: 0.677
INFO voc_dataset_evaluator.py: 134: 0.792
INFO voc_dataset_evaluator.py: 134: 0.859
INFO voc_dataset_evaluator.py: 134: 0.856
INFO voc_dataset_evaluator.py: 134: 0.618
INFO voc_dataset_evaluator.py: 134: 0.773
INFO voc_dataset_evaluator.py: 134: 0.604
INFO voc_dataset_evaluator.py: 134: 0.819
INFO voc_dataset_evaluator.py: 134: 0.829
INFO voc_dataset_evaluator.py: 134: 0.726
INFO voc_dataset_evaluator.py: 134: 0.837
INFO voc_dataset_evaluator.py: 134: 0.462
INFO voc_dataset_evaluator.py: 134: 0.756
INFO voc_dataset_evaluator.py: 134: 0.695
INFO voc_dataset_evaluator.py: 134: 0.765
INFO voc_dataset_evaluator.py: 134: 0.722
INFO voc_dataset_evaluator.py: 135: 0.738
INFO voc_dataset_evaluator.py: 136: ~~~~~~~~
INFO voc_dataset_evaluator.py: 137: 
INFO voc_dataset_evaluator.py: 138: ----------------------------------------------------------
INFO voc_dataset_evaluator.py: 139: Results computed with the **unofficial** Python eval code.
INFO voc_dataset_evaluator.py: 140: Results should be very close to the official MATLAB code.
INFO voc_dataset_evaluator.py: 141: Use `./tools/reval.py --matlab ...` for your paper.
INFO voc_dataset_evaluator.py: 142: -- Thanks, The Management
INFO voc_dataset_evaluator.py: 143: ----------------------------------------------------------
INFO task_evaluation.py:  63: Evaluating bounding boxes is done!
INFO task_evaluation.py: 189: copypaste: Dataset: voc_2007_test
INFO task_evaluation.py: 191: copypaste: Task: box
INFO task_evaluation.py: 194: copypaste: AP,AP50,AP75,APs,APm,APl
INFO task_evaluation.py: 195: copypaste: -1.0000,-1.0000,-1.0000,-1.0000,-1.0000,-1.0000
Start testing on iteration 3999
INFO test_net.py:  72: Called with args:
INFO test_net.py:  73: Namespace(cfg_file='configs/dt/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv.yaml', dataset='voc2007', load_ckpt='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step3999.pth', load_detectron=None, multi_gpu_testing=True, num_classes=None, output_dir=None, range=None, set_cfgs=[], vis=False)
INFO test_net.py:  83: Automatically set output directory to Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test
INFO test_net.py: 130: Testing with config:
INFO test_net.py: 131: {'BBOX_XFORM_CLIP': 4.135166556742356,
 'CROP_RESIZE_WITH_MAX_POOL': True,
 'CUDA': False,
 'DATA_DIR': '/home/ubuntu/Detectron.pytorch/data',
 'DATA_LOADER': {'NUM_THREADS': 4},
 'DEBUG': False,
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXPECTED_RESULTS': [],
 'EXPECTED_RESULTS_ATOL': 0.005,
 'EXPECTED_RESULTS_EMAIL': '',
 'EXPECTED_RESULTS_RTOL': 0.1,
 'FAST_RCNN': {'BOX_OUT_STREAMS': 1,
               'CONV_HEAD_DIM': 256,
               'MLP_HEAD_DIM': 1024,
               'NUM_STACKED_CONVS': 4,
               'ROI_BOX_HEAD': 'fast_rcnn_heads.roi_2mlp_head',
               'ROI_XFORM_METHOD': 'RoIAlign',
               'ROI_XFORM_RESOLUTION': 7,
               'ROI_XFORM_SAMPLING_RATIO': 2},
 'FPN': {'COARSEST_STRIDE': 32,
         'DIM': 256,
         'EXTRA_CONV_LEVELS': False,
         'FPN_ON': True,
         'MULTILEVEL_ROIS': True,
         'MULTILEVEL_RPN': True,
         'ROI_CANONICAL_LEVEL': 4,
         'ROI_CANONICAL_SCALE': 224,
         'ROI_MAX_LEVEL': 5,
         'ROI_MIN_LEVEL': 2,
         'RPN_ANCHOR_START_SIZE': 32,
         'RPN_ASPECT_RATIOS': (0.5, 1, 2),
         'RPN_COLLECT_SCALE': 1,
         'RPN_MAX_LEVEL': 6,
         'RPN_MIN_LEVEL': 2,
         'USE_GN': False,
         'ZERO_INIT_LATERAL': False},
 'GROUP_NORM': {'DIM_PER_GP': -1, 'EPSILON': 1e-05, 'NUM_GROUPS': 32},
 'KRCNN': {'CONV_HEAD_DIM': 256,
           'CONV_HEAD_KERNEL': 3,
           'CONV_INIT': 'GaussianFill',
           'DECONV_DIM': 256,
           'DECONV_KERNEL': 4,
           'DILATION': 1,
           'HEATMAP_SIZE': -1,
           'INFERENCE_MIN_SIZE': 0,
           'KEYPOINT_CONFIDENCE': 'bbox',
           'LOSS_WEIGHT': 1.0,
           'MIN_KEYPOINT_COUNT_FOR_VALID_MINIBATCH': 20,
           'NMS_OKS': False,
           'NORMALIZE_BY_VISIBLE_KEYPOINTS': True,
           'NUM_KEYPOINTS': -1,
           'NUM_STACKED_CONVS': 8,
           'ROI_KEYPOINTS_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'UP_SCALE': -1,
           'USE_DECONV': False,
           'USE_DECONV_OUTPUT': False},
 'MATLAB': 'matlab',
 'MODEL': {'BBOX_REG_WEIGHTS': (10.0, 10.0, 5.0, 5.0),
           'CLS_AGNOSTIC_BBOX_REG': False,
           'CONV_BODY': 'FPN.fpn_ResNet101_conv5_body',
           'FASTER_RCNN': True,
           'KEYPOINTS_ON': False,
           'LOAD_IMAGENET_PRETRAINED_WEIGHTS': True,
           'MASK_ON': False,
           'NUM_CLASSES': 21,
           'RPN_ONLY': False,
           'SHARE_RES5': False,
           'TYPE': 'generalized_rcnn',
           'UNSUPERVISED_POSE': False},
 'MRCNN': {'CLS_SPECIFIC_MASK': True,
           'CONV_INIT': 'GaussianFill',
           'DILATION': 2,
           'DIM_REDUCED': 256,
           'MEMORY_EFFICIENT_LOSS': True,
           'RESOLUTION': 14,
           'ROI_MASK_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'THRESH_BINARIZE': 0.5,
           'UPSAMPLE_RATIO': 1,
           'USE_FC_OUTPUT': False,
           'WEIGHT_LOSS_MASK': 1.0},
 'NUM_GPUS': 8,
 'OUTPUT_DIR': 'Outputs',
 'PIXEL_MEANS': array([[[102.9801, 115.9465, 122.7717]]]),
 'POOLING_MODE': 'crop',
 'POOLING_SIZE': 7,
 'PYTORCH_VERSION_LESS_THAN_040': False,
 'RESNETS': {'FREEZE_AT': 2,
             'IMAGENET_PRETRAINED_WEIGHTS': 'data/pretrained_model/resnet101_caffe.pth',
             'NUM_GROUPS': 1,
             'RES5_DILATION': 1,
             'SHORTCUT_FUNC': 'basic_bn_shortcut',
             'STEM_FUNC': 'basic_bn_stem',
             'STRIDE_1X1': True,
             'TRANS_FUNC': 'bottleneck_transformation',
             'USE_GN': False,
             'WIDTH_PER_GROUP': 64},
 'RETINANET': {'ANCHOR_SCALE': 4,
               'ASPECT_RATIOS': (0.5, 1.0, 2.0),
               'BBOX_REG_BETA': 0.11,
               'BBOX_REG_WEIGHT': 1.0,
               'CLASS_SPECIFIC_BBOX': False,
               'INFERENCE_TH': 0.05,
               'LOSS_ALPHA': 0.25,
               'LOSS_GAMMA': 2.0,
               'NEGATIVE_OVERLAP': 0.4,
               'NUM_CONVS': 4,
               'POSITIVE_OVERLAP': 0.5,
               'PRE_NMS_TOP_N': 1000,
               'PRIOR_PROB': 0.01,
               'RETINANET_ON': False,
               'SCALES_PER_OCTAVE': 3,
               'SHARE_CLS_BBOX_TOWER': False,
               'SOFTMAX': False},
 'RFCN': {'PS_GRID_SIZE': 3},
 'RNG_SEED': 3,
 'ROOT_DIR': '/home/ubuntu/Detectron.pytorch',
 'RPN': {'ASPECT_RATIOS': (0.5, 1, 2),
         'CLS_ACTIVATION': 'sigmoid',
         'OUT_DIM': 512,
         'OUT_DIM_AS_IN_DIM': True,
         'RPN_ON': True,
         'SIZES': (64, 128, 256, 512),
         'STRIDE': 16},
 'SOLVER': {'BASE_LR': 2e-05,
            'BIAS_DOUBLE_LR': True,
            'BIAS_WEIGHT_DECAY': False,
            'GAMMA': 0.1,
            'LOG_LR_CHANGE_THRESHOLD': 1.1,
            'LRS': [],
            'LR_POLICY': 'steps_with_decay',
            'MAX_ITER': 10000,
            'MOMENTUM': 0.9,
            'SCALE_MOMENTUM': True,
            'SCALE_MOMENTUM_THRESHOLD': 1.1,
            'STEPS': [0, 5000, 8000],
            'STEP_SIZE': 30000,
            'TYPE': 'SGD',
            'WARM_UP_FACTOR': 0.3333333333333333,
            'WARM_UP_ITERS': 500,
            'WARM_UP_METHOD': 'linear',
            'WEIGHT_DECAY': 0.0001,
            'WEIGHT_DECAY_GN': 0.0},
 'TEST': {'BBOX_AUG': {'AREA_TH_HI': 32400,
                       'AREA_TH_LO': 2500,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'COORD_HEUR': 'UNION',
                       'ENABLED': False,
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False,
                       'SCORE_HEUR': 'UNION'},
          'BBOX_REG': True,
          'BBOX_VOTE': {'ENABLED': False,
                        'SCORING_METHOD': 'ID',
                        'SCORING_METHOD_BETA': 1.0,
                        'VOTE_TH': 0.8},
          'COMPETITION_MODE': True,
          'DATASETS': ('voc_2007_test',),
          'DETECTIONS_PER_IM': 100,
          'FORCE_JSON_DATASET_EVAL': False,
          'KPS_AUG': {'AREA_TH': 32400,
                      'ASPECT_RATIOS': (),
                      'ASPECT_RATIO_H_FLIP': False,
                      'ENABLED': False,
                      'HEUR': 'HM_AVG',
                      'H_FLIP': False,
                      'MAX_SIZE': 4000,
                      'SCALES': (),
                      'SCALE_H_FLIP': False,
                      'SCALE_SIZE_DEP': False},
          'MASK_AUG': {'AREA_TH': 32400,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'ENABLED': False,
                       'HEUR': 'SOFT_AVG',
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False},
          'MAX_SIZE': 1000,
          'NMS': 0.5,
          'PRECOMPUTED_PROPOSALS': False,
          'PROPOSAL_FILES': (),
          'PROPOSAL_LIMIT': 2000,
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 1000,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALE': 600,
          'SCORE_THRESH': 0.05,
          'SOFT_NMS': {'ENABLED': False, 'METHOD': 'linear', 'SIGMA': 0.5},
          'WEAK_SUPERVISE': False},
 'TRAIN': {'ASPECT_CROPPING': False,
           'ASPECT_GROUPING': True,
           'ASPECT_HI': 2,
           'ASPECT_LO': 0.5,
           'BATCH_SIZE_PER_IM': 512,
           'BBOX_INSIDE_WEIGHTS': (1.0, 1.0, 1.0, 1.0),
           'BBOX_NORMALIZE_MEANS': (0.0, 0.0, 0.0, 0.0),
           'BBOX_NORMALIZE_STDS': (0.1, 0.1, 0.2, 0.2),
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'COPY_CLS_TO_DET': False,
           'CROWD_FILTER_THRESH': 0.7,
           'DATASETS': (),
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'FREEZE_BOX_HEAD': True,
           'FREEZE_CONV_BODY': False,
           'FREEZE_RPN': False,
           'GT_MIN_AREA': -1,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_FILES': (),
           'RPN_BATCH_SIZE_PER_IM': 256,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 2000,
           'RPN_STRADDLE_THRESH': 0,
           'SCALES': (600,),
           'SNAPSHOT_ITERS': 2000,
           'SPATIAL_REG': False,
           'USE_FLIPPED': True,
           'WEAK_SUPERVISE': True,
           'WEAK_SUPERVISE_WITH_PRETRAIN': True},
 'VIS': False,
 'VIS_TH': 0.9}
loading annotations into memory...
Done (t=0.15s)
creating index...
index created!
INFO subprocess.py:  59: 0,1,2,3
INFO subprocess.py:  67: gpu_inds: [0, 1, 2, 3]
INFO subprocess.py:  89: detection range command 0: python /home/ubuntu/Detectron.pytorch/tools/test_net.py --range 0 1238 --cfg Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_config.yaml --set TEST.DATASETS '("voc_2007_test",)' --output_dir Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test --load_ckpt Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step3999.pth
INFO subprocess.py:  89: detection range command 1: python /home/ubuntu/Detectron.pytorch/tools/test_net.py --range 1238 2476 --cfg Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_config.yaml --set TEST.DATASETS '("voc_2007_test",)' --output_dir Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test --load_ckpt Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step3999.pth
INFO subprocess.py:  89: detection range command 2: python /home/ubuntu/Detectron.pytorch/tools/test_net.py --range 2476 3714 --cfg Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_config.yaml --set TEST.DATASETS '("voc_2007_test",)' --output_dir Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test --load_ckpt Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step3999.pth
INFO subprocess.py:  89: detection range command 3: python /home/ubuntu/Detectron.pytorch/tools/test_net.py --range 3714 4952 --cfg Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_config.yaml --set TEST.DATASETS '("voc_2007_test",)' --output_dir Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test --load_ckpt Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step3999.pth
INFO subprocess.py: 129: # ---------------------------------------------------------------------------- #
INFO subprocess.py: 131: stdout of subprocess 0 with range [1, 1238]
INFO subprocess.py: 133: # ---------------------------------------------------------------------------- #
INFO test_net.py:  72: Called with args:
INFO test_net.py:  73: Namespace(cfg_file='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_config.yaml', dataset=None, load_ckpt='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step3999.pth', load_detectron=None, multi_gpu_testing=False, num_classes=None, output_dir='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test', range=[0, 1238], set_cfgs=['TEST.DATASETS', '("voc_2007_test",)'], vis=False)
INFO test_net.py: 130: Testing with config:
INFO test_net.py: 131: {'BBOX_XFORM_CLIP': 4.135166556742356,
 'CROP_RESIZE_WITH_MAX_POOL': True,
 'CUDA': False,
 'DATA_DIR': '/home/ubuntu/Detectron.pytorch/data',
 'DATA_LOADER': {'NUM_THREADS': 4},
 'DEBUG': False,
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXPECTED_RESULTS': [],
 'EXPECTED_RESULTS_ATOL': 0.005,
 'EXPECTED_RESULTS_EMAIL': '',
 'EXPECTED_RESULTS_RTOL': 0.1,
 'FAST_RCNN': {'BOX_OUT_STREAMS': 1,
               'CONV_HEAD_DIM': 256,
               'MLP_HEAD_DIM': 1024,
               'NUM_STACKED_CONVS': 4,
               'ROI_BOX_HEAD': 'fast_rcnn_heads.roi_2mlp_head',
               'ROI_XFORM_METHOD': 'RoIAlign',
               'ROI_XFORM_RESOLUTION': 7,
               'ROI_XFORM_SAMPLING_RATIO': 2},
 'FPN': {'COARSEST_STRIDE': 32,
         'DIM': 256,
         'EXTRA_CONV_LEVELS': False,
         'FPN_ON': True,
         'MULTILEVEL_ROIS': True,
         'MULTILEVEL_RPN': True,
         'ROI_CANONICAL_LEVEL': 4,
         'ROI_CANONICAL_SCALE': 224,
         'ROI_MAX_LEVEL': 5,
         'ROI_MIN_LEVEL': 2,
         'RPN_ANCHOR_START_SIZE': 32,
         'RPN_ASPECT_RATIOS': (0.5, 1, 2),
         'RPN_COLLECT_SCALE': 1,
         'RPN_MAX_LEVEL': 6,
         'RPN_MIN_LEVEL': 2,
         'USE_GN': False,
         'ZERO_INIT_LATERAL': False},
 'GROUP_NORM': {'DIM_PER_GP': -1, 'EPSILON': 1e-05, 'NUM_GROUPS': 32},
 'KRCNN': {'CONV_HEAD_DIM': 256,
           'CONV_HEAD_KERNEL': 3,
           'CONV_INIT': 'GaussianFill',
           'DECONV_DIM': 256,
           'DECONV_KERNEL': 4,
           'DILATION': 1,
           'HEATMAP_SIZE': -1,
           'INFERENCE_MIN_SIZE': 0,
           'KEYPOINT_CONFIDENCE': 'bbox',
           'LOSS_WEIGHT': 1.0,
           'MIN_KEYPOINT_COUNT_FOR_VALID_MINIBATCH': 20,
           'NMS_OKS': False,
           'NORMALIZE_BY_VISIBLE_KEYPOINTS': True,
           'NUM_KEYPOINTS': -1,
           'NUM_STACKED_CONVS': 8,
           'ROI_KEYPOINTS_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'UP_SCALE': -1,
           'USE_DECONV': False,
           'USE_DECONV_OUTPUT': False},
 'MATLAB': 'matlab',
 'MODEL': {'BBOX_REG_WEIGHTS': (10.0, 10.0, 5.0, 5.0),
           'CLS_AGNOSTIC_BBOX_REG': False,
           'CONV_BODY': 'FPN.fpn_ResNet101_conv5_body',
           'FASTER_RCNN': True,
           'KEYPOINTS_ON': False,
           'LOAD_IMAGENET_PRETRAINED_WEIGHTS': True,
           'MASK_ON': False,
           'NUM_CLASSES': 21,
           'RPN_ONLY': False,
           'SHARE_RES5': False,
           'TYPE': 'generalized_rcnn',
           'UNSUPERVISED_POSE': False},
 'MRCNN': {'CLS_SPECIFIC_MASK': True,
           'CONV_INIT': 'GaussianFill',
           'DILATION': 2,
           'DIM_REDUCED': 256,
           'MEMORY_EFFICIENT_LOSS': True,
           'RESOLUTION': 14,
           'ROI_MASK_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'THRESH_BINARIZE': 0.5,
           'UPSAMPLE_RATIO': 1,
           'USE_FC_OUTPUT': False,
           'WEIGHT_LOSS_MASK': 1.0},
 'NUM_GPUS': 8,
 'OUTPUT_DIR': 'Outputs',
 'PIXEL_MEANS': array([[[102.9801, 115.9465, 122.7717]]]),
 'POOLING_MODE': 'crop',
 'POOLING_SIZE': 7,
 'PYTORCH_VERSION_LESS_THAN_040': False,
 'RESNETS': {'FREEZE_AT': 2,
             'IMAGENET_PRETRAINED_WEIGHTS': 'data/pretrained_model/resnet101_caffe.pth',
             'NUM_GROUPS': 1,
             'RES5_DILATION': 1,
             'SHORTCUT_FUNC': 'basic_bn_shortcut',
             'STEM_FUNC': 'basic_bn_stem',
             'STRIDE_1X1': True,
             'TRANS_FUNC': 'bottleneck_transformation',
             'USE_GN': False,
             'WIDTH_PER_GROUP': 64},
 'RETINANET': {'ANCHOR_SCALE': 4,
               'ASPECT_RATIOS': (0.5, 1.0, 2.0),
               'BBOX_REG_BETA': 0.11,
               'BBOX_REG_WEIGHT': 1.0,
               'CLASS_SPECIFIC_BBOX': False,
               'INFERENCE_TH': 0.05,
               'LOSS_ALPHA': 0.25,
               'LOSS_GAMMA': 2.0,
               'NEGATIVE_OVERLAP': 0.4,
               'NUM_CONVS': 4,
               'POSITIVE_OVERLAP': 0.5,
               'PRE_NMS_TOP_N': 1000,
               'PRIOR_PROB': 0.01,
               'RETINANET_ON': False,
               'SCALES_PER_OCTAVE': 3,
               'SHARE_CLS_BBOX_TOWER': False,
               'SOFTMAX': False},
 'RFCN': {'PS_GRID_SIZE': 3},
 'RNG_SEED': 3,
 'ROOT_DIR': '/home/ubuntu/Detectron.pytorch',
 'RPN': {'ASPECT_RATIOS': (0.5, 1, 2),
         'CLS_ACTIVATION': 'sigmoid',
         'OUT_DIM': 512,
         'OUT_DIM_AS_IN_DIM': True,
         'RPN_ON': True,
         'SIZES': (64, 128, 256, 512),
         'STRIDE': 16},
 'SOLVER': {'BASE_LR': 2e-05,
            'BIAS_DOUBLE_LR': True,
            'BIAS_WEIGHT_DECAY': False,
            'GAMMA': 0.1,
            'LOG_LR_CHANGE_THRESHOLD': 1.1,
            'LRS': [],
            'LR_POLICY': 'steps_with_decay',
            'MAX_ITER': 10000,
            'MOMENTUM': 0.9,
            'SCALE_MOMENTUM': True,
            'SCALE_MOMENTUM_THRESHOLD': 1.1,
            'STEPS': [0, 5000, 8000],
            'STEP_SIZE': 30000,
            'TYPE': 'SGD',
            'WARM_UP_FACTOR': 0.3333333333333333,
            'WARM_UP_ITERS': 500,
            'WARM_UP_METHOD': 'linear',
            'WEIGHT_DECAY': 0.0001,
            'WEIGHT_DECAY_GN': 0.0},
 'TEST': {'BBOX_AUG': {'AREA_TH_HI': 32400,
                       'AREA_TH_LO': 2500,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'COORD_HEUR': 'UNION',
                       'ENABLED': False,
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False,
                       'SCORE_HEUR': 'UNION'},
          'BBOX_REG': True,
          'BBOX_VOTE': {'ENABLED': False,
                        'SCORING_METHOD': 'ID',
                        'SCORING_METHOD_BETA': 1.0,
                        'VOTE_TH': 0.8},
          'COMPETITION_MODE': True,
          'DATASETS': ('voc_2007_test',),
          'DETECTIONS_PER_IM': 100,
          'FORCE_JSON_DATASET_EVAL': False,
          'KPS_AUG': {'AREA_TH': 32400,
                      'ASPECT_RATIOS': (),
                      'ASPECT_RATIO_H_FLIP': False,
                      'ENABLED': False,
                      'HEUR': 'HM_AVG',
                      'H_FLIP': False,
                      'MAX_SIZE': 4000,
                      'SCALES': (),
                      'SCALE_H_FLIP': False,
                      'SCALE_SIZE_DEP': False},
          'MASK_AUG': {'AREA_TH': 32400,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'ENABLED': False,
                       'HEUR': 'SOFT_AVG',
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False},
          'MAX_SIZE': 1000,
          'NMS': 0.5,
          'PRECOMPUTED_PROPOSALS': False,
          'PROPOSAL_FILES': (),
          'PROPOSAL_LIMIT': 2000,
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 1000,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALE': 600,
          'SCORE_THRESH': 0.05,
          'SOFT_NMS': {'ENABLED': False, 'METHOD': 'linear', 'SIGMA': 0.5},
          'WEAK_SUPERVISE': False},
 'TRAIN': {'ASPECT_CROPPING': False,
           'ASPECT_GROUPING': True,
           'ASPECT_HI': 2,
           'ASPECT_LO': 0.5,
           'BATCH_SIZE_PER_IM': 512,
           'BBOX_INSIDE_WEIGHTS': (1.0, 1.0, 1.0, 1.0),
           'BBOX_NORMALIZE_MEANS': (0.0, 0.0, 0.0, 0.0),
           'BBOX_NORMALIZE_STDS': (0.1, 0.1, 0.2, 0.2),
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'COPY_CLS_TO_DET': False,
           'CROWD_FILTER_THRESH': 0.7,
           'DATASETS': (),
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'FREEZE_BOX_HEAD': True,
           'FREEZE_CONV_BODY': False,
           'FREEZE_RPN': False,
           'GT_MIN_AREA': -1,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_FILES': (),
           'RPN_BATCH_SIZE_PER_IM': 256,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 2000,
           'RPN_STRADDLE_THRESH': 0,
           'SCALES': (600,),
           'SNAPSHOT_ITERS': 2000,
           'SPATIAL_REG': False,
           'USE_FLIPPED': True,
           'WEAK_SUPERVISE': True,
           'WEAK_SUPERVISE_WITH_PRETRAIN': True},
 'VIS': False,
 'VIS_TH': 0.9}
loading annotations into memory...
Done (t=0.10s)
creating index...
index created!
INFO test_engine.py: 324: training mode? : False
INFO test_engine.py: 331: loading checkpoint Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step3999.pth
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1/1238 0.508s + 0.002s (eta: 0:10:30)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 11/1238 0.558s + 0.001s (eta: 0:11:26)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 21/1238 0.537s + 0.001s (eta: 0:10:55)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 31/1238 0.530s + 0.001s (eta: 0:10:41)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 41/1238 0.521s + 0.002s (eta: 0:10:25)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 51/1238 0.517s + 0.002s (eta: 0:10:15)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 61/1238 0.518s + 0.002s (eta: 0:10:11)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 71/1238 0.519s + 0.002s (eta: 0:10:07)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 81/1238 0.519s + 0.002s (eta: 0:10:01)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 91/1238 0.513s + 0.002s (eta: 0:09:49)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 101/1238 0.512s + 0.002s (eta: 0:09:44)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 111/1238 0.512s + 0.002s (eta: 0:09:39)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 121/1238 0.509s + 0.002s (eta: 0:09:30)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 131/1238 0.510s + 0.002s (eta: 0:09:26)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 141/1238 0.509s + 0.002s (eta: 0:09:20)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 151/1238 0.508s + 0.002s (eta: 0:09:13)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 161/1238 0.508s + 0.002s (eta: 0:09:08)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 171/1238 0.508s + 0.002s (eta: 0:09:04)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 181/1238 0.510s + 0.002s (eta: 0:09:01)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 191/1238 0.509s + 0.002s (eta: 0:08:54)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 201/1238 0.508s + 0.002s (eta: 0:08:48)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 211/1238 0.507s + 0.002s (eta: 0:08:42)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 221/1238 0.505s + 0.002s (eta: 0:08:35)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 231/1238 0.504s + 0.002s (eta: 0:08:29)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 241/1238 0.506s + 0.002s (eta: 0:08:26)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 251/1238 0.506s + 0.002s (eta: 0:08:20)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 261/1238 0.506s + 0.002s (eta: 0:08:15)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 271/1238 0.505s + 0.002s (eta: 0:08:09)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 281/1238 0.506s + 0.002s (eta: 0:08:06)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 291/1238 0.506s + 0.002s (eta: 0:08:00)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 301/1238 0.506s + 0.002s (eta: 0:07:55)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 311/1238 0.505s + 0.002s (eta: 0:07:49)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 321/1238 0.506s + 0.002s (eta: 0:07:45)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 331/1238 0.506s + 0.002s (eta: 0:07:40)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 341/1238 0.505s + 0.002s (eta: 0:07:34)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 351/1238 0.507s + 0.002s (eta: 0:07:31)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 361/1238 0.507s + 0.002s (eta: 0:07:26)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 371/1238 0.508s + 0.002s (eta: 0:07:21)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 381/1238 0.508s + 0.002s (eta: 0:07:17)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 391/1238 0.507s + 0.002s (eta: 0:07:11)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 401/1238 0.506s + 0.002s (eta: 0:07:04)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 411/1238 0.503s + 0.002s (eta: 0:06:57)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 421/1238 0.500s + 0.002s (eta: 0:06:50)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 431/1238 0.498s + 0.002s (eta: 0:06:43)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 441/1238 0.496s + 0.002s (eta: 0:06:36)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 451/1238 0.494s + 0.002s (eta: 0:06:29)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 461/1238 0.491s + 0.002s (eta: 0:06:22)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 471/1238 0.491s + 0.002s (eta: 0:06:17)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 481/1238 0.490s + 0.002s (eta: 0:06:12)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 491/1238 0.491s + 0.002s (eta: 0:06:07)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 501/1238 0.492s + 0.002s (eta: 0:06:03)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 511/1238 0.492s + 0.002s (eta: 0:05:58)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 521/1238 0.493s + 0.002s (eta: 0:05:54)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 531/1238 0.494s + 0.002s (eta: 0:05:50)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 541/1238 0.493s + 0.002s (eta: 0:05:44)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 551/1238 0.493s + 0.002s (eta: 0:05:39)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 561/1238 0.494s + 0.002s (eta: 0:05:35)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 571/1238 0.493s + 0.002s (eta: 0:05:30)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 581/1238 0.494s + 0.002s (eta: 0:05:25)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 591/1238 0.493s + 0.002s (eta: 0:05:20)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 601/1238 0.493s + 0.002s (eta: 0:05:15)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 611/1238 0.494s + 0.002s (eta: 0:05:10)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 621/1238 0.494s + 0.002s (eta: 0:05:06)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 631/1238 0.494s + 0.002s (eta: 0:05:01)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 641/1238 0.495s + 0.002s (eta: 0:04:56)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 651/1238 0.495s + 0.002s (eta: 0:04:51)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 661/1238 0.495s + 0.002s (eta: 0:04:46)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 671/1238 0.495s + 0.002s (eta: 0:04:41)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 681/1238 0.495s + 0.002s (eta: 0:04:36)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 691/1238 0.494s + 0.002s (eta: 0:04:31)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 701/1238 0.495s + 0.002s (eta: 0:04:26)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 711/1238 0.494s + 0.002s (eta: 0:04:21)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 721/1238 0.495s + 0.002s (eta: 0:04:16)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 731/1238 0.495s + 0.002s (eta: 0:04:11)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 741/1238 0.494s + 0.002s (eta: 0:04:06)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 751/1238 0.494s + 0.002s (eta: 0:04:01)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 761/1238 0.494s + 0.002s (eta: 0:03:56)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 771/1238 0.494s + 0.002s (eta: 0:03:51)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 781/1238 0.494s + 0.002s (eta: 0:03:46)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 791/1238 0.493s + 0.002s (eta: 0:03:41)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 801/1238 0.494s + 0.002s (eta: 0:03:36)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 811/1238 0.493s + 0.002s (eta: 0:03:31)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 821/1238 0.493s + 0.002s (eta: 0:03:26)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 831/1238 0.493s + 0.002s (eta: 0:03:21)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 841/1238 0.493s + 0.002s (eta: 0:03:16)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 851/1238 0.493s + 0.002s (eta: 0:03:11)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 861/1238 0.493s + 0.002s (eta: 0:03:06)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 871/1238 0.493s + 0.002s (eta: 0:03:01)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 881/1238 0.492s + 0.002s (eta: 0:02:56)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 891/1238 0.492s + 0.002s (eta: 0:02:51)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 901/1238 0.493s + 0.002s (eta: 0:02:46)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 911/1238 0.493s + 0.002s (eta: 0:02:41)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 921/1238 0.493s + 0.002s (eta: 0:02:36)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 931/1238 0.492s + 0.002s (eta: 0:02:31)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 941/1238 0.492s + 0.002s (eta: 0:02:26)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 951/1238 0.492s + 0.002s (eta: 0:02:21)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 961/1238 0.492s + 0.002s (eta: 0:02:16)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 971/1238 0.491s + 0.002s (eta: 0:02:11)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 981/1238 0.491s + 0.002s (eta: 0:02:06)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 991/1238 0.491s + 0.002s (eta: 0:02:01)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1001/1238 0.491s + 0.002s (eta: 0:01:56)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1011/1238 0.491s + 0.002s (eta: 0:01:51)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1021/1238 0.491s + 0.002s (eta: 0:01:46)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1031/1238 0.491s + 0.002s (eta: 0:01:42)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1041/1238 0.491s + 0.002s (eta: 0:01:37)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1051/1238 0.491s + 0.002s (eta: 0:01:32)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1061/1238 0.492s + 0.002s (eta: 0:01:27)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1071/1238 0.492s + 0.002s (eta: 0:01:22)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1081/1238 0.492s + 0.002s (eta: 0:01:17)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1091/1238 0.492s + 0.002s (eta: 0:01:12)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1101/1238 0.492s + 0.002s (eta: 0:01:07)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1111/1238 0.491s + 0.002s (eta: 0:01:02)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1121/1238 0.492s + 0.002s (eta: 0:00:57)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1131/1238 0.492s + 0.002s (eta: 0:00:52)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1141/1238 0.492s + 0.002s (eta: 0:00:47)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1151/1238 0.492s + 0.002s (eta: 0:00:42)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1161/1238 0.492s + 0.002s (eta: 0:00:38)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1171/1238 0.491s + 0.002s (eta: 0:00:33)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1181/1238 0.491s + 0.002s (eta: 0:00:28)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1191/1238 0.492s + 0.002s (eta: 0:00:23)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1201/1238 0.491s + 0.002s (eta: 0:00:18)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1211/1238 0.491s + 0.002s (eta: 0:00:13)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1221/1238 0.491s + 0.002s (eta: 0:00:08)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1231/1238 0.491s + 0.002s (eta: 0:00:03)
INFO test_engine.py: 314: Wrote detections to: /home/ubuntu/Detectron.pytorch/Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_0_1238.pkl
/home/ubuntu/anaconda3/envs/pytorch41/lib/python3.7/site-packages/torch/nn/functional.py:1890: UserWarning: nn.functional.upsample is deprecated. Use nn.functional.interpolate instead.
  warnings.warn("nn.functional.upsample is deprecated. Use nn.functional.interpolate instead.")
INFO subprocess.py: 129: # ---------------------------------------------------------------------------- #
INFO subprocess.py: 131: stdout of subprocess 1 with range [1239, 2476]
INFO subprocess.py: 133: # ---------------------------------------------------------------------------- #
INFO test_net.py:  72: Called with args:
INFO test_net.py:  73: Namespace(cfg_file='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_config.yaml', dataset=None, load_ckpt='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step3499.pth', load_detectron=None, multi_gpu_testing=False, num_classes=None, output_dir='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test', range=[1238, 2476], set_cfgs=['TEST.DATASETS', '("voc_2007_test",)'], vis=False)
INFO test_net.py: 130: Testing with config:
INFO test_net.py: 131: {'BBOX_XFORM_CLIP': 4.135166556742356,
 'CROP_RESIZE_WITH_MAX_POOL': True,
 'CUDA': False,
 'DATA_DIR': '/home/ubuntu/Detectron.pytorch/data',
 'DATA_LOADER': {'NUM_THREADS': 4},
 'DEBUG': False,
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXPECTED_RESULTS': [],
 'EXPECTED_RESULTS_ATOL': 0.005,
 'EXPECTED_RESULTS_EMAIL': '',
 'EXPECTED_RESULTS_RTOL': 0.1,
 'FAST_RCNN': {'BOX_OUT_STREAMS': 1,
               'CONV_HEAD_DIM': 256,
               'MLP_HEAD_DIM': 1024,
               'NUM_STACKED_CONVS': 4,
               'ROI_BOX_HEAD': 'fast_rcnn_heads.roi_2mlp_head',
               'ROI_XFORM_METHOD': 'RoIAlign',
               'ROI_XFORM_RESOLUTION': 7,
               'ROI_XFORM_SAMPLING_RATIO': 2},
 'FPN': {'COARSEST_STRIDE': 32,
         'DIM': 256,
         'EXTRA_CONV_LEVELS': False,
         'FPN_ON': True,
         'MULTILEVEL_ROIS': True,
         'MULTILEVEL_RPN': True,
         'ROI_CANONICAL_LEVEL': 4,
         'ROI_CANONICAL_SCALE': 224,
         'ROI_MAX_LEVEL': 5,
         'ROI_MIN_LEVEL': 2,
         'RPN_ANCHOR_START_SIZE': 32,
         'RPN_ASPECT_RATIOS': (0.5, 1, 2),
         'RPN_COLLECT_SCALE': 1,
         'RPN_MAX_LEVEL': 6,
         'RPN_MIN_LEVEL': 2,
         'USE_GN': False,
         'ZERO_INIT_LATERAL': False},
 'GROUP_NORM': {'DIM_PER_GP': -1, 'EPSILON': 1e-05, 'NUM_GROUPS': 32},
 'KRCNN': {'CONV_HEAD_DIM': 256,
           'CONV_HEAD_KERNEL': 3,
           'CONV_INIT': 'GaussianFill',
           'DECONV_DIM': 256,
           'DECONV_KERNEL': 4,
           'DILATION': 1,
           'HEATMAP_SIZE': -1,
           'INFERENCE_MIN_SIZE': 0,
           'KEYPOINT_CONFIDENCE': 'bbox',
           'LOSS_WEIGHT': 1.0,
           'MIN_KEYPOINT_COUNT_FOR_VALID_MINIBATCH': 20,
           'NMS_OKS': False,
           'NORMALIZE_BY_VISIBLE_KEYPOINTS': True,
           'NUM_KEYPOINTS': -1,
           'NUM_STACKED_CONVS': 8,
           'ROI_KEYPOINTS_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'UP_SCALE': -1,
           'USE_DECONV': False,
           'USE_DECONV_OUTPUT': False},
 'MATLAB': 'matlab',
 'MODEL': {'BBOX_REG_WEIGHTS': (10.0, 10.0, 5.0, 5.0),
           'CLS_AGNOSTIC_BBOX_REG': False,
           'CONV_BODY': 'FPN.fpn_ResNet101_conv5_body',
           'FASTER_RCNN': True,
           'KEYPOINTS_ON': False,
           'LOAD_IMAGENET_PRETRAINED_WEIGHTS': True,
           'MASK_ON': False,
           'NUM_CLASSES': 21,
           'RPN_ONLY': False,
           'SHARE_RES5': False,
           'TYPE': 'generalized_rcnn',
           'UNSUPERVISED_POSE': False},
 'MRCNN': {'CLS_SPECIFIC_MASK': True,
           'CONV_INIT': 'GaussianFill',
           'DILATION': 2,
           'DIM_REDUCED': 256,
           'MEMORY_EFFICIENT_LOSS': True,
           'RESOLUTION': 14,
           'ROI_MASK_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'THRESH_BINARIZE': 0.5,
           'UPSAMPLE_RATIO': 1,
           'USE_FC_OUTPUT': False,
           'WEIGHT_LOSS_MASK': 1.0},
 'NUM_GPUS': 8,
 'OUTPUT_DIR': 'Outputs',
 'PIXEL_MEANS': array([[[102.9801, 115.9465, 122.7717]]]),
 'POOLING_MODE': 'crop',
 'POOLING_SIZE': 7,
 'PYTORCH_VERSION_LESS_THAN_040': False,
 'RESNETS': {'FREEZE_AT': 2,
             'IMAGENET_PRETRAINED_WEIGHTS': 'data/pretrained_model/resnet101_caffe.pth',
             'NUM_GROUPS': 1,
             'RES5_DILATION': 1,
             'SHORTCUT_FUNC': 'basic_bn_shortcut',
             'STEM_FUNC': 'basic_bn_stem',
             'STRIDE_1X1': True,
             'TRANS_FUNC': 'bottleneck_transformation',
             'USE_GN': False,
             'WIDTH_PER_GROUP': 64},
 'RETINANET': {'ANCHOR_SCALE': 4,
               'ASPECT_RATIOS': (0.5, 1.0, 2.0),
               'BBOX_REG_BETA': 0.11,
               'BBOX_REG_WEIGHT': 1.0,
               'CLASS_SPECIFIC_BBOX': False,
               'INFERENCE_TH': 0.05,
               'LOSS_ALPHA': 0.25,
               'LOSS_GAMMA': 2.0,
               'NEGATIVE_OVERLAP': 0.4,
               'NUM_CONVS': 4,
               'POSITIVE_OVERLAP': 0.5,
               'PRE_NMS_TOP_N': 1000,
               'PRIOR_PROB': 0.01,
               'RETINANET_ON': False,
               'SCALES_PER_OCTAVE': 3,
               'SHARE_CLS_BBOX_TOWER': False,
               'SOFTMAX': False},
 'RFCN': {'PS_GRID_SIZE': 3},
 'RNG_SEED': 3,
 'ROOT_DIR': '/home/ubuntu/Detectron.pytorch',
 'RPN': {'ASPECT_RATIOS': (0.5, 1, 2),
         'CLS_ACTIVATION': 'sigmoid',
         'OUT_DIM': 512,
         'OUT_DIM_AS_IN_DIM': True,
         'RPN_ON': True,
         'SIZES': (64, 128, 256, 512),
         'STRIDE': 16},
 'SOLVER': {'BASE_LR': 2e-05,
            'BIAS_DOUBLE_LR': True,
            'BIAS_WEIGHT_DECAY': False,
            'GAMMA': 0.1,
            'LOG_LR_CHANGE_THRESHOLD': 1.1,
            'LRS': [],
            'LR_POLICY': 'steps_with_decay',
            'MAX_ITER': 10000,
            'MOMENTUM': 0.9,
            'SCALE_MOMENTUM': True,
            'SCALE_MOMENTUM_THRESHOLD': 1.1,
            'STEPS': [0, 5000, 8000],
            'STEP_SIZE': 30000,
            'TYPE': 'SGD',
            'WARM_UP_FACTOR': 0.3333333333333333,
            'WARM_UP_ITERS': 500,
            'WARM_UP_METHOD': 'linear',
            'WEIGHT_DECAY': 0.0001,
            'WEIGHT_DECAY_GN': 0.0},
 'TEST': {'BBOX_AUG': {'AREA_TH_HI': 32400,
                       'AREA_TH_LO': 2500,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'COORD_HEUR': 'UNION',
                       'ENABLED': False,
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False,
                       'SCORE_HEUR': 'UNION'},
          'BBOX_REG': True,
          'BBOX_VOTE': {'ENABLED': False,
                        'SCORING_METHOD': 'ID',
                        'SCORING_METHOD_BETA': 1.0,
                        'VOTE_TH': 0.8},
          'COMPETITION_MODE': True,
          'DATASETS': ('voc_2007_test',),
          'DETECTIONS_PER_IM': 100,
          'FORCE_JSON_DATASET_EVAL': False,
          'KPS_AUG': {'AREA_TH': 32400,
                      'ASPECT_RATIOS': (),
                      'ASPECT_RATIO_H_FLIP': False,
                      'ENABLED': False,
                      'HEUR': 'HM_AVG',
                      'H_FLIP': False,
                      'MAX_SIZE': 4000,
                      'SCALES': (),
                      'SCALE_H_FLIP': False,
                      'SCALE_SIZE_DEP': False},
          'MASK_AUG': {'AREA_TH': 32400,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'ENABLED': False,
                       'HEUR': 'SOFT_AVG',
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False},
          'MAX_SIZE': 1000,
          'NMS': 0.5,
          'PRECOMPUTED_PROPOSALS': False,
          'PROPOSAL_FILES': (),
          'PROPOSAL_LIMIT': 2000,
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 1000,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALE': 600,
          'SCORE_THRESH': 0.05,
          'SOFT_NMS': {'ENABLED': False, 'METHOD': 'linear', 'SIGMA': 0.5},
          'WEAK_SUPERVISE': False},
 'TRAIN': {'ASPECT_CROPPING': False,
           'ASPECT_GROUPING': True,
           'ASPECT_HI': 2,
           'ASPECT_LO': 0.5,
           'BATCH_SIZE_PER_IM': 512,
           'BBOX_INSIDE_WEIGHTS': (1.0, 1.0, 1.0, 1.0),
           'BBOX_NORMALIZE_MEANS': (0.0, 0.0, 0.0, 0.0),
           'BBOX_NORMALIZE_STDS': (0.1, 0.1, 0.2, 0.2),
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'COPY_CLS_TO_DET': False,
           'CROWD_FILTER_THRESH': 0.7,
           'DATASETS': (),
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'FREEZE_BOX_HEAD': True,
           'FREEZE_CONV_BODY': False,
           'FREEZE_RPN': False,
           'GT_MIN_AREA': -1,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_FILES': (),
           'RPN_BATCH_SIZE_PER_IM': 256,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 2000,
           'RPN_STRADDLE_THRESH': 0,
           'SCALES': (600,),
           'SNAPSHOT_ITERS': 2000,
           'SPATIAL_REG': False,
           'USE_FLIPPED': True,
           'WEAK_SUPERVISE': True,
           'WEAK_SUPERVISE_WITH_PRETRAIN': True},
 'VIS': False,
 'VIS_TH': 0.9}
loading annotations into memory...
Done (t=0.13s)
creating index...
index created!
INFO test_engine.py: 324: training mode? : False
INFO test_engine.py: 331: loading checkpoint Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step3499.pth
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1239/2476 0.798s + 0.002s (eta: 0:16:29)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1249/2476 0.477s + 0.003s (eta: 0:09:48)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1259/2476 0.509s + 0.002s (eta: 0:10:21)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1269/2476 0.509s + 0.002s (eta: 0:10:16)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1279/2476 0.502s + 0.002s (eta: 0:10:03)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1289/2476 0.501s + 0.002s (eta: 0:09:57)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1299/2476 0.506s + 0.002s (eta: 0:09:57)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1309/2476 0.504s + 0.002s (eta: 0:09:50)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1319/2476 0.506s + 0.002s (eta: 0:09:47)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1329/2476 0.508s + 0.002s (eta: 0:09:45)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1339/2476 0.512s + 0.002s (eta: 0:09:43)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1349/2476 0.513s + 0.002s (eta: 0:09:40)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1359/2476 0.507s + 0.002s (eta: 0:09:28)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1369/2476 0.507s + 0.002s (eta: 0:09:23)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1379/2476 0.507s + 0.002s (eta: 0:09:18)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1389/2476 0.509s + 0.002s (eta: 0:09:15)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1399/2476 0.506s + 0.002s (eta: 0:09:07)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1409/2476 0.507s + 0.002s (eta: 0:09:03)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1419/2476 0.506s + 0.002s (eta: 0:08:57)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1429/2476 0.507s + 0.002s (eta: 0:08:53)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1439/2476 0.508s + 0.002s (eta: 0:08:48)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1449/2476 0.508s + 0.002s (eta: 0:08:43)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1459/2476 0.507s + 0.002s (eta: 0:08:38)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1469/2476 0.508s + 0.002s (eta: 0:08:34)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1479/2476 0.509s + 0.002s (eta: 0:08:29)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1489/2476 0.510s + 0.002s (eta: 0:08:25)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1499/2476 0.510s + 0.002s (eta: 0:08:20)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1509/2476 0.509s + 0.002s (eta: 0:08:13)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1519/2476 0.508s + 0.002s (eta: 0:08:08)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1529/2476 0.509s + 0.002s (eta: 0:08:04)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1539/2476 0.508s + 0.002s (eta: 0:07:57)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1549/2476 0.508s + 0.002s (eta: 0:07:52)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1559/2476 0.507s + 0.002s (eta: 0:07:47)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1569/2476 0.507s + 0.002s (eta: 0:07:41)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1579/2476 0.506s + 0.002s (eta: 0:07:35)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1589/2476 0.505s + 0.002s (eta: 0:07:29)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1599/2476 0.506s + 0.002s (eta: 0:07:25)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1609/2476 0.505s + 0.002s (eta: 0:07:19)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1619/2476 0.505s + 0.002s (eta: 0:07:14)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1629/2476 0.505s + 0.002s (eta: 0:07:09)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1639/2476 0.505s + 0.002s (eta: 0:07:04)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1649/2476 0.504s + 0.002s (eta: 0:06:58)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1659/2476 0.503s + 0.002s (eta: 0:06:52)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1669/2476 0.503s + 0.002s (eta: 0:06:47)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1679/2476 0.504s + 0.002s (eta: 0:06:43)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1689/2476 0.503s + 0.002s (eta: 0:06:37)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1699/2476 0.504s + 0.002s (eta: 0:06:33)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1709/2476 0.504s + 0.002s (eta: 0:06:28)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1719/2476 0.504s + 0.002s (eta: 0:06:23)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1729/2476 0.504s + 0.002s (eta: 0:06:18)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1739/2476 0.504s + 0.002s (eta: 0:06:13)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1749/2476 0.504s + 0.002s (eta: 0:06:07)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1759/2476 0.504s + 0.002s (eta: 0:06:02)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1769/2476 0.503s + 0.002s (eta: 0:05:56)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1779/2476 0.502s + 0.002s (eta: 0:05:51)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1789/2476 0.502s + 0.002s (eta: 0:05:46)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1799/2476 0.502s + 0.002s (eta: 0:05:41)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1809/2476 0.502s + 0.002s (eta: 0:05:36)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1819/2476 0.502s + 0.002s (eta: 0:05:30)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1829/2476 0.501s + 0.002s (eta: 0:05:25)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1839/2476 0.501s + 0.002s (eta: 0:05:20)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1849/2476 0.500s + 0.002s (eta: 0:05:14)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1859/2476 0.500s + 0.002s (eta: 0:05:09)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1869/2476 0.500s + 0.002s (eta: 0:05:04)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1879/2476 0.500s + 0.002s (eta: 0:04:59)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1889/2476 0.500s + 0.002s (eta: 0:04:54)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1899/2476 0.500s + 0.002s (eta: 0:04:49)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1909/2476 0.500s + 0.002s (eta: 0:04:44)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1919/2476 0.500s + 0.002s (eta: 0:04:39)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1929/2476 0.500s + 0.002s (eta: 0:04:34)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1939/2476 0.499s + 0.002s (eta: 0:04:29)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1949/2476 0.500s + 0.002s (eta: 0:04:24)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1959/2476 0.499s + 0.002s (eta: 0:04:19)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1969/2476 0.499s + 0.002s (eta: 0:04:14)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1979/2476 0.499s + 0.002s (eta: 0:04:08)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1989/2476 0.499s + 0.002s (eta: 0:04:04)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1999/2476 0.499s + 0.002s (eta: 0:03:59)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2009/2476 0.488s + 0.002s (eta: 0:03:48)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2019/2476 0.488s + 0.002s (eta: 0:03:43)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2029/2476 0.488s + 0.002s (eta: 0:03:39)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2039/2476 0.489s + 0.002s (eta: 0:03:34)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2049/2476 0.488s + 0.002s (eta: 0:03:29)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2059/2476 0.489s + 0.002s (eta: 0:03:24)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2069/2476 0.489s + 0.002s (eta: 0:03:19)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2079/2476 0.489s + 0.002s (eta: 0:03:14)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2089/2476 0.489s + 0.002s (eta: 0:03:09)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2099/2476 0.489s + 0.002s (eta: 0:03:05)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2109/2476 0.489s + 0.002s (eta: 0:03:00)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2119/2476 0.489s + 0.002s (eta: 0:02:55)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2129/2476 0.489s + 0.002s (eta: 0:02:50)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2139/2476 0.489s + 0.002s (eta: 0:02:45)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2149/2476 0.489s + 0.002s (eta: 0:02:40)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2159/2476 0.489s + 0.002s (eta: 0:02:35)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2169/2476 0.489s + 0.002s (eta: 0:02:30)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2179/2476 0.489s + 0.002s (eta: 0:02:25)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2189/2476 0.488s + 0.002s (eta: 0:02:20)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2199/2476 0.489s + 0.002s (eta: 0:02:15)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2209/2476 0.489s + 0.002s (eta: 0:02:10)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2219/2476 0.488s + 0.002s (eta: 0:02:06)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2229/2476 0.488s + 0.002s (eta: 0:02:01)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2239/2476 0.489s + 0.002s (eta: 0:01:56)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2249/2476 0.489s + 0.002s (eta: 0:01:51)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2259/2476 0.489s + 0.002s (eta: 0:01:46)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2269/2476 0.489s + 0.002s (eta: 0:01:41)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2279/2476 0.489s + 0.002s (eta: 0:01:36)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2289/2476 0.489s + 0.002s (eta: 0:01:31)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2299/2476 0.489s + 0.002s (eta: 0:01:26)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2309/2476 0.489s + 0.002s (eta: 0:01:21)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2319/2476 0.488s + 0.002s (eta: 0:01:16)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2329/2476 0.489s + 0.002s (eta: 0:01:12)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2339/2476 0.489s + 0.002s (eta: 0:01:07)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2349/2476 0.489s + 0.002s (eta: 0:01:02)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2359/2476 0.489s + 0.002s (eta: 0:00:57)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2369/2476 0.489s + 0.002s (eta: 0:00:52)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2379/2476 0.489s + 0.002s (eta: 0:00:47)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2389/2476 0.489s + 0.002s (eta: 0:00:42)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2399/2476 0.489s + 0.002s (eta: 0:00:37)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2409/2476 0.489s + 0.002s (eta: 0:00:32)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2419/2476 0.489s + 0.002s (eta: 0:00:27)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2429/2476 0.489s + 0.002s (eta: 0:00:23)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2439/2476 0.489s + 0.002s (eta: 0:00:18)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2449/2476 0.490s + 0.002s (eta: 0:00:13)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2459/2476 0.490s + 0.002s (eta: 0:00:08)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2469/2476 0.490s + 0.002s (eta: 0:00:03)
INFO test_engine.py: 314: Wrote detections to: /home/ubuntu/Detectron.pytorch/Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_1238_2476.pkl
/home/ubuntu/anaconda3/envs/pytorch41/lib/python3.7/site-packages/torch/nn/functional.py:1890: UserWarning: nn.functional.upsample is deprecated. Use nn.functional.interpolate instead.
  warnings.warn("nn.functional.upsample is deprecated. Use nn.functional.interpolate instead.")

INFO subprocess.py: 129: # ---------------------------------------------------------------------------- #
INFO subprocess.py: 131: stdout of subprocess 2 with range [2477, 3714]
INFO subprocess.py: 133: # ---------------------------------------------------------------------------- #
INFO test_net.py:  72: Called with args:
INFO test_net.py:  73: Namespace(cfg_file='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_config.yaml', dataset=None, load_ckpt='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step3499.pth', load_detectron=None, multi_gpu_testing=False, num_classes=None, output_dir='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test', range=[2476, 3714], set_cfgs=['TEST.DATASETS', '("voc_2007_test",)'], vis=False)
INFO test_net.py: 130: Testing with config:
INFO test_net.py: 131: {'BBOX_XFORM_CLIP': 4.135166556742356,
 'CROP_RESIZE_WITH_MAX_POOL': True,
 'CUDA': False,
 'DATA_DIR': '/home/ubuntu/Detectron.pytorch/data',
 'DATA_LOADER': {'NUM_THREADS': 4},
 'DEBUG': False,
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXPECTED_RESULTS': [],
 'EXPECTED_RESULTS_ATOL': 0.005,
 'EXPECTED_RESULTS_EMAIL': '',
 'EXPECTED_RESULTS_RTOL': 0.1,
 'FAST_RCNN': {'BOX_OUT_STREAMS': 1,
               'CONV_HEAD_DIM': 256,
               'MLP_HEAD_DIM': 1024,
               'NUM_STACKED_CONVS': 4,
               'ROI_BOX_HEAD': 'fast_rcnn_heads.roi_2mlp_head',
               'ROI_XFORM_METHOD': 'RoIAlign',
               'ROI_XFORM_RESOLUTION': 7,
               'ROI_XFORM_SAMPLING_RATIO': 2},
 'FPN': {'COARSEST_STRIDE': 32,
         'DIM': 256,
         'EXTRA_CONV_LEVELS': False,
         'FPN_ON': True,
         'MULTILEVEL_ROIS': True,
         'MULTILEVEL_RPN': True,
         'ROI_CANONICAL_LEVEL': 4,
         'ROI_CANONICAL_SCALE': 224,
         'ROI_MAX_LEVEL': 5,
         'ROI_MIN_LEVEL': 2,
         'RPN_ANCHOR_START_SIZE': 32,
         'RPN_ASPECT_RATIOS': (0.5, 1, 2),
         'RPN_COLLECT_SCALE': 1,
         'RPN_MAX_LEVEL': 6,
         'RPN_MIN_LEVEL': 2,
         'USE_GN': False,
         'ZERO_INIT_LATERAL': False},
 'GROUP_NORM': {'DIM_PER_GP': -1, 'EPSILON': 1e-05, 'NUM_GROUPS': 32},
 'KRCNN': {'CONV_HEAD_DIM': 256,
           'CONV_HEAD_KERNEL': 3,
           'CONV_INIT': 'GaussianFill',
           'DECONV_DIM': 256,
           'DECONV_KERNEL': 4,
           'DILATION': 1,
           'HEATMAP_SIZE': -1,
           'INFERENCE_MIN_SIZE': 0,
           'KEYPOINT_CONFIDENCE': 'bbox',
           'LOSS_WEIGHT': 1.0,
           'MIN_KEYPOINT_COUNT_FOR_VALID_MINIBATCH': 20,
           'NMS_OKS': False,
           'NORMALIZE_BY_VISIBLE_KEYPOINTS': True,
           'NUM_KEYPOINTS': -1,
           'NUM_STACKED_CONVS': 8,
           'ROI_KEYPOINTS_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'UP_SCALE': -1,
           'USE_DECONV': False,
           'USE_DECONV_OUTPUT': False},
 'MATLAB': 'matlab',
 'MODEL': {'BBOX_REG_WEIGHTS': (10.0, 10.0, 5.0, 5.0),
           'CLS_AGNOSTIC_BBOX_REG': False,
           'CONV_BODY': 'FPN.fpn_ResNet101_conv5_body',
           'FASTER_RCNN': True,
           'KEYPOINTS_ON': False,
           'LOAD_IMAGENET_PRETRAINED_WEIGHTS': True,
           'MASK_ON': False,
           'NUM_CLASSES': 21,
           'RPN_ONLY': False,
           'SHARE_RES5': False,
           'TYPE': 'generalized_rcnn',
           'UNSUPERVISED_POSE': False},
 'MRCNN': {'CLS_SPECIFIC_MASK': True,
           'CONV_INIT': 'GaussianFill',
           'DILATION': 2,
           'DIM_REDUCED': 256,
           'MEMORY_EFFICIENT_LOSS': True,
           'RESOLUTION': 14,
           'ROI_MASK_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'THRESH_BINARIZE': 0.5,
           'UPSAMPLE_RATIO': 1,
           'USE_FC_OUTPUT': False,
           'WEIGHT_LOSS_MASK': 1.0},
 'NUM_GPUS': 8,
 'OUTPUT_DIR': 'Outputs',
 'PIXEL_MEANS': array([[[102.9801, 115.9465, 122.7717]]]),
 'POOLING_MODE': 'crop',
 'POOLING_SIZE': 7,
 'PYTORCH_VERSION_LESS_THAN_040': False,
 'RESNETS': {'FREEZE_AT': 2,
             'IMAGENET_PRETRAINED_WEIGHTS': 'data/pretrained_model/resnet101_caffe.pth',
             'NUM_GROUPS': 1,
             'RES5_DILATION': 1,
             'SHORTCUT_FUNC': 'basic_bn_shortcut',
             'STEM_FUNC': 'basic_bn_stem',
             'STRIDE_1X1': True,
             'TRANS_FUNC': 'bottleneck_transformation',
             'USE_GN': False,
             'WIDTH_PER_GROUP': 64},
 'RETINANET': {'ANCHOR_SCALE': 4,
               'ASPECT_RATIOS': (0.5, 1.0, 2.0),
               'BBOX_REG_BETA': 0.11,
               'BBOX_REG_WEIGHT': 1.0,
               'CLASS_SPECIFIC_BBOX': False,
               'INFERENCE_TH': 0.05,
               'LOSS_ALPHA': 0.25,
               'LOSS_GAMMA': 2.0,
               'NEGATIVE_OVERLAP': 0.4,
               'NUM_CONVS': 4,
               'POSITIVE_OVERLAP': 0.5,
               'PRE_NMS_TOP_N': 1000,
               'PRIOR_PROB': 0.01,
               'RETINANET_ON': False,
               'SCALES_PER_OCTAVE': 3,
               'SHARE_CLS_BBOX_TOWER': False,
               'SOFTMAX': False},
 'RFCN': {'PS_GRID_SIZE': 3},
 'RNG_SEED': 3,
 'ROOT_DIR': '/home/ubuntu/Detectron.pytorch',
 'RPN': {'ASPECT_RATIOS': (0.5, 1, 2),
         'CLS_ACTIVATION': 'sigmoid',
         'OUT_DIM': 512,
         'OUT_DIM_AS_IN_DIM': True,
         'RPN_ON': True,
         'SIZES': (64, 128, 256, 512),
         'STRIDE': 16},
 'SOLVER': {'BASE_LR': 2e-05,
            'BIAS_DOUBLE_LR': True,
            'BIAS_WEIGHT_DECAY': False,
            'GAMMA': 0.1,
            'LOG_LR_CHANGE_THRESHOLD': 1.1,
            'LRS': [],
            'LR_POLICY': 'steps_with_decay',
            'MAX_ITER': 10000,
            'MOMENTUM': 0.9,
            'SCALE_MOMENTUM': True,
            'SCALE_MOMENTUM_THRESHOLD': 1.1,
            'STEPS': [0, 5000, 8000],
            'STEP_SIZE': 30000,
            'TYPE': 'SGD',
            'WARM_UP_FACTOR': 0.3333333333333333,
            'WARM_UP_ITERS': 500,
            'WARM_UP_METHOD': 'linear',
            'WEIGHT_DECAY': 0.0001,
            'WEIGHT_DECAY_GN': 0.0},
 'TEST': {'BBOX_AUG': {'AREA_TH_HI': 32400,
                       'AREA_TH_LO': 2500,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'COORD_HEUR': 'UNION',
                       'ENABLED': False,
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False,
                       'SCORE_HEUR': 'UNION'},
          'BBOX_REG': True,
          'BBOX_VOTE': {'ENABLED': False,
                        'SCORING_METHOD': 'ID',
                        'SCORING_METHOD_BETA': 1.0,
                        'VOTE_TH': 0.8},
          'COMPETITION_MODE': True,
          'DATASETS': ('voc_2007_test',),
          'DETECTIONS_PER_IM': 100,
          'FORCE_JSON_DATASET_EVAL': False,
          'KPS_AUG': {'AREA_TH': 32400,
                      'ASPECT_RATIOS': (),
                      'ASPECT_RATIO_H_FLIP': False,
                      'ENABLED': False,
                      'HEUR': 'HM_AVG',
                      'H_FLIP': False,
                      'MAX_SIZE': 4000,
                      'SCALES': (),
                      'SCALE_H_FLIP': False,
                      'SCALE_SIZE_DEP': False},
          'MASK_AUG': {'AREA_TH': 32400,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'ENABLED': False,
                       'HEUR': 'SOFT_AVG',
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False},
          'MAX_SIZE': 1000,
          'NMS': 0.5,
          'PRECOMPUTED_PROPOSALS': False,
          'PROPOSAL_FILES': (),
          'PROPOSAL_LIMIT': 2000,
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 1000,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALE': 600,
          'SCORE_THRESH': 0.05,
          'SOFT_NMS': {'ENABLED': False, 'METHOD': 'linear', 'SIGMA': 0.5},
          'WEAK_SUPERVISE': False},
 'TRAIN': {'ASPECT_CROPPING': False,
           'ASPECT_GROUPING': True,
           'ASPECT_HI': 2,
           'ASPECT_LO': 0.5,
           'BATCH_SIZE_PER_IM': 512,
           'BBOX_INSIDE_WEIGHTS': (1.0, 1.0, 1.0, 1.0),
           'BBOX_NORMALIZE_MEANS': (0.0, 0.0, 0.0, 0.0),
           'BBOX_NORMALIZE_STDS': (0.1, 0.1, 0.2, 0.2),
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'COPY_CLS_TO_DET': False,
           'CROWD_FILTER_THRESH': 0.7,
           'DATASETS': (),
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'FREEZE_BOX_HEAD': True,
           'FREEZE_CONV_BODY': False,
           'FREEZE_RPN': False,
           'GT_MIN_AREA': -1,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_FILES': (),
           'RPN_BATCH_SIZE_PER_IM': 256,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 2000,
           'RPN_STRADDLE_THRESH': 0,
           'SCALES': (600,),
           'SNAPSHOT_ITERS': 2000,
           'SPATIAL_REG': False,
           'USE_FLIPPED': True,
           'WEAK_SUPERVISE': True,
           'WEAK_SUPERVISE_WITH_PRETRAIN': True},
 'VIS': False,
 'VIS_TH': 0.9}
loading annotations into memory...
Done (t=0.15s)
creating index...
index created!
INFO test_engine.py: 324: training mode? : False
INFO test_engine.py: 331: loading checkpoint Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step3499.pth
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2477/3714 0.738s + 0.002s (eta: 0:15:14)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2487/3714 0.518s + 0.002s (eta: 0:10:37)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2497/3714 0.491s + 0.001s (eta: 0:09:59)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2507/3714 0.485s + 0.001s (eta: 0:09:47)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2517/3714 0.485s + 0.002s (eta: 0:09:43)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2527/3714 0.486s + 0.002s (eta: 0:09:39)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2537/3714 0.489s + 0.002s (eta: 0:09:38)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2547/3714 0.492s + 0.002s (eta: 0:09:36)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2557/3714 0.497s + 0.002s (eta: 0:09:37)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2567/3714 0.498s + 0.002s (eta: 0:09:33)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2577/3714 0.497s + 0.002s (eta: 0:09:28)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2587/3714 0.499s + 0.002s (eta: 0:09:24)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2597/3714 0.495s + 0.002s (eta: 0:09:15)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2607/3714 0.499s + 0.002s (eta: 0:09:14)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2617/3714 0.497s + 0.002s (eta: 0:09:07)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2627/3714 0.499s + 0.002s (eta: 0:09:04)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2637/3714 0.502s + 0.002s (eta: 0:09:02)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2647/3714 0.502s + 0.002s (eta: 0:08:57)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2657/3714 0.501s + 0.002s (eta: 0:08:51)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2667/3714 0.502s + 0.002s (eta: 0:08:47)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2677/3714 0.503s + 0.002s (eta: 0:08:43)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2687/3714 0.503s + 0.002s (eta: 0:08:38)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2697/3714 0.503s + 0.002s (eta: 0:08:33)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2707/3714 0.503s + 0.002s (eta: 0:08:28)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2717/3714 0.502s + 0.002s (eta: 0:08:22)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2727/3714 0.502s + 0.002s (eta: 0:08:17)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2737/3714 0.500s + 0.002s (eta: 0:08:10)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2747/3714 0.501s + 0.002s (eta: 0:08:05)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2757/3714 0.501s + 0.002s (eta: 0:08:01)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2767/3714 0.499s + 0.002s (eta: 0:07:54)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2777/3714 0.499s + 0.002s (eta: 0:07:49)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2787/3714 0.500s + 0.002s (eta: 0:07:45)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2797/3714 0.501s + 0.002s (eta: 0:07:40)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2807/3714 0.500s + 0.002s (eta: 0:07:35)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2817/3714 0.500s + 0.002s (eta: 0:07:30)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2827/3714 0.501s + 0.002s (eta: 0:07:25)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2837/3714 0.501s + 0.002s (eta: 0:07:21)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2847/3714 0.501s + 0.002s (eta: 0:07:16)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2857/3714 0.502s + 0.002s (eta: 0:07:12)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2867/3714 0.503s + 0.002s (eta: 0:07:07)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2877/3714 0.503s + 0.002s (eta: 0:07:02)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2887/3714 0.502s + 0.002s (eta: 0:06:57)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2897/3714 0.502s + 0.002s (eta: 0:06:51)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2907/3714 0.503s + 0.002s (eta: 0:06:47)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2917/3714 0.504s + 0.002s (eta: 0:06:43)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2927/3714 0.503s + 0.002s (eta: 0:06:37)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2937/3714 0.503s + 0.002s (eta: 0:06:32)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2947/3714 0.503s + 0.002s (eta: 0:06:27)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2957/3714 0.503s + 0.002s (eta: 0:06:21)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2967/3714 0.501s + 0.002s (eta: 0:06:15)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2977/3714 0.501s + 0.002s (eta: 0:06:11)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2987/3714 0.501s + 0.002s (eta: 0:06:05)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2997/3714 0.502s + 0.002s (eta: 0:06:01)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3007/3714 0.503s + 0.002s (eta: 0:05:56)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3017/3714 0.502s + 0.002s (eta: 0:05:51)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3027/3714 0.503s + 0.002s (eta: 0:05:46)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3037/3714 0.503s + 0.002s (eta: 0:05:41)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3047/3714 0.504s + 0.002s (eta: 0:05:37)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3057/3714 0.504s + 0.002s (eta: 0:05:32)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3067/3714 0.504s + 0.002s (eta: 0:05:27)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3077/3714 0.504s + 0.002s (eta: 0:05:22)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3087/3714 0.504s + 0.002s (eta: 0:05:17)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3097/3714 0.504s + 0.002s (eta: 0:05:12)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3107/3714 0.504s + 0.002s (eta: 0:05:07)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3117/3714 0.504s + 0.002s (eta: 0:05:02)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3127/3714 0.504s + 0.002s (eta: 0:04:56)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3137/3714 0.504s + 0.002s (eta: 0:04:51)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3147/3714 0.504s + 0.002s (eta: 0:04:46)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3157/3714 0.504s + 0.002s (eta: 0:04:41)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3167/3714 0.504s + 0.002s (eta: 0:04:36)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3177/3714 0.503s + 0.002s (eta: 0:04:31)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3187/3714 0.503s + 0.002s (eta: 0:04:26)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3197/3714 0.503s + 0.002s (eta: 0:04:20)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3207/3714 0.503s + 0.002s (eta: 0:04:16)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3217/3714 0.503s + 0.002s (eta: 0:04:10)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3227/3714 0.502s + 0.002s (eta: 0:04:05)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3237/3714 0.502s + 0.002s (eta: 0:04:00)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3247/3714 0.491s + 0.002s (eta: 0:03:50)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3257/3714 0.491s + 0.002s (eta: 0:03:45)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3267/3714 0.491s + 0.002s (eta: 0:03:40)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3277/3714 0.491s + 0.002s (eta: 0:03:35)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3287/3714 0.492s + 0.002s (eta: 0:03:30)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3297/3714 0.492s + 0.002s (eta: 0:03:25)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3307/3714 0.492s + 0.002s (eta: 0:03:20)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3317/3714 0.491s + 0.002s (eta: 0:03:15)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3327/3714 0.491s + 0.002s (eta: 0:03:10)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3337/3714 0.491s + 0.002s (eta: 0:03:05)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3347/3714 0.491s + 0.002s (eta: 0:03:01)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3357/3714 0.491s + 0.002s (eta: 0:02:56)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3367/3714 0.491s + 0.002s (eta: 0:02:51)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3377/3714 0.491s + 0.002s (eta: 0:02:46)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3387/3714 0.491s + 0.002s (eta: 0:02:41)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3397/3714 0.491s + 0.002s (eta: 0:02:36)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3407/3714 0.491s + 0.002s (eta: 0:02:31)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3417/3714 0.491s + 0.002s (eta: 0:02:26)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3427/3714 0.491s + 0.002s (eta: 0:02:21)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3437/3714 0.491s + 0.002s (eta: 0:02:16)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3447/3714 0.491s + 0.002s (eta: 0:02:11)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3457/3714 0.491s + 0.002s (eta: 0:02:06)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3467/3714 0.492s + 0.002s (eta: 0:02:01)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3477/3714 0.492s + 0.002s (eta: 0:01:57)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3487/3714 0.492s + 0.002s (eta: 0:01:52)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3497/3714 0.492s + 0.002s (eta: 0:01:47)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3507/3714 0.492s + 0.002s (eta: 0:01:42)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3517/3714 0.492s + 0.002s (eta: 0:01:37)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3527/3714 0.492s + 0.002s (eta: 0:01:32)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3537/3714 0.492s + 0.002s (eta: 0:01:27)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3547/3714 0.493s + 0.002s (eta: 0:01:22)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3557/3714 0.492s + 0.002s (eta: 0:01:17)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3567/3714 0.492s + 0.002s (eta: 0:01:12)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3577/3714 0.492s + 0.002s (eta: 0:01:07)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3587/3714 0.492s + 0.002s (eta: 0:01:02)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3597/3714 0.492s + 0.002s (eta: 0:00:57)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3607/3714 0.492s + 0.002s (eta: 0:00:52)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3617/3714 0.492s + 0.002s (eta: 0:00:47)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3627/3714 0.492s + 0.002s (eta: 0:00:43)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3637/3714 0.492s + 0.002s (eta: 0:00:38)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3647/3714 0.493s + 0.002s (eta: 0:00:33)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3657/3714 0.492s + 0.002s (eta: 0:00:28)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3667/3714 0.492s + 0.002s (eta: 0:00:23)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3677/3714 0.492s + 0.002s (eta: 0:00:18)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3687/3714 0.493s + 0.002s (eta: 0:00:13)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3697/3714 0.493s + 0.002s (eta: 0:00:08)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3707/3714 0.493s + 0.002s (eta: 0:00:03)
INFO test_engine.py: 314: Wrote detections to: /home/ubuntu/Detectron.pytorch/Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_2476_3714.pkl
/home/ubuntu/anaconda3/envs/pytorch41/lib/python3.7/site-packages/torch/nn/functional.py:1890: UserWarning: nn.functional.upsample is deprecated. Use nn.functional.interpolate instead.
  warnings.warn("nn.functional.upsample is deprecated. Use nn.functional.interpolate instead.")

INFO subprocess.py: 129: # ---------------------------------------------------------------------------- #
INFO subprocess.py: 131: stdout of subprocess 3 with range [3715, 4952]
INFO subprocess.py: 133: # ---------------------------------------------------------------------------- #
INFO test_net.py:  72: Called with args:
INFO test_net.py:  73: Namespace(cfg_file='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_config.yaml', dataset=None, load_ckpt='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step3499.pth', load_detectron=None, multi_gpu_testing=False, num_classes=None, output_dir='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test', range=[3714, 4952], set_cfgs=['TEST.DATASETS', '("voc_2007_test",)'], vis=False)
INFO test_net.py: 130: Testing with config:
INFO test_net.py: 131: {'BBOX_XFORM_CLIP': 4.135166556742356,
 'CROP_RESIZE_WITH_MAX_POOL': True,
 'CUDA': False,
 'DATA_DIR': '/home/ubuntu/Detectron.pytorch/data',
 'DATA_LOADER': {'NUM_THREADS': 4},
 'DEBUG': False,
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXPECTED_RESULTS': [],
 'EXPECTED_RESULTS_ATOL': 0.005,
 'EXPECTED_RESULTS_EMAIL': '',
 'EXPECTED_RESULTS_RTOL': 0.1,
 'FAST_RCNN': {'BOX_OUT_STREAMS': 1,
               'CONV_HEAD_DIM': 256,
               'MLP_HEAD_DIM': 1024,
               'NUM_STACKED_CONVS': 4,
               'ROI_BOX_HEAD': 'fast_rcnn_heads.roi_2mlp_head',
               'ROI_XFORM_METHOD': 'RoIAlign',
               'ROI_XFORM_RESOLUTION': 7,
               'ROI_XFORM_SAMPLING_RATIO': 2},
 'FPN': {'COARSEST_STRIDE': 32,
         'DIM': 256,
         'EXTRA_CONV_LEVELS': False,
         'FPN_ON': True,
         'MULTILEVEL_ROIS': True,
         'MULTILEVEL_RPN': True,
         'ROI_CANONICAL_LEVEL': 4,
         'ROI_CANONICAL_SCALE': 224,
         'ROI_MAX_LEVEL': 5,
         'ROI_MIN_LEVEL': 2,
         'RPN_ANCHOR_START_SIZE': 32,
         'RPN_ASPECT_RATIOS': (0.5, 1, 2),
         'RPN_COLLECT_SCALE': 1,
         'RPN_MAX_LEVEL': 6,
         'RPN_MIN_LEVEL': 2,
         'USE_GN': False,
         'ZERO_INIT_LATERAL': False},
 'GROUP_NORM': {'DIM_PER_GP': -1, 'EPSILON': 1e-05, 'NUM_GROUPS': 32},
 'KRCNN': {'CONV_HEAD_DIM': 256,
           'CONV_HEAD_KERNEL': 3,
           'CONV_INIT': 'GaussianFill',
           'DECONV_DIM': 256,
           'DECONV_KERNEL': 4,
           'DILATION': 1,
           'HEATMAP_SIZE': -1,
           'INFERENCE_MIN_SIZE': 0,
           'KEYPOINT_CONFIDENCE': 'bbox',
           'LOSS_WEIGHT': 1.0,
           'MIN_KEYPOINT_COUNT_FOR_VALID_MINIBATCH': 20,
           'NMS_OKS': False,
           'NORMALIZE_BY_VISIBLE_KEYPOINTS': True,
           'NUM_KEYPOINTS': -1,
           'NUM_STACKED_CONVS': 8,
           'ROI_KEYPOINTS_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'UP_SCALE': -1,
           'USE_DECONV': False,
           'USE_DECONV_OUTPUT': False},
 'MATLAB': 'matlab',
 'MODEL': {'BBOX_REG_WEIGHTS': (10.0, 10.0, 5.0, 5.0),
           'CLS_AGNOSTIC_BBOX_REG': False,
           'CONV_BODY': 'FPN.fpn_ResNet101_conv5_body',
           'FASTER_RCNN': True,
           'KEYPOINTS_ON': False,
           'LOAD_IMAGENET_PRETRAINED_WEIGHTS': True,
           'MASK_ON': False,
           'NUM_CLASSES': 21,
           'RPN_ONLY': False,
           'SHARE_RES5': False,
           'TYPE': 'generalized_rcnn',
           'UNSUPERVISED_POSE': False},
 'MRCNN': {'CLS_SPECIFIC_MASK': True,
           'CONV_INIT': 'GaussianFill',
           'DILATION': 2,
           'DIM_REDUCED': 256,
           'MEMORY_EFFICIENT_LOSS': True,
           'RESOLUTION': 14,
           'ROI_MASK_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'THRESH_BINARIZE': 0.5,
           'UPSAMPLE_RATIO': 1,
           'USE_FC_OUTPUT': False,
           'WEIGHT_LOSS_MASK': 1.0},
 'NUM_GPUS': 8,
 'OUTPUT_DIR': 'Outputs',
 'PIXEL_MEANS': array([[[102.9801, 115.9465, 122.7717]]]),
 'POOLING_MODE': 'crop',
 'POOLING_SIZE': 7,
 'PYTORCH_VERSION_LESS_THAN_040': False,
 'RESNETS': {'FREEZE_AT': 2,
             'IMAGENET_PRETRAINED_WEIGHTS': 'data/pretrained_model/resnet101_caffe.pth',
             'NUM_GROUPS': 1,
             'RES5_DILATION': 1,
             'SHORTCUT_FUNC': 'basic_bn_shortcut',
             'STEM_FUNC': 'basic_bn_stem',
             'STRIDE_1X1': True,
             'TRANS_FUNC': 'bottleneck_transformation',
             'USE_GN': False,
             'WIDTH_PER_GROUP': 64},
 'RETINANET': {'ANCHOR_SCALE': 4,
               'ASPECT_RATIOS': (0.5, 1.0, 2.0),
               'BBOX_REG_BETA': 0.11,
               'BBOX_REG_WEIGHT': 1.0,
               'CLASS_SPECIFIC_BBOX': False,
               'INFERENCE_TH': 0.05,
               'LOSS_ALPHA': 0.25,
               'LOSS_GAMMA': 2.0,
               'NEGATIVE_OVERLAP': 0.4,
               'NUM_CONVS': 4,
               'POSITIVE_OVERLAP': 0.5,
               'PRE_NMS_TOP_N': 1000,
               'PRIOR_PROB': 0.01,
               'RETINANET_ON': False,
               'SCALES_PER_OCTAVE': 3,
               'SHARE_CLS_BBOX_TOWER': False,
               'SOFTMAX': False},
 'RFCN': {'PS_GRID_SIZE': 3},
 'RNG_SEED': 3,
 'ROOT_DIR': '/home/ubuntu/Detectron.pytorch',
 'RPN': {'ASPECT_RATIOS': (0.5, 1, 2),
         'CLS_ACTIVATION': 'sigmoid',
         'OUT_DIM': 512,
         'OUT_DIM_AS_IN_DIM': True,
         'RPN_ON': True,
         'SIZES': (64, 128, 256, 512),
         'STRIDE': 16},
 'SOLVER': {'BASE_LR': 2e-05,
            'BIAS_DOUBLE_LR': True,
            'BIAS_WEIGHT_DECAY': False,
            'GAMMA': 0.1,
            'LOG_LR_CHANGE_THRESHOLD': 1.1,
            'LRS': [],
            'LR_POLICY': 'steps_with_decay',
            'MAX_ITER': 10000,
            'MOMENTUM': 0.9,
            'SCALE_MOMENTUM': True,
            'SCALE_MOMENTUM_THRESHOLD': 1.1,
            'STEPS': [0, 5000, 8000],
            'STEP_SIZE': 30000,
            'TYPE': 'SGD',
            'WARM_UP_FACTOR': 0.3333333333333333,
            'WARM_UP_ITERS': 500,
            'WARM_UP_METHOD': 'linear',
            'WEIGHT_DECAY': 0.0001,
            'WEIGHT_DECAY_GN': 0.0},
 'TEST': {'BBOX_AUG': {'AREA_TH_HI': 32400,
                       'AREA_TH_LO': 2500,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'COORD_HEUR': 'UNION',
                       'ENABLED': False,
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False,
                       'SCORE_HEUR': 'UNION'},
          'BBOX_REG': True,
          'BBOX_VOTE': {'ENABLED': False,
                        'SCORING_METHOD': 'ID',
                        'SCORING_METHOD_BETA': 1.0,
                        'VOTE_TH': 0.8},
          'COMPETITION_MODE': True,
          'DATASETS': ('voc_2007_test',),
          'DETECTIONS_PER_IM': 100,
          'FORCE_JSON_DATASET_EVAL': False,
          'KPS_AUG': {'AREA_TH': 32400,
                      'ASPECT_RATIOS': (),
                      'ASPECT_RATIO_H_FLIP': False,
                      'ENABLED': False,
                      'HEUR': 'HM_AVG',
                      'H_FLIP': False,
                      'MAX_SIZE': 4000,
                      'SCALES': (),
                      'SCALE_H_FLIP': False,
                      'SCALE_SIZE_DEP': False},
          'MASK_AUG': {'AREA_TH': 32400,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'ENABLED': False,
                       'HEUR': 'SOFT_AVG',
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False},
          'MAX_SIZE': 1000,
          'NMS': 0.5,
          'PRECOMPUTED_PROPOSALS': False,
          'PROPOSAL_FILES': (),
          'PROPOSAL_LIMIT': 2000,
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 1000,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALE': 600,
          'SCORE_THRESH': 0.05,
          'SOFT_NMS': {'ENABLED': False, 'METHOD': 'linear', 'SIGMA': 0.5},
          'WEAK_SUPERVISE': False},
 'TRAIN': {'ASPECT_CROPPING': False,
           'ASPECT_GROUPING': True,
           'ASPECT_HI': 2,
           'ASPECT_LO': 0.5,
           'BATCH_SIZE_PER_IM': 512,
           'BBOX_INSIDE_WEIGHTS': (1.0, 1.0, 1.0, 1.0),
           'BBOX_NORMALIZE_MEANS': (0.0, 0.0, 0.0, 0.0),
           'BBOX_NORMALIZE_STDS': (0.1, 0.1, 0.2, 0.2),
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'COPY_CLS_TO_DET': False,
           'CROWD_FILTER_THRESH': 0.7,
           'DATASETS': (),
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'FREEZE_BOX_HEAD': True,
           'FREEZE_CONV_BODY': False,
           'FREEZE_RPN': False,
           'GT_MIN_AREA': -1,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_FILES': (),
           'RPN_BATCH_SIZE_PER_IM': 256,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 2000,
           'RPN_STRADDLE_THRESH': 0,
           'SCALES': (600,),
           'SNAPSHOT_ITERS': 2000,
           'SPATIAL_REG': False,
           'USE_FLIPPED': True,
           'WEAK_SUPERVISE': True,
           'WEAK_SUPERVISE_WITH_PRETRAIN': True},
 'VIS': False,
 'VIS_TH': 0.9}
loading annotations into memory...
Done (t=0.09s)
creating index...
index created!
INFO test_engine.py: 324: training mode? : False
INFO test_engine.py: 331: loading checkpoint Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step3499.pth
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3715/4952 0.548s + 0.001s (eta: 0:11:19)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3725/4952 0.487s + 0.001s (eta: 0:09:59)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3735/4952 0.495s + 0.001s (eta: 0:10:04)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3745/4952 0.485s + 0.001s (eta: 0:09:46)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3755/4952 0.485s + 0.001s (eta: 0:09:41)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3765/4952 0.497s + 0.001s (eta: 0:09:51)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3775/4952 0.507s + 0.001s (eta: 0:09:58)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3785/4952 0.507s + 0.001s (eta: 0:09:53)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3795/4952 0.509s + 0.001s (eta: 0:09:50)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3805/4952 0.503s + 0.002s (eta: 0:09:38)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3815/4952 0.504s + 0.002s (eta: 0:09:35)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3825/4952 0.508s + 0.002s (eta: 0:09:34)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3835/4952 0.508s + 0.002s (eta: 0:09:29)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3845/4952 0.508s + 0.002s (eta: 0:09:23)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3855/4952 0.509s + 0.002s (eta: 0:09:20)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3865/4952 0.509s + 0.002s (eta: 0:09:15)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3875/4952 0.510s + 0.002s (eta: 0:09:10)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3885/4952 0.510s + 0.002s (eta: 0:09:06)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3895/4952 0.509s + 0.002s (eta: 0:08:59)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3905/4952 0.509s + 0.002s (eta: 0:08:55)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3915/4952 0.510s + 0.002s (eta: 0:08:50)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3925/4952 0.509s + 0.002s (eta: 0:08:44)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3935/4952 0.506s + 0.002s (eta: 0:08:36)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3945/4952 0.504s + 0.002s (eta: 0:08:29)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3955/4952 0.505s + 0.002s (eta: 0:08:24)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3965/4952 0.504s + 0.002s (eta: 0:08:19)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3975/4952 0.505s + 0.002s (eta: 0:08:15)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3985/4952 0.505s + 0.002s (eta: 0:08:10)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3995/4952 0.504s + 0.002s (eta: 0:08:03)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4005/4952 0.503s + 0.002s (eta: 0:07:58)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4015/4952 0.504s + 0.002s (eta: 0:07:53)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4025/4952 0.504s + 0.002s (eta: 0:07:48)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4035/4952 0.503s + 0.002s (eta: 0:07:43)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4045/4952 0.503s + 0.002s (eta: 0:07:37)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4055/4952 0.503s + 0.002s (eta: 0:07:32)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4065/4952 0.501s + 0.002s (eta: 0:07:26)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4075/4952 0.501s + 0.002s (eta: 0:07:20)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4085/4952 0.500s + 0.002s (eta: 0:07:15)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4095/4952 0.499s + 0.002s (eta: 0:07:09)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4105/4952 0.500s + 0.002s (eta: 0:07:04)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4115/4952 0.500s + 0.002s (eta: 0:06:59)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4125/4952 0.499s + 0.002s (eta: 0:06:54)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4135/4952 0.500s + 0.002s (eta: 0:06:49)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4145/4952 0.499s + 0.002s (eta: 0:06:44)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4155/4952 0.499s + 0.002s (eta: 0:06:39)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4165/4952 0.498s + 0.002s (eta: 0:06:33)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4175/4952 0.498s + 0.002s (eta: 0:06:28)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4185/4952 0.499s + 0.002s (eta: 0:06:24)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4195/4952 0.499s + 0.002s (eta: 0:06:19)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4205/4952 0.499s + 0.002s (eta: 0:06:13)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4215/4952 0.498s + 0.002s (eta: 0:06:08)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4225/4952 0.498s + 0.002s (eta: 0:06:03)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4235/4952 0.498s + 0.002s (eta: 0:05:58)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4245/4952 0.497s + 0.002s (eta: 0:05:52)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4255/4952 0.498s + 0.002s (eta: 0:05:48)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4265/4952 0.498s + 0.002s (eta: 0:05:43)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4275/4952 0.499s + 0.002s (eta: 0:05:38)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4285/4952 0.499s + 0.002s (eta: 0:05:34)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4295/4952 0.499s + 0.002s (eta: 0:05:29)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4305/4952 0.500s + 0.002s (eta: 0:05:24)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4315/4952 0.499s + 0.002s (eta: 0:05:19)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4325/4952 0.499s + 0.002s (eta: 0:05:13)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4335/4952 0.499s + 0.002s (eta: 0:05:09)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4345/4952 0.499s + 0.002s (eta: 0:05:04)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4355/4952 0.500s + 0.002s (eta: 0:04:59)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4365/4952 0.499s + 0.002s (eta: 0:04:53)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4375/4952 0.499s + 0.002s (eta: 0:04:48)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4385/4952 0.498s + 0.002s (eta: 0:04:43)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4395/4952 0.497s + 0.002s (eta: 0:04:38)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4405/4952 0.498s + 0.002s (eta: 0:04:33)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4415/4952 0.498s + 0.002s (eta: 0:04:28)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4425/4952 0.497s + 0.002s (eta: 0:04:23)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4435/4952 0.497s + 0.002s (eta: 0:04:18)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4445/4952 0.498s + 0.002s (eta: 0:04:13)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4455/4952 0.497s + 0.002s (eta: 0:04:08)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4465/4952 0.498s + 0.002s (eta: 0:04:03)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4475/4952 0.497s + 0.002s (eta: 0:03:58)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4485/4952 0.497s + 0.002s (eta: 0:03:52)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4495/4952 0.491s + 0.002s (eta: 0:03:45)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4505/4952 0.491s + 0.002s (eta: 0:03:40)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4515/4952 0.491s + 0.002s (eta: 0:03:35)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4525/4952 0.491s + 0.002s (eta: 0:03:30)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4535/4952 0.491s + 0.002s (eta: 0:03:25)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4545/4952 0.490s + 0.002s (eta: 0:03:20)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4555/4952 0.491s + 0.002s (eta: 0:03:15)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4565/4952 0.491s + 0.002s (eta: 0:03:10)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4575/4952 0.492s + 0.002s (eta: 0:03:05)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4585/4952 0.492s + 0.002s (eta: 0:03:01)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4595/4952 0.491s + 0.002s (eta: 0:02:56)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4605/4952 0.492s + 0.002s (eta: 0:02:51)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4615/4952 0.492s + 0.002s (eta: 0:02:46)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4625/4952 0.492s + 0.002s (eta: 0:02:41)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4635/4952 0.492s + 0.002s (eta: 0:02:36)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4645/4952 0.492s + 0.002s (eta: 0:02:31)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4655/4952 0.492s + 0.002s (eta: 0:02:26)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4665/4952 0.491s + 0.002s (eta: 0:02:21)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4675/4952 0.492s + 0.002s (eta: 0:02:16)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4685/4952 0.492s + 0.002s (eta: 0:02:11)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4695/4952 0.492s + 0.002s (eta: 0:02:06)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4705/4952 0.492s + 0.002s (eta: 0:02:01)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4715/4952 0.491s + 0.002s (eta: 0:01:56)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4725/4952 0.491s + 0.002s (eta: 0:01:51)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4735/4952 0.491s + 0.002s (eta: 0:01:46)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4745/4952 0.491s + 0.002s (eta: 0:01:42)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4755/4952 0.491s + 0.002s (eta: 0:01:37)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4765/4952 0.491s + 0.002s (eta: 0:01:32)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4775/4952 0.491s + 0.002s (eta: 0:01:27)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4785/4952 0.491s + 0.002s (eta: 0:01:22)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4795/4952 0.491s + 0.002s (eta: 0:01:17)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4805/4952 0.491s + 0.002s (eta: 0:01:12)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4815/4952 0.491s + 0.002s (eta: 0:01:07)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4825/4952 0.491s + 0.002s (eta: 0:01:02)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4835/4952 0.491s + 0.002s (eta: 0:00:57)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4845/4952 0.491s + 0.002s (eta: 0:00:52)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4855/4952 0.491s + 0.002s (eta: 0:00:47)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4865/4952 0.491s + 0.002s (eta: 0:00:42)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4875/4952 0.491s + 0.002s (eta: 0:00:37)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4885/4952 0.491s + 0.002s (eta: 0:00:33)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4895/4952 0.492s + 0.002s (eta: 0:00:28)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4905/4952 0.492s + 0.002s (eta: 0:00:23)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4915/4952 0.491s + 0.002s (eta: 0:00:18)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4925/4952 0.491s + 0.002s (eta: 0:00:13)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4935/4952 0.492s + 0.002s (eta: 0:00:08)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4945/4952 0.491s + 0.002s (eta: 0:00:03)
INFO test_engine.py: 314: Wrote detections to: /home/ubuntu/Detectron.pytorch/Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_3714_4952.pkl
/home/ubuntu/anaconda3/envs/pytorch41/lib/python3.7/site-packages/torch/nn/functional.py:1890: UserWarning: nn.functional.upsample is deprecated. Use nn.functional.interpolate instead.
  warnings.warn("nn.functional.upsample is deprecated. Use nn.functional.interpolate instead.")

INFO test_engine.py: 211: Wrote detections to: /home/ubuntu/Detectron.pytorch/Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detections.pkl
INFO test_engine.py: 161: Total inference time: 635.631s
INFO task_evaluation.py:  77: Evaluating detections
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: aeroplane
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: bicycle
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: bird
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: boat
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: bottle
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: bus
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: car
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: cat
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: chair
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: cow
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: diningtable
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: dog
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: horse
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: motorbike
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: person
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: pottedplant
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: sheep
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: sofa
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: train
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: tvmonitor
INFO voc_dataset_evaluator.py: 115: VOC07 metric? Yes
INFO voc_eval.py: 171: [1075 1112  643 ...  548   14  192]
INFO voc_dataset_evaluator.py: 127: AP for aeroplane = 0.7740
INFO voc_eval.py: 171: [ 269  174   34 ... 1024  467  169]
INFO voc_dataset_evaluator.py: 127: AP for bicycle = 0.7898
INFO voc_eval.py: 171: [1137 1472 1765 ...  988 1593  315]
INFO voc_dataset_evaluator.py: 127: AP for bird = 0.7905
INFO voc_eval.py: 171: [1454 2072   72 ...  395 1504 1869]
INFO voc_dataset_evaluator.py: 127: AP for boat = 0.6218
INFO voc_eval.py: 171: [ 955 1804  612 ...   94 2335 1489]
INFO voc_dataset_evaluator.py: 127: AP for bottle = 0.6773
INFO voc_eval.py: 171: [326 844 275 135 816 868 689 493 212 522 476 699 207  28   4 595 220  86
  18 412 629 264 763 734 105 451 142  74  35 544 842 654 292 650 790 779
 856 640 463 783 586 690 633 196 847 657 496 688 416 439 714 381 613 128
  79  56  83  33 745 553 536 566 806 671 781 187  52 561  84 529 251 122
 406 506 234 728  23 721 183 762 314 885 593 289 432 729  70 481 539 164
 360 355 730 386 646  36 379 612 175 452 821 399 345 478 150 278 395 871
 177 853 782 527 791 662 577 266 132 300 116 651 715 825 832 510  20 423
 627 186  60 859 224 115 341 822 785 446 211 311 846 713 562 250 306 770
 537 514 192 515 661 475 394 484 803 222 317 528 489 565 378   1 460 179
 807 380 429 548 680 244 296 282 700 555 618 511 368 200  14 335 751 316
 470 268 773 356 497 599 760 647 351 789 828 532 239 585 556 691 659  19
 569 596 861  67 628 600 202   0 294 283 513 402 258 875 405 554 712  97
 794 608 473 176 254 743  53  76 502 340 143 408 417 490 571 347 677 637
 787 245  81 804 739 491 286 552 480 430 687 653 136 424 184 377 280 303
 396 407 563 839 441 165 392 431 818 863 106 270 359  30 705 748 158 636
 771 820 236 147 198 761 449 267 315 836 140 169 130 112 401 348 872  87
 870 682 860 259 685  57 558 724 459 131 672  11 349 240 166 462 534 225
 500 436 271  64 414 609 137 369 427  88 230 867 703  78  44 191 735  37
 126 843 138 710 221 133 866 670 358 448   6 174 173 357 674 467 226 655
 731  34 366 597 159 103 723 581 750 129 621 838 235 343 642 453 231 858
 170 746 388   9 361 148  65 827 102  10 641 188 698 645 658 598 155  29
 572 716   5 265  58 855 403 321 706 384 679 233 114 124 681 580 663  91
 570 810 538 683 884 178 749 620 525 354  40 487 485 874 160  26 118 218
 878 299 753 336 304 614 241 707 247 631 468 227 153 297 209  80  77 346
 664  27 711 434 161 829 666 503  82 535  55 411 206 686 520 370 419 313
 330 668 180 104 111 616 110 841 594 290 260   8 223 243 523 801 445 339
 709 248 837 786 443 162 101 113 433  31 293 812 404 815 194 742 305 246
  48 181 479 421 625 656  39  12 219 440 758 669 301 383 697 331 798 310
  45 338 232 205 718 438 720 272 444 817 643 835  71 701 788 333 492 382
 410  62 504 418 458  24 584 318 589 291 325 167 398 100 277 146 324 813
 602 542 499 626 362 756 765 576 635 648 123 108 185 574 573 883 498 197
 622 334 725 308 328 592 295 213 353 465  69 808  21 704 413  49 517  16
 456 673 880 371 678 811 639 141 541 447 849  42 736 269 285  22 488 507
 435 518 389 759 772  73 531 229 168  96 151 107 195 726 732 619 454 284
 152 615 474 109 145 298 857 215 337 365 276 766 550  17 660 799 802 363
  13 850 494 329 862 737 415  90 530 385 274 320 848 568  95 869 588 519
  99 508 422 390 826 409 852 579 755 397 263 752 154 255  98 733  59 228
  93 797 242 526 437 210 702 708 545 624 172 193 237  41 887 281 769  94
 156 819 757 638 738  75 287  61 127 877 252 796  89 814 551 604  85 764
 302 564  43 288 471 350 216 477 567 374 590 692 464 606 741 323  68 426
 249 201 428 393 182 696 873 695 694 501 805 483 831 461 665 273 605  50
 367 747  66 809 879   3 775 864 546 575 644 722 540 208 543 578 163  47
  54 342 865 754 214 204 450 795 684 632 607   7 886  92 391 740 512  72
  38 516 833  25 800 238 630 327 256 777 776 157 591 199 559 373 262 547
 117 774 583 469 332 149 717 533 676 472 587 344 364  46 603 203 372 793
 486 824 509 611 261 767 253 557 601 482 834 442  15 882 727 322 466 675
 387 495 693 189  32 634 144  63 352 881 768 524   2 652 134 560 876 610
 257 617 217 667 649 279 190 780 623 830 778 120 125 549 420 171  51 784
 425 521 582 121 375 376 139 845 823 744 319 854 312 119 455 307 505 840
 457 309 792 719 851 400]
INFO voc_dataset_evaluator.py: 127: AP for bus = 0.7908
INFO voc_eval.py: 171: [3097 1938 1188 ... 1984  635 5081]
INFO voc_dataset_evaluator.py: 127: AP for car = 0.8594
INFO voc_eval.py: 171: [857 972 936 ... 665 817 964]
INFO voc_dataset_evaluator.py: 127: AP for cat = 0.8556
INFO voc_eval.py: 171: [ 138 2246 3215 ... 2053 5048 3150]
INFO voc_dataset_evaluator.py: 127: AP for chair = 0.6183
INFO voc_eval.py: 171: [ 754 1313 1595 ...  498 1148  386]
INFO voc_dataset_evaluator.py: 127: AP for cow = 0.7737
INFO voc_eval.py: 171: [1043  624 2833 ... 1573 1075  907]
INFO voc_dataset_evaluator.py: 127: AP for diningtable = 0.6030
INFO voc_eval.py: 171: [ 113 1102  436 ...  982 1125 1628]
INFO voc_dataset_evaluator.py: 127: AP for dog = 0.8182
INFO voc_eval.py: 171: [149  27 505 ... 597 489 580]
INFO voc_dataset_evaluator.py: 127: AP for horse = 0.8300
INFO voc_eval.py: 171: [900 265 183 237 114 301 824 140  45 142 872 445 458 264 150 708 546 158
 429 801 155 610  87 176 779 374 119 450 462 594  46 254 359 843 105 686
 835 572 371 283 502 790 701 419 606 571 243 871 112 201 808 101 248 826
 122  62 131  81 733 857 777   5 774 312 752 184 401 862 516 771 327 467
 573 135 866 534  75 175 907 822 508 115 820 436 542 225 930 353 172 382
 755 128 330 541 267 841 869 282 518 303 729 505 308  77  40 485 693 178
 803 524 241 561  72 849 667 506 358 372 222  26 177 438 437 767 654 510
 318 662 486 492 577 858 120 827 712  10 381 294 599 922 645 213 638 784
 444 523 880 498 535 726  57 891   8 898 567 255 739 870 902  36 415 375
 164 692 207 748 811 465 527 530 536 173 472 613  56  59 896 102 881 718
 377 193 644 836 653 629   3 288 888 760 611 525 321 526 380 188 609 412
 187 625 740 622 333 853 905 442 245 569 246 389 194 147   6 586 554 744
 354 560 831 612 579 367 537 206  96 875  28 882 272 659 899 499 383 647
  74 816 515 336 631 352 317 511 211 574 716 217 332 373 218 304 403 724
 215 833 402 284  92  70 628 421 745 781 924  78 646  53 496 772 299 917
 113 619 757 169 521 322 509 400 770 335 703 892 852 407 296 501  55 680
 167 443 796 420 580 378  98 920 399 464 552 337 370 617  39  99 845  64
 639  69 221 362 709 840 633 251 785 186 717 426 503 855 182 271 878 913
 363 651 295 782 884 879  71  67 151 297  91 815 570   2 695 736 124 200
 670 520 417 746 143 110 793 713  12 191 797 489 174 926 431 807 887 764
 914 285 850 517 688 804 144 558 204 379 493 320 909 908 865 642  76 765
 786 342 648 706 715 923 259 165 868 903 364 425 310 614  18 163 103 590
 856 229 451 783 315 576 368 538   1 233 205 257 422 682  60 761 446 861
 666 203 812 454 483 268 751 230 324 439 848 789 773 864  20 696 635 669
 307 513 704 719 126 893 289 463 615 553 132 488 475 616 819 121 725 507
 742 234 604 239 149 559 678 694  27 309 447 474 263 867 632 705 100 839
 722 199 522  82 387 384 223 497 904 252 148 700 550 116 484 918 290 275
 404 305 386 192   9 584 863  97 162 780 391 529 618 799 834 714 396  80
 787  43 658 756 828 596  61 457 915 592 329 152 328 691 758 430 514 601
 323 776 107 414 341 504  32 331 581 925 817 212 806 741 547 423 897  79
 185  49  37 597 814  17 711 587 728 623 578 749 118 471 555 687 531 575
 602 130 643 269 456 766 750 621 390 495   7 227 737 663 346 108 356 846
 710  13 532 600 291 762 280 153  89 210 369 582 721 608 139 685 738 395
  25 677  14 487 480 565 894 763 672 679  94  35 482 791 673 699 519 347
 634 349  50 630 556 311 180 805 448 665 313 410 449 500 216 156 319 911
 931  41 240 441  38 649 325 809 533 637 461 351 261 683 674 393 196  33
 921  47 859 928 754 435 219 671  19 279 551 397 585 281 481 226 170 361
 473 266 802 588 734 214  85 293 916 357 769 874 286  16 707 424 314 159
 433 844 562 886 598  22 350 292 657  63 727 145  23 919 365 166 876 232
 106 627 747 278   0 684 901  73 366 681 208 640 566 563 195 788 528 491
 800 453 238 466 287 141 416 160 732  44 244 564  95 607 276 650 676  11
 117  58 316 129   4 821 326 636 459 468 847 929 157 123 829 235 262 413
 209 702 340 690 591 428 479 818 385 427 810 138 125  30 660 720  34 334
 409 655 656 860 260 161 202 548 274  21 137 478 490 405 256 355  83 270
  48  52 543 231 906 698 406 181 197 388 823 557 854 593 469 668 302 398
  42 189 620 539 300 228 168 360 890 249 306 652  15 348 220 111 641 247
 134 236  66 171 545 851 146 912 837 689 830 697 825 242 798 595 476 589
  51 258 838  31  24 813 768 470 927 136 735 759 339 753  86 512 109  93
  84 104 877 277 743 440 494 477 792 568 250 392 190 179 723 730  68 343
 432 344 731 583 338 455 605 661 675 345  29 408 544 224 154 778 885 603
 298 452 842 873 895  88 273 198 434 624 460 549 626 418  90  65 775 394
 411 376 127 540 889 910 664 883  54 794 795 253 832 133]
INFO voc_dataset_evaluator.py: 127: AP for motorbike = 0.7247
INFO voc_eval.py: 171: [ 2823 10656  7998 ... 13848  3454  6132]
INFO voc_dataset_evaluator.py: 127: AP for person = 0.8370
INFO voc_eval.py: 171: [1871  260 2309 ...  756 1852 1760]
INFO voc_dataset_evaluator.py: 127: AP for pottedplant = 0.4626
INFO voc_eval.py: 171: [ 556 1508  288 ...  909  500  656]
INFO voc_dataset_evaluator.py: 127: AP for sheep = 0.7545
INFO voc_eval.py: 171: [1222  814  962 ... 1405 1455  617]
INFO voc_dataset_evaluator.py: 127: AP for sofa = 0.6947
INFO voc_eval.py: 171: [ 164  510 1197 ...  108 1134  944]
INFO voc_dataset_evaluator.py: 127: AP for train = 0.7647
INFO voc_eval.py: 171: [423 250 631 555 277  91 402 644  19  56 529 205 368 159 742 421 201 454
 339  88 220 404 453 108 418 169 619 618 397 528 233 498 263 439 514 536
  33  73  39 426 683 199 223 606 239 151 143 333 210  92 697 374 308 645
 759 441 145 712 152 651 131 300 635 427 102 517 472 132 228 330 447 745
 623 516  53  61 299  70 696 672 725 405 269 469 274 354  16 532 356 462
 567 107 656 768 120   5 272 649  81 255 640 615  13 470   8 599 128 361
 306  71 256 115 156 154  43 357 118 527  96 483 276 561   4 448  20 708
  68 728 621 616 694 406 629 230 723 148  38 399 281 408 407 164  83 437
 751 121 318 716 450   1 471 351 506  99 387 586 699 776 398 632 282  82
 593 371 292 589 726  60 653 141 432 257 183 113 493 261 568 625 440 639
 553 754 734 322 117 661  78 530 735 492 328 566 762 760 112 380 772 179
 731 559  67 477 570 596 674 287 376 385 171 364 415 278 654 138 298 213
 520 549 730 668  89 340  76 500 163 733 166 636 443 451 188 196 634 372
 652 537 777 576 600  31 436  75 677  59 335 522 739 544 279 738 679 312
 283 434   2 206 389 153 342 400 304 219 444 379 195 571  22 729 480 392
 302 337 381 236 173 688 289 116 314 494 750 659  80   9 100 685 129 377
 710 373 496 518 686 646 176 707 473 577 515 170 556 757 523  32  63 317
 105 133 174 603 485  44 178 172 449 747 704 499 626  46 254 662 215 186
 106 459 642 241 359 521  93 758 541 428 720 211 202 551 548 135 663  84
 325 271 778 755 491 771 657 709 526 343 583 420  97 157 487  94 591 303
 669 244 495  50 139  29 305  64 602 378 764 384 270 743 429 414 395 341
 123 588  41 565 461 319 190 463   3  15  30  49 614 394 648 550 749 167
 638 702 574 446  90 452 746 320 769 510 597 587 208 690 531 592 660 149
 590 311 103 482 630 442 198 240 232 545 184 535 331 355 362 290 175 393
 701 413 655 727 109 569 207 748   6 285 505 388 104  77 124 675 347 410
 136 369 691 547 433 617  36 564 222 291 375 424 334 130 216 218 665 543
 744 484 192 647 719 689 119 284 309 622  52 572 144 511 705 763 627 761
 486 680 700 610 344 703 409 425 391 367  47 158 504  58 338 533 713 650
 684  28 259 741 237 185 458 370 765  25 382 643 275 293 666 633 466 273
 775 142 717  86 562 101 403 732 711 313 197 122  69 670 200 146  40 242
 150  21 479 456 773 474 245  45 235 678 671   7  87 582 353 134 552 585
 165 438 177 137 724 246 460 316 209 203 110  74 524 612  18 676  26  98
 538 604 540 323 718 327 519 417 155 182  14 140 336 416 714 430 554 682
 352  34 637 457 501 180 756 419 546 365 321 266  51 468 475   0 214 422
 560 258 455 160 126 753 490 667 268 127 467 609 489 613 488 774 162  57
 234 581 125 251 191 390  62 411 307 497  54 435 412 221 161 580 509 513
 534  12 189  24 346 265 770 740 267 264 608 525 736 360 386 181 737 563
 767  11 324 247 249 558 310 611 752 658 628 227 698 512  10 294 193 114
 231 252  66 204 111 363 401 280 345 168 507 348 431 224 253 225 465 584
 620 349 295  55 624 288 508 673  48 715 721 595 315 573 722 296 579 212
  72 706 601 503 445 578 187  27 598 329 147 557 695 350  95 358 502  35
  79 243 594 539 605 366 478 332  42 260 383 693 238 481 301 262 687  65
 476 681 464 226 664 641 575  17 542 194  23 297 326  37 248 692 766 217
 396 286 229 607  85]
INFO voc_dataset_evaluator.py: 127: AP for tvmonitor = 0.7215
INFO voc_dataset_evaluator.py: 130: Mean AP = 0.7381
INFO voc_dataset_evaluator.py: 131: ~~~~~~~~
INFO voc_dataset_evaluator.py: 132: Results:
INFO voc_dataset_evaluator.py: 134: 0.774
INFO voc_dataset_evaluator.py: 134: 0.790
INFO voc_dataset_evaluator.py: 134: 0.791
INFO voc_dataset_evaluator.py: 134: 0.622
INFO voc_dataset_evaluator.py: 134: 0.677
INFO voc_dataset_evaluator.py: 134: 0.791
INFO voc_dataset_evaluator.py: 134: 0.859
INFO voc_dataset_evaluator.py: 134: 0.856
INFO voc_dataset_evaluator.py: 134: 0.618
INFO voc_dataset_evaluator.py: 134: 0.774
INFO voc_dataset_evaluator.py: 134: 0.603
INFO voc_dataset_evaluator.py: 134: 0.818
INFO voc_dataset_evaluator.py: 134: 0.830
INFO voc_dataset_evaluator.py: 134: 0.725
INFO voc_dataset_evaluator.py: 134: 0.837
INFO voc_dataset_evaluator.py: 134: 0.463
INFO voc_dataset_evaluator.py: 134: 0.755
INFO voc_dataset_evaluator.py: 134: 0.695
INFO voc_dataset_evaluator.py: 134: 0.765
INFO voc_dataset_evaluator.py: 134: 0.722
INFO voc_dataset_evaluator.py: 135: 0.738
INFO voc_dataset_evaluator.py: 136: ~~~~~~~~
INFO voc_dataset_evaluator.py: 137: 
INFO voc_dataset_evaluator.py: 138: ----------------------------------------------------------
INFO voc_dataset_evaluator.py: 139: Results computed with the **unofficial** Python eval code.
INFO voc_dataset_evaluator.py: 140: Results should be very close to the official MATLAB code.
INFO voc_dataset_evaluator.py: 141: Use `./tools/reval.py --matlab ...` for your paper.
INFO voc_dataset_evaluator.py: 142: -- Thanks, The Management
INFO voc_dataset_evaluator.py: 143: ----------------------------------------------------------
INFO task_evaluation.py:  63: Evaluating bounding boxes is done!
INFO task_evaluation.py: 189: copypaste: Dataset: voc_2007_test
INFO task_evaluation.py: 191: copypaste: Task: box
INFO task_evaluation.py: 194: copypaste: AP,AP50,AP75,APs,APm,APl
INFO task_evaluation.py: 195: copypaste: -1.0000,-1.0000,-1.0000,-1.0000,-1.0000,-1.0000
Start testing on iteration 4499
INFO test_net.py:  72: Called with args:
INFO test_net.py:  73: Namespace(cfg_file='configs/dt/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv.yaml', dataset='voc2007', load_ckpt='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step4499.pth', load_detectron=None, multi_gpu_testing=True, num_classes=None, output_dir=None, range=None, set_cfgs=[], vis=False)
INFO test_net.py:  83: Automatically set output directory to Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test
INFO test_net.py: 130: Testing with config:
INFO test_net.py: 131: {'BBOX_XFORM_CLIP': 4.135166556742356,
 'CROP_RESIZE_WITH_MAX_POOL': True,
 'CUDA': False,
 'DATA_DIR': '/home/ubuntu/Detectron.pytorch/data',
 'DATA_LOADER': {'NUM_THREADS': 4},
 'DEBUG': False,
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXPECTED_RESULTS': [],
 'EXPECTED_RESULTS_ATOL': 0.005,
 'EXPECTED_RESULTS_EMAIL': '',
 'EXPECTED_RESULTS_RTOL': 0.1,
 'FAST_RCNN': {'BOX_OUT_STREAMS': 1,
               'CONV_HEAD_DIM': 256,
               'MLP_HEAD_DIM': 1024,
               'NUM_STACKED_CONVS': 4,
               'ROI_BOX_HEAD': 'fast_rcnn_heads.roi_2mlp_head',
               'ROI_XFORM_METHOD': 'RoIAlign',
               'ROI_XFORM_RESOLUTION': 7,
               'ROI_XFORM_SAMPLING_RATIO': 2},
 'FPN': {'COARSEST_STRIDE': 32,
         'DIM': 256,
         'EXTRA_CONV_LEVELS': False,
         'FPN_ON': True,
         'MULTILEVEL_ROIS': True,
         'MULTILEVEL_RPN': True,
         'ROI_CANONICAL_LEVEL': 4,
         'ROI_CANONICAL_SCALE': 224,
         'ROI_MAX_LEVEL': 5,
         'ROI_MIN_LEVEL': 2,
         'RPN_ANCHOR_START_SIZE': 32,
         'RPN_ASPECT_RATIOS': (0.5, 1, 2),
         'RPN_COLLECT_SCALE': 1,
         'RPN_MAX_LEVEL': 6,
         'RPN_MIN_LEVEL': 2,
         'USE_GN': False,
         'ZERO_INIT_LATERAL': False},
 'GROUP_NORM': {'DIM_PER_GP': -1, 'EPSILON': 1e-05, 'NUM_GROUPS': 32},
 'KRCNN': {'CONV_HEAD_DIM': 256,
           'CONV_HEAD_KERNEL': 3,
           'CONV_INIT': 'GaussianFill',
           'DECONV_DIM': 256,
           'DECONV_KERNEL': 4,
           'DILATION': 1,
           'HEATMAP_SIZE': -1,
           'INFERENCE_MIN_SIZE': 0,
           'KEYPOINT_CONFIDENCE': 'bbox',
           'LOSS_WEIGHT': 1.0,
           'MIN_KEYPOINT_COUNT_FOR_VALID_MINIBATCH': 20,
           'NMS_OKS': False,
           'NORMALIZE_BY_VISIBLE_KEYPOINTS': True,
           'NUM_KEYPOINTS': -1,
           'NUM_STACKED_CONVS': 8,
           'ROI_KEYPOINTS_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'UP_SCALE': -1,
           'USE_DECONV': False,
           'USE_DECONV_OUTPUT': False},
 'MATLAB': 'matlab',
 'MODEL': {'BBOX_REG_WEIGHTS': (10.0, 10.0, 5.0, 5.0),
           'CLS_AGNOSTIC_BBOX_REG': False,
           'CONV_BODY': 'FPN.fpn_ResNet101_conv5_body',
           'FASTER_RCNN': True,
           'KEYPOINTS_ON': False,
           'LOAD_IMAGENET_PRETRAINED_WEIGHTS': True,
           'MASK_ON': False,
           'NUM_CLASSES': 21,
           'RPN_ONLY': False,
           'SHARE_RES5': False,
           'TYPE': 'generalized_rcnn',
           'UNSUPERVISED_POSE': False},
 'MRCNN': {'CLS_SPECIFIC_MASK': True,
           'CONV_INIT': 'GaussianFill',
           'DILATION': 2,
           'DIM_REDUCED': 256,
           'MEMORY_EFFICIENT_LOSS': True,
           'RESOLUTION': 14,
           'ROI_MASK_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'THRESH_BINARIZE': 0.5,
           'UPSAMPLE_RATIO': 1,
           'USE_FC_OUTPUT': False,
           'WEIGHT_LOSS_MASK': 1.0},
 'NUM_GPUS': 8,
 'OUTPUT_DIR': 'Outputs',
 'PIXEL_MEANS': array([[[102.9801, 115.9465, 122.7717]]]),
 'POOLING_MODE': 'crop',
 'POOLING_SIZE': 7,
 'PYTORCH_VERSION_LESS_THAN_040': False,
 'RESNETS': {'FREEZE_AT': 2,
             'IMAGENET_PRETRAINED_WEIGHTS': 'data/pretrained_model/resnet101_caffe.pth',
             'NUM_GROUPS': 1,
             'RES5_DILATION': 1,
             'SHORTCUT_FUNC': 'basic_bn_shortcut',
             'STEM_FUNC': 'basic_bn_stem',
             'STRIDE_1X1': True,
             'TRANS_FUNC': 'bottleneck_transformation',
             'USE_GN': False,
             'WIDTH_PER_GROUP': 64},
 'RETINANET': {'ANCHOR_SCALE': 4,
               'ASPECT_RATIOS': (0.5, 1.0, 2.0),
               'BBOX_REG_BETA': 0.11,
               'BBOX_REG_WEIGHT': 1.0,
               'CLASS_SPECIFIC_BBOX': False,
               'INFERENCE_TH': 0.05,
               'LOSS_ALPHA': 0.25,
               'LOSS_GAMMA': 2.0,
               'NEGATIVE_OVERLAP': 0.4,
               'NUM_CONVS': 4,
               'POSITIVE_OVERLAP': 0.5,
               'PRE_NMS_TOP_N': 1000,
               'PRIOR_PROB': 0.01,
               'RETINANET_ON': False,
               'SCALES_PER_OCTAVE': 3,
               'SHARE_CLS_BBOX_TOWER': False,
               'SOFTMAX': False},
 'RFCN': {'PS_GRID_SIZE': 3},
 'RNG_SEED': 3,
 'ROOT_DIR': '/home/ubuntu/Detectron.pytorch',
 'RPN': {'ASPECT_RATIOS': (0.5, 1, 2),
         'CLS_ACTIVATION': 'sigmoid',
         'OUT_DIM': 512,
         'OUT_DIM_AS_IN_DIM': True,
         'RPN_ON': True,
         'SIZES': (64, 128, 256, 512),
         'STRIDE': 16},
 'SOLVER': {'BASE_LR': 2e-05,
            'BIAS_DOUBLE_LR': True,
            'BIAS_WEIGHT_DECAY': False,
            'GAMMA': 0.1,
            'LOG_LR_CHANGE_THRESHOLD': 1.1,
            'LRS': [],
            'LR_POLICY': 'steps_with_decay',
            'MAX_ITER': 10000,
            'MOMENTUM': 0.9,
            'SCALE_MOMENTUM': True,
            'SCALE_MOMENTUM_THRESHOLD': 1.1,
            'STEPS': [0, 5000, 8000],
            'STEP_SIZE': 30000,
            'TYPE': 'SGD',
            'WARM_UP_FACTOR': 0.3333333333333333,
            'WARM_UP_ITERS': 500,
            'WARM_UP_METHOD': 'linear',
            'WEIGHT_DECAY': 0.0001,
            'WEIGHT_DECAY_GN': 0.0},
 'TEST': {'BBOX_AUG': {'AREA_TH_HI': 32400,
                       'AREA_TH_LO': 2500,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'COORD_HEUR': 'UNION',
                       'ENABLED': False,
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False,
                       'SCORE_HEUR': 'UNION'},
          'BBOX_REG': True,
          'BBOX_VOTE': {'ENABLED': False,
                        'SCORING_METHOD': 'ID',
                        'SCORING_METHOD_BETA': 1.0,
                        'VOTE_TH': 0.8},
          'COMPETITION_MODE': True,
          'DATASETS': ('voc_2007_test',),
          'DETECTIONS_PER_IM': 100,
          'FORCE_JSON_DATASET_EVAL': False,
          'KPS_AUG': {'AREA_TH': 32400,
                      'ASPECT_RATIOS': (),
                      'ASPECT_RATIO_H_FLIP': False,
                      'ENABLED': False,
                      'HEUR': 'HM_AVG',
                      'H_FLIP': False,
                      'MAX_SIZE': 4000,
                      'SCALES': (),
                      'SCALE_H_FLIP': False,
                      'SCALE_SIZE_DEP': False},
          'MASK_AUG': {'AREA_TH': 32400,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'ENABLED': False,
                       'HEUR': 'SOFT_AVG',
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False},
          'MAX_SIZE': 1000,
          'NMS': 0.5,
          'PRECOMPUTED_PROPOSALS': False,
          'PROPOSAL_FILES': (),
          'PROPOSAL_LIMIT': 2000,
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 1000,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALE': 600,
          'SCORE_THRESH': 0.05,
          'SOFT_NMS': {'ENABLED': False, 'METHOD': 'linear', 'SIGMA': 0.5},
          'WEAK_SUPERVISE': False},
 'TRAIN': {'ASPECT_CROPPING': False,
           'ASPECT_GROUPING': True,
           'ASPECT_HI': 2,
           'ASPECT_LO': 0.5,
           'BATCH_SIZE_PER_IM': 512,
           'BBOX_INSIDE_WEIGHTS': (1.0, 1.0, 1.0, 1.0),
           'BBOX_NORMALIZE_MEANS': (0.0, 0.0, 0.0, 0.0),
           'BBOX_NORMALIZE_STDS': (0.1, 0.1, 0.2, 0.2),
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'COPY_CLS_TO_DET': False,
           'CROWD_FILTER_THRESH': 0.7,
           'DATASETS': (),
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'FREEZE_BOX_HEAD': True,
           'FREEZE_CONV_BODY': False,
           'FREEZE_RPN': False,
           'GT_MIN_AREA': -1,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_FILES': (),
           'RPN_BATCH_SIZE_PER_IM': 256,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 2000,
           'RPN_STRADDLE_THRESH': 0,
           'SCALES': (600,),
           'SNAPSHOT_ITERS': 2000,
           'SPATIAL_REG': False,
           'USE_FLIPPED': True,
           'WEAK_SUPERVISE': True,
           'WEAK_SUPERVISE_WITH_PRETRAIN': True},
 'VIS': False,
 'VIS_TH': 0.9}
loading annotations into memory...
Done (t=0.12s)
creating index...
index created!
INFO subprocess.py:  59: 0,1,2,3
INFO subprocess.py:  67: gpu_inds: [0, 1, 2, 3]
INFO subprocess.py:  89: detection range command 0: python /home/ubuntu/Detectron.pytorch/tools/test_net.py --range 0 1238 --cfg Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_config.yaml --set TEST.DATASETS '("voc_2007_test",)' --output_dir Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test --load_ckpt Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step4499.pth
INFO subprocess.py:  89: detection range command 1: python /home/ubuntu/Detectron.pytorch/tools/test_net.py --range 1238 2476 --cfg Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_config.yaml --set TEST.DATASETS '("voc_2007_test",)' --output_dir Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test --load_ckpt Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step4499.pth
INFO subprocess.py:  89: detection range command 2: python /home/ubuntu/Detectron.pytorch/tools/test_net.py --range 2476 3714 --cfg Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_config.yaml --set TEST.DATASETS '("voc_2007_test",)' --output_dir Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test --load_ckpt Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step4499.pth
INFO subprocess.py:  89: detection range command 3: python /home/ubuntu/Detectron.pytorch/tools/test_net.py --range 3714 4952 --cfg Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_config.yaml --set TEST.DATASETS '("voc_2007_test",)' --output_dir Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test --load_ckpt Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step4499.pth
INFO subprocess.py: 129: # ---------------------------------------------------------------------------- #
INFO subprocess.py: 131: stdout of subprocess 0 with range [1, 1238]
INFO subprocess.py: 133: # ---------------------------------------------------------------------------- #
INFO test_net.py:  72: Called with args:
INFO test_net.py:  73: Namespace(cfg_file='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_config.yaml', dataset=None, load_ckpt='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step4499.pth', load_detectron=None, multi_gpu_testing=False, num_classes=None, output_dir='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test', range=[0, 1238], set_cfgs=['TEST.DATASETS', '("voc_2007_test",)'], vis=False)
INFO test_net.py: 130: Testing with config:
INFO test_net.py: 131: {'BBOX_XFORM_CLIP': 4.135166556742356,
 'CROP_RESIZE_WITH_MAX_POOL': True,
 'CUDA': False,
 'DATA_DIR': '/home/ubuntu/Detectron.pytorch/data',
 'DATA_LOADER': {'NUM_THREADS': 4},
 'DEBUG': False,
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXPECTED_RESULTS': [],
 'EXPECTED_RESULTS_ATOL': 0.005,
 'EXPECTED_RESULTS_EMAIL': '',
 'EXPECTED_RESULTS_RTOL': 0.1,
 'FAST_RCNN': {'BOX_OUT_STREAMS': 1,
               'CONV_HEAD_DIM': 256,
               'MLP_HEAD_DIM': 1024,
               'NUM_STACKED_CONVS': 4,
               'ROI_BOX_HEAD': 'fast_rcnn_heads.roi_2mlp_head',
               'ROI_XFORM_METHOD': 'RoIAlign',
               'ROI_XFORM_RESOLUTION': 7,
               'ROI_XFORM_SAMPLING_RATIO': 2},
 'FPN': {'COARSEST_STRIDE': 32,
         'DIM': 256,
         'EXTRA_CONV_LEVELS': False,
         'FPN_ON': True,
         'MULTILEVEL_ROIS': True,
         'MULTILEVEL_RPN': True,
         'ROI_CANONICAL_LEVEL': 4,
         'ROI_CANONICAL_SCALE': 224,
         'ROI_MAX_LEVEL': 5,
         'ROI_MIN_LEVEL': 2,
         'RPN_ANCHOR_START_SIZE': 32,
         'RPN_ASPECT_RATIOS': (0.5, 1, 2),
         'RPN_COLLECT_SCALE': 1,
         'RPN_MAX_LEVEL': 6,
         'RPN_MIN_LEVEL': 2,
         'USE_GN': False,
         'ZERO_INIT_LATERAL': False},
 'GROUP_NORM': {'DIM_PER_GP': -1, 'EPSILON': 1e-05, 'NUM_GROUPS': 32},
 'KRCNN': {'CONV_HEAD_DIM': 256,
           'CONV_HEAD_KERNEL': 3,
           'CONV_INIT': 'GaussianFill',
           'DECONV_DIM': 256,
           'DECONV_KERNEL': 4,
           'DILATION': 1,
           'HEATMAP_SIZE': -1,
           'INFERENCE_MIN_SIZE': 0,
           'KEYPOINT_CONFIDENCE': 'bbox',
           'LOSS_WEIGHT': 1.0,
           'MIN_KEYPOINT_COUNT_FOR_VALID_MINIBATCH': 20,
           'NMS_OKS': False,
           'NORMALIZE_BY_VISIBLE_KEYPOINTS': True,
           'NUM_KEYPOINTS': -1,
           'NUM_STACKED_CONVS': 8,
           'ROI_KEYPOINTS_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'UP_SCALE': -1,
           'USE_DECONV': False,
           'USE_DECONV_OUTPUT': False},
 'MATLAB': 'matlab',
 'MODEL': {'BBOX_REG_WEIGHTS': (10.0, 10.0, 5.0, 5.0),
           'CLS_AGNOSTIC_BBOX_REG': False,
           'CONV_BODY': 'FPN.fpn_ResNet101_conv5_body',
           'FASTER_RCNN': True,
           'KEYPOINTS_ON': False,
           'LOAD_IMAGENET_PRETRAINED_WEIGHTS': True,
           'MASK_ON': False,
           'NUM_CLASSES': 21,
           'RPN_ONLY': False,
           'SHARE_RES5': False,
           'TYPE': 'generalized_rcnn',
           'UNSUPERVISED_POSE': False},
 'MRCNN': {'CLS_SPECIFIC_MASK': True,
           'CONV_INIT': 'GaussianFill',
           'DILATION': 2,
           'DIM_REDUCED': 256,
           'MEMORY_EFFICIENT_LOSS': True,
           'RESOLUTION': 14,
           'ROI_MASK_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'THRESH_BINARIZE': 0.5,
           'UPSAMPLE_RATIO': 1,
           'USE_FC_OUTPUT': False,
           'WEIGHT_LOSS_MASK': 1.0},
 'NUM_GPUS': 8,
 'OUTPUT_DIR': 'Outputs',
 'PIXEL_MEANS': array([[[102.9801, 115.9465, 122.7717]]]),
 'POOLING_MODE': 'crop',
 'POOLING_SIZE': 7,
 'PYTORCH_VERSION_LESS_THAN_040': False,
 'RESNETS': {'FREEZE_AT': 2,
             'IMAGENET_PRETRAINED_WEIGHTS': 'data/pretrained_model/resnet101_caffe.pth',
             'NUM_GROUPS': 1,
             'RES5_DILATION': 1,
             'SHORTCUT_FUNC': 'basic_bn_shortcut',
             'STEM_FUNC': 'basic_bn_stem',
             'STRIDE_1X1': True,
             'TRANS_FUNC': 'bottleneck_transformation',
             'USE_GN': False,
             'WIDTH_PER_GROUP': 64},
 'RETINANET': {'ANCHOR_SCALE': 4,
               'ASPECT_RATIOS': (0.5, 1.0, 2.0),
               'BBOX_REG_BETA': 0.11,
               'BBOX_REG_WEIGHT': 1.0,
               'CLASS_SPECIFIC_BBOX': False,
               'INFERENCE_TH': 0.05,
               'LOSS_ALPHA': 0.25,
               'LOSS_GAMMA': 2.0,
               'NEGATIVE_OVERLAP': 0.4,
               'NUM_CONVS': 4,
               'POSITIVE_OVERLAP': 0.5,
               'PRE_NMS_TOP_N': 1000,
               'PRIOR_PROB': 0.01,
               'RETINANET_ON': False,
               'SCALES_PER_OCTAVE': 3,
               'SHARE_CLS_BBOX_TOWER': False,
               'SOFTMAX': False},
 'RFCN': {'PS_GRID_SIZE': 3},
 'RNG_SEED': 3,
 'ROOT_DIR': '/home/ubuntu/Detectron.pytorch',
 'RPN': {'ASPECT_RATIOS': (0.5, 1, 2),
         'CLS_ACTIVATION': 'sigmoid',
         'OUT_DIM': 512,
         'OUT_DIM_AS_IN_DIM': True,
         'RPN_ON': True,
         'SIZES': (64, 128, 256, 512),
         'STRIDE': 16},
 'SOLVER': {'BASE_LR': 2e-05,
            'BIAS_DOUBLE_LR': True,
            'BIAS_WEIGHT_DECAY': False,
            'GAMMA': 0.1,
            'LOG_LR_CHANGE_THRESHOLD': 1.1,
            'LRS': [],
            'LR_POLICY': 'steps_with_decay',
            'MAX_ITER': 10000,
            'MOMENTUM': 0.9,
            'SCALE_MOMENTUM': True,
            'SCALE_MOMENTUM_THRESHOLD': 1.1,
            'STEPS': [0, 5000, 8000],
            'STEP_SIZE': 30000,
            'TYPE': 'SGD',
            'WARM_UP_FACTOR': 0.3333333333333333,
            'WARM_UP_ITERS': 500,
            'WARM_UP_METHOD': 'linear',
            'WEIGHT_DECAY': 0.0001,
            'WEIGHT_DECAY_GN': 0.0},
 'TEST': {'BBOX_AUG': {'AREA_TH_HI': 32400,
                       'AREA_TH_LO': 2500,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'COORD_HEUR': 'UNION',
                       'ENABLED': False,
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False,
                       'SCORE_HEUR': 'UNION'},
          'BBOX_REG': True,
          'BBOX_VOTE': {'ENABLED': False,
                        'SCORING_METHOD': 'ID',
                        'SCORING_METHOD_BETA': 1.0,
                        'VOTE_TH': 0.8},
          'COMPETITION_MODE': True,
          'DATASETS': ('voc_2007_test',),
          'DETECTIONS_PER_IM': 100,
          'FORCE_JSON_DATASET_EVAL': False,
          'KPS_AUG': {'AREA_TH': 32400,
                      'ASPECT_RATIOS': (),
                      'ASPECT_RATIO_H_FLIP': False,
                      'ENABLED': False,
                      'HEUR': 'HM_AVG',
                      'H_FLIP': False,
                      'MAX_SIZE': 4000,
                      'SCALES': (),
                      'SCALE_H_FLIP': False,
                      'SCALE_SIZE_DEP': False},
          'MASK_AUG': {'AREA_TH': 32400,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'ENABLED': False,
                       'HEUR': 'SOFT_AVG',
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False},
          'MAX_SIZE': 1000,
          'NMS': 0.5,
          'PRECOMPUTED_PROPOSALS': False,
          'PROPOSAL_FILES': (),
          'PROPOSAL_LIMIT': 2000,
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 1000,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALE': 600,
          'SCORE_THRESH': 0.05,
          'SOFT_NMS': {'ENABLED': False, 'METHOD': 'linear', 'SIGMA': 0.5},
          'WEAK_SUPERVISE': False},
 'TRAIN': {'ASPECT_CROPPING': False,
           'ASPECT_GROUPING': True,
           'ASPECT_HI': 2,
           'ASPECT_LO': 0.5,
           'BATCH_SIZE_PER_IM': 512,
           'BBOX_INSIDE_WEIGHTS': (1.0, 1.0, 1.0, 1.0),
           'BBOX_NORMALIZE_MEANS': (0.0, 0.0, 0.0, 0.0),
           'BBOX_NORMALIZE_STDS': (0.1, 0.1, 0.2, 0.2),
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'COPY_CLS_TO_DET': False,
           'CROWD_FILTER_THRESH': 0.7,
           'DATASETS': (),
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'FREEZE_BOX_HEAD': True,
           'FREEZE_CONV_BODY': False,
           'FREEZE_RPN': False,
           'GT_MIN_AREA': -1,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_FILES': (),
           'RPN_BATCH_SIZE_PER_IM': 256,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 2000,
           'RPN_STRADDLE_THRESH': 0,
           'SCALES': (600,),
           'SNAPSHOT_ITERS': 2000,
           'SPATIAL_REG': False,
           'USE_FLIPPED': True,
           'WEAK_SUPERVISE': True,
           'WEAK_SUPERVISE_WITH_PRETRAIN': True},
 'VIS': False,
 'VIS_TH': 0.9}
loading annotations into memory...
Done (t=0.13s)
creating index...
index created!
INFO test_engine.py: 324: training mode? : False
INFO test_engine.py: 331: loading checkpoint Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step4499.pth
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1/1238 0.577s + 0.002s (eta: 0:11:55)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 11/1238 0.517s + 0.002s (eta: 0:10:36)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 21/1238 0.496s + 0.002s (eta: 0:10:05)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 31/1238 0.498s + 0.001s (eta: 0:10:03)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 41/1238 0.505s + 0.001s (eta: 0:10:06)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 51/1238 0.505s + 0.001s (eta: 0:10:01)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 61/1238 0.502s + 0.001s (eta: 0:09:52)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 71/1238 0.506s + 0.001s (eta: 0:09:51)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 81/1238 0.503s + 0.002s (eta: 0:09:43)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 91/1238 0.503s + 0.002s (eta: 0:09:38)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 101/1238 0.504s + 0.002s (eta: 0:09:35)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 111/1238 0.504s + 0.002s (eta: 0:09:30)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 121/1238 0.509s + 0.002s (eta: 0:09:30)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 131/1238 0.510s + 0.002s (eta: 0:09:27)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 141/1238 0.509s + 0.002s (eta: 0:09:20)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 151/1238 0.509s + 0.002s (eta: 0:09:14)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 161/1238 0.508s + 0.002s (eta: 0:09:09)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 171/1238 0.508s + 0.002s (eta: 0:09:04)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 181/1238 0.509s + 0.002s (eta: 0:08:59)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 191/1238 0.511s + 0.002s (eta: 0:08:56)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 201/1238 0.512s + 0.002s (eta: 0:08:52)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 211/1238 0.511s + 0.002s (eta: 0:08:46)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 221/1238 0.512s + 0.002s (eta: 0:08:42)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 231/1238 0.513s + 0.002s (eta: 0:08:37)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 241/1238 0.513s + 0.002s (eta: 0:08:32)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 251/1238 0.513s + 0.002s (eta: 0:08:27)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 261/1238 0.511s + 0.002s (eta: 0:08:21)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 271/1238 0.512s + 0.002s (eta: 0:08:16)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 281/1238 0.512s + 0.002s (eta: 0:08:11)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 291/1238 0.514s + 0.002s (eta: 0:08:08)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 301/1238 0.513s + 0.002s (eta: 0:08:02)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 311/1238 0.513s + 0.002s (eta: 0:07:57)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 321/1238 0.512s + 0.002s (eta: 0:07:51)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 331/1238 0.512s + 0.002s (eta: 0:07:45)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 341/1238 0.511s + 0.002s (eta: 0:07:40)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 351/1238 0.511s + 0.002s (eta: 0:07:35)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 361/1238 0.510s + 0.002s (eta: 0:07:28)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 371/1238 0.510s + 0.002s (eta: 0:07:23)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 381/1238 0.510s + 0.002s (eta: 0:07:18)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 391/1238 0.509s + 0.002s (eta: 0:07:13)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 401/1238 0.509s + 0.002s (eta: 0:07:07)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 411/1238 0.506s + 0.002s (eta: 0:06:59)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 421/1238 0.503s + 0.002s (eta: 0:06:52)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 431/1238 0.501s + 0.002s (eta: 0:06:45)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 441/1238 0.498s + 0.002s (eta: 0:06:38)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 451/1238 0.496s + 0.002s (eta: 0:06:31)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 461/1238 0.494s + 0.002s (eta: 0:06:25)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 471/1238 0.493s + 0.002s (eta: 0:06:19)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 481/1238 0.492s + 0.002s (eta: 0:06:14)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 491/1238 0.491s + 0.002s (eta: 0:06:08)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 501/1238 0.491s + 0.002s (eta: 0:06:03)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 511/1238 0.491s + 0.002s (eta: 0:05:58)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 521/1238 0.491s + 0.002s (eta: 0:05:53)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 531/1238 0.492s + 0.002s (eta: 0:05:48)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 541/1238 0.491s + 0.002s (eta: 0:05:43)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 551/1238 0.491s + 0.002s (eta: 0:05:38)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 561/1238 0.492s + 0.002s (eta: 0:05:34)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 571/1238 0.492s + 0.002s (eta: 0:05:29)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 581/1238 0.491s + 0.002s (eta: 0:05:23)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 591/1238 0.491s + 0.002s (eta: 0:05:18)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 601/1238 0.491s + 0.002s (eta: 0:05:13)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 611/1238 0.491s + 0.002s (eta: 0:05:09)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 621/1238 0.492s + 0.002s (eta: 0:05:04)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 631/1238 0.492s + 0.002s (eta: 0:04:59)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 641/1238 0.492s + 0.002s (eta: 0:04:54)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 651/1238 0.492s + 0.002s (eta: 0:04:49)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 661/1238 0.491s + 0.002s (eta: 0:04:44)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 671/1238 0.491s + 0.002s (eta: 0:04:39)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 681/1238 0.491s + 0.002s (eta: 0:04:34)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 691/1238 0.491s + 0.002s (eta: 0:04:29)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 701/1238 0.491s + 0.002s (eta: 0:04:24)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 711/1238 0.491s + 0.002s (eta: 0:04:20)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 721/1238 0.491s + 0.002s (eta: 0:04:14)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 731/1238 0.492s + 0.002s (eta: 0:04:10)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 741/1238 0.492s + 0.002s (eta: 0:04:05)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 751/1238 0.492s + 0.002s (eta: 0:04:00)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 761/1238 0.492s + 0.002s (eta: 0:03:55)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 771/1238 0.492s + 0.002s (eta: 0:03:50)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 781/1238 0.492s + 0.002s (eta: 0:03:45)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 791/1238 0.492s + 0.002s (eta: 0:03:40)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 801/1238 0.492s + 0.002s (eta: 0:03:35)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 811/1238 0.492s + 0.002s (eta: 0:03:30)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 821/1238 0.492s + 0.002s (eta: 0:03:25)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 831/1238 0.492s + 0.002s (eta: 0:03:21)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 841/1238 0.492s + 0.002s (eta: 0:03:16)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 851/1238 0.492s + 0.002s (eta: 0:03:11)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 861/1238 0.492s + 0.002s (eta: 0:03:06)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 871/1238 0.492s + 0.002s (eta: 0:03:01)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 881/1238 0.492s + 0.002s (eta: 0:02:56)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 891/1238 0.492s + 0.002s (eta: 0:02:51)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 901/1238 0.492s + 0.002s (eta: 0:02:46)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 911/1238 0.492s + 0.002s (eta: 0:02:41)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 921/1238 0.492s + 0.002s (eta: 0:02:36)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 931/1238 0.492s + 0.002s (eta: 0:02:31)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 941/1238 0.492s + 0.002s (eta: 0:02:26)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 951/1238 0.492s + 0.002s (eta: 0:02:21)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 961/1238 0.492s + 0.002s (eta: 0:02:16)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 971/1238 0.493s + 0.002s (eta: 0:02:12)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 981/1238 0.493s + 0.002s (eta: 0:02:07)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 991/1238 0.493s + 0.002s (eta: 0:02:02)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1001/1238 0.493s + 0.002s (eta: 0:01:57)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1011/1238 0.493s + 0.002s (eta: 0:01:52)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1021/1238 0.493s + 0.002s (eta: 0:01:47)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1031/1238 0.493s + 0.002s (eta: 0:01:42)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1041/1238 0.494s + 0.002s (eta: 0:01:37)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1051/1238 0.494s + 0.002s (eta: 0:01:32)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1061/1238 0.494s + 0.002s (eta: 0:01:27)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1071/1238 0.494s + 0.002s (eta: 0:01:22)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1081/1238 0.494s + 0.002s (eta: 0:01:17)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1091/1238 0.494s + 0.002s (eta: 0:01:12)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1101/1238 0.494s + 0.002s (eta: 0:01:08)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1111/1238 0.494s + 0.002s (eta: 0:01:02)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1121/1238 0.494s + 0.002s (eta: 0:00:58)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1131/1238 0.494s + 0.002s (eta: 0:00:53)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1141/1238 0.494s + 0.002s (eta: 0:00:48)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1151/1238 0.494s + 0.002s (eta: 0:00:43)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1161/1238 0.494s + 0.002s (eta: 0:00:38)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1171/1238 0.494s + 0.002s (eta: 0:00:33)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1181/1238 0.494s + 0.002s (eta: 0:00:28)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1191/1238 0.494s + 0.002s (eta: 0:00:23)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1201/1238 0.494s + 0.002s (eta: 0:00:18)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1211/1238 0.494s + 0.002s (eta: 0:00:13)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1221/1238 0.494s + 0.002s (eta: 0:00:08)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1231/1238 0.493s + 0.002s (eta: 0:00:03)
INFO test_engine.py: 314: Wrote detections to: /home/ubuntu/Detectron.pytorch/Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_0_1238.pkl
/home/ubuntu/anaconda3/envs/pytorch41/lib/python3.7/site-packages/torch/nn/functional.py:1890: UserWarning: nn.functional.upsample is deprecated. Use nn.functional.interpolate instead.
  warnings.warn("nn.functional.upsample is deprecated. Use nn.functional.interpolate instead.")
INFO subprocess.py: 129: # ---------------------------------------------------------------------------- #
INFO subprocess.py: 131: stdout of subprocess 1 with range [1239, 2476]
INFO subprocess.py: 133: # ---------------------------------------------------------------------------- #
INFO test_net.py:  72: Called with args:
INFO test_net.py:  73: Namespace(cfg_file='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_config.yaml', dataset=None, load_ckpt='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step3999.pth', load_detectron=None, multi_gpu_testing=False, num_classes=None, output_dir='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test', range=[1238, 2476], set_cfgs=['TEST.DATASETS', '("voc_2007_test",)'], vis=False)
INFO test_net.py: 130: Testing with config:
INFO test_net.py: 131: {'BBOX_XFORM_CLIP': 4.135166556742356,
 'CROP_RESIZE_WITH_MAX_POOL': True,
 'CUDA': False,
 'DATA_DIR': '/home/ubuntu/Detectron.pytorch/data',
 'DATA_LOADER': {'NUM_THREADS': 4},
 'DEBUG': False,
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXPECTED_RESULTS': [],
 'EXPECTED_RESULTS_ATOL': 0.005,
 'EXPECTED_RESULTS_EMAIL': '',
 'EXPECTED_RESULTS_RTOL': 0.1,
 'FAST_RCNN': {'BOX_OUT_STREAMS': 1,
               'CONV_HEAD_DIM': 256,
               'MLP_HEAD_DIM': 1024,
               'NUM_STACKED_CONVS': 4,
               'ROI_BOX_HEAD': 'fast_rcnn_heads.roi_2mlp_head',
               'ROI_XFORM_METHOD': 'RoIAlign',
               'ROI_XFORM_RESOLUTION': 7,
               'ROI_XFORM_SAMPLING_RATIO': 2},
 'FPN': {'COARSEST_STRIDE': 32,
         'DIM': 256,
         'EXTRA_CONV_LEVELS': False,
         'FPN_ON': True,
         'MULTILEVEL_ROIS': True,
         'MULTILEVEL_RPN': True,
         'ROI_CANONICAL_LEVEL': 4,
         'ROI_CANONICAL_SCALE': 224,
         'ROI_MAX_LEVEL': 5,
         'ROI_MIN_LEVEL': 2,
         'RPN_ANCHOR_START_SIZE': 32,
         'RPN_ASPECT_RATIOS': (0.5, 1, 2),
         'RPN_COLLECT_SCALE': 1,
         'RPN_MAX_LEVEL': 6,
         'RPN_MIN_LEVEL': 2,
         'USE_GN': False,
         'ZERO_INIT_LATERAL': False},
 'GROUP_NORM': {'DIM_PER_GP': -1, 'EPSILON': 1e-05, 'NUM_GROUPS': 32},
 'KRCNN': {'CONV_HEAD_DIM': 256,
           'CONV_HEAD_KERNEL': 3,
           'CONV_INIT': 'GaussianFill',
           'DECONV_DIM': 256,
           'DECONV_KERNEL': 4,
           'DILATION': 1,
           'HEATMAP_SIZE': -1,
           'INFERENCE_MIN_SIZE': 0,
           'KEYPOINT_CONFIDENCE': 'bbox',
           'LOSS_WEIGHT': 1.0,
           'MIN_KEYPOINT_COUNT_FOR_VALID_MINIBATCH': 20,
           'NMS_OKS': False,
           'NORMALIZE_BY_VISIBLE_KEYPOINTS': True,
           'NUM_KEYPOINTS': -1,
           'NUM_STACKED_CONVS': 8,
           'ROI_KEYPOINTS_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'UP_SCALE': -1,
           'USE_DECONV': False,
           'USE_DECONV_OUTPUT': False},
 'MATLAB': 'matlab',
 'MODEL': {'BBOX_REG_WEIGHTS': (10.0, 10.0, 5.0, 5.0),
           'CLS_AGNOSTIC_BBOX_REG': False,
           'CONV_BODY': 'FPN.fpn_ResNet101_conv5_body',
           'FASTER_RCNN': True,
           'KEYPOINTS_ON': False,
           'LOAD_IMAGENET_PRETRAINED_WEIGHTS': True,
           'MASK_ON': False,
           'NUM_CLASSES': 21,
           'RPN_ONLY': False,
           'SHARE_RES5': False,
           'TYPE': 'generalized_rcnn',
           'UNSUPERVISED_POSE': False},
 'MRCNN': {'CLS_SPECIFIC_MASK': True,
           'CONV_INIT': 'GaussianFill',
           'DILATION': 2,
           'DIM_REDUCED': 256,
           'MEMORY_EFFICIENT_LOSS': True,
           'RESOLUTION': 14,
           'ROI_MASK_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'THRESH_BINARIZE': 0.5,
           'UPSAMPLE_RATIO': 1,
           'USE_FC_OUTPUT': False,
           'WEIGHT_LOSS_MASK': 1.0},
 'NUM_GPUS': 8,
 'OUTPUT_DIR': 'Outputs',
 'PIXEL_MEANS': array([[[102.9801, 115.9465, 122.7717]]]),
 'POOLING_MODE': 'crop',
 'POOLING_SIZE': 7,
 'PYTORCH_VERSION_LESS_THAN_040': False,
 'RESNETS': {'FREEZE_AT': 2,
             'IMAGENET_PRETRAINED_WEIGHTS': 'data/pretrained_model/resnet101_caffe.pth',
             'NUM_GROUPS': 1,
             'RES5_DILATION': 1,
             'SHORTCUT_FUNC': 'basic_bn_shortcut',
             'STEM_FUNC': 'basic_bn_stem',
             'STRIDE_1X1': True,
             'TRANS_FUNC': 'bottleneck_transformation',
             'USE_GN': False,
             'WIDTH_PER_GROUP': 64},
 'RETINANET': {'ANCHOR_SCALE': 4,
               'ASPECT_RATIOS': (0.5, 1.0, 2.0),
               'BBOX_REG_BETA': 0.11,
               'BBOX_REG_WEIGHT': 1.0,
               'CLASS_SPECIFIC_BBOX': False,
               'INFERENCE_TH': 0.05,
               'LOSS_ALPHA': 0.25,
               'LOSS_GAMMA': 2.0,
               'NEGATIVE_OVERLAP': 0.4,
               'NUM_CONVS': 4,
               'POSITIVE_OVERLAP': 0.5,
               'PRE_NMS_TOP_N': 1000,
               'PRIOR_PROB': 0.01,
               'RETINANET_ON': False,
               'SCALES_PER_OCTAVE': 3,
               'SHARE_CLS_BBOX_TOWER': False,
               'SOFTMAX': False},
 'RFCN': {'PS_GRID_SIZE': 3},
 'RNG_SEED': 3,
 'ROOT_DIR': '/home/ubuntu/Detectron.pytorch',
 'RPN': {'ASPECT_RATIOS': (0.5, 1, 2),
         'CLS_ACTIVATION': 'sigmoid',
         'OUT_DIM': 512,
         'OUT_DIM_AS_IN_DIM': True,
         'RPN_ON': True,
         'SIZES': (64, 128, 256, 512),
         'STRIDE': 16},
 'SOLVER': {'BASE_LR': 2e-05,
            'BIAS_DOUBLE_LR': True,
            'BIAS_WEIGHT_DECAY': False,
            'GAMMA': 0.1,
            'LOG_LR_CHANGE_THRESHOLD': 1.1,
            'LRS': [],
            'LR_POLICY': 'steps_with_decay',
            'MAX_ITER': 10000,
            'MOMENTUM': 0.9,
            'SCALE_MOMENTUM': True,
            'SCALE_MOMENTUM_THRESHOLD': 1.1,
            'STEPS': [0, 5000, 8000],
            'STEP_SIZE': 30000,
            'TYPE': 'SGD',
            'WARM_UP_FACTOR': 0.3333333333333333,
            'WARM_UP_ITERS': 500,
            'WARM_UP_METHOD': 'linear',
            'WEIGHT_DECAY': 0.0001,
            'WEIGHT_DECAY_GN': 0.0},
 'TEST': {'BBOX_AUG': {'AREA_TH_HI': 32400,
                       'AREA_TH_LO': 2500,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'COORD_HEUR': 'UNION',
                       'ENABLED': False,
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False,
                       'SCORE_HEUR': 'UNION'},
          'BBOX_REG': True,
          'BBOX_VOTE': {'ENABLED': False,
                        'SCORING_METHOD': 'ID',
                        'SCORING_METHOD_BETA': 1.0,
                        'VOTE_TH': 0.8},
          'COMPETITION_MODE': True,
          'DATASETS': ('voc_2007_test',),
          'DETECTIONS_PER_IM': 100,
          'FORCE_JSON_DATASET_EVAL': False,
          'KPS_AUG': {'AREA_TH': 32400,
                      'ASPECT_RATIOS': (),
                      'ASPECT_RATIO_H_FLIP': False,
                      'ENABLED': False,
                      'HEUR': 'HM_AVG',
                      'H_FLIP': False,
                      'MAX_SIZE': 4000,
                      'SCALES': (),
                      'SCALE_H_FLIP': False,
                      'SCALE_SIZE_DEP': False},
          'MASK_AUG': {'AREA_TH': 32400,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'ENABLED': False,
                       'HEUR': 'SOFT_AVG',
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False},
          'MAX_SIZE': 1000,
          'NMS': 0.5,
          'PRECOMPUTED_PROPOSALS': False,
          'PROPOSAL_FILES': (),
          'PROPOSAL_LIMIT': 2000,
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 1000,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALE': 600,
          'SCORE_THRESH': 0.05,
          'SOFT_NMS': {'ENABLED': False, 'METHOD': 'linear', 'SIGMA': 0.5},
          'WEAK_SUPERVISE': False},
 'TRAIN': {'ASPECT_CROPPING': False,
           'ASPECT_GROUPING': True,
           'ASPECT_HI': 2,
           'ASPECT_LO': 0.5,
           'BATCH_SIZE_PER_IM': 512,
           'BBOX_INSIDE_WEIGHTS': (1.0, 1.0, 1.0, 1.0),
           'BBOX_NORMALIZE_MEANS': (0.0, 0.0, 0.0, 0.0),
           'BBOX_NORMALIZE_STDS': (0.1, 0.1, 0.2, 0.2),
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'COPY_CLS_TO_DET': False,
           'CROWD_FILTER_THRESH': 0.7,
           'DATASETS': (),
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'FREEZE_BOX_HEAD': True,
           'FREEZE_CONV_BODY': False,
           'FREEZE_RPN': False,
           'GT_MIN_AREA': -1,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_FILES': (),
           'RPN_BATCH_SIZE_PER_IM': 256,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 2000,
           'RPN_STRADDLE_THRESH': 0,
           'SCALES': (600,),
           'SNAPSHOT_ITERS': 2000,
           'SPATIAL_REG': False,
           'USE_FLIPPED': True,
           'WEAK_SUPERVISE': True,
           'WEAK_SUPERVISE_WITH_PRETRAIN': True},
 'VIS': False,
 'VIS_TH': 0.9}
loading annotations into memory...
Done (t=0.15s)
creating index...
index created!
INFO test_engine.py: 324: training mode? : False
INFO test_engine.py: 331: loading checkpoint Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step3999.pth
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1239/2476 0.600s + 0.001s (eta: 0:12:23)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1249/2476 0.514s + 0.004s (eta: 0:10:35)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1259/2476 0.511s + 0.003s (eta: 0:10:25)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1269/2476 0.508s + 0.003s (eta: 0:10:16)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1279/2476 0.504s + 0.002s (eta: 0:10:05)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1289/2476 0.509s + 0.003s (eta: 0:10:07)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1299/2476 0.509s + 0.002s (eta: 0:10:02)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1309/2476 0.514s + 0.002s (eta: 0:10:02)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1319/2476 0.513s + 0.002s (eta: 0:09:55)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1329/2476 0.513s + 0.002s (eta: 0:09:51)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1339/2476 0.513s + 0.002s (eta: 0:09:45)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1349/2476 0.513s + 0.002s (eta: 0:09:41)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1359/2476 0.509s + 0.002s (eta: 0:09:31)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1369/2476 0.507s + 0.003s (eta: 0:09:23)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1379/2476 0.506s + 0.002s (eta: 0:09:17)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1389/2476 0.504s + 0.002s (eta: 0:09:10)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1399/2476 0.504s + 0.002s (eta: 0:09:05)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1409/2476 0.504s + 0.002s (eta: 0:09:00)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1419/2476 0.504s + 0.002s (eta: 0:08:55)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1429/2476 0.503s + 0.002s (eta: 0:08:48)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1439/2476 0.501s + 0.002s (eta: 0:08:41)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1449/2476 0.502s + 0.002s (eta: 0:08:38)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1459/2476 0.501s + 0.002s (eta: 0:08:32)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1469/2476 0.501s + 0.002s (eta: 0:08:26)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1479/2476 0.500s + 0.002s (eta: 0:08:20)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1489/2476 0.500s + 0.002s (eta: 0:08:16)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1499/2476 0.500s + 0.002s (eta: 0:08:10)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1509/2476 0.500s + 0.002s (eta: 0:08:05)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1519/2476 0.498s + 0.002s (eta: 0:07:58)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1529/2476 0.499s + 0.002s (eta: 0:07:54)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1539/2476 0.499s + 0.002s (eta: 0:07:49)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1549/2476 0.498s + 0.002s (eta: 0:07:43)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1559/2476 0.498s + 0.002s (eta: 0:07:38)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1569/2476 0.498s + 0.002s (eta: 0:07:34)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1579/2476 0.498s + 0.002s (eta: 0:07:28)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1589/2476 0.499s + 0.002s (eta: 0:07:24)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1599/2476 0.499s + 0.002s (eta: 0:07:19)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1609/2476 0.498s + 0.002s (eta: 0:07:13)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1619/2476 0.498s + 0.002s (eta: 0:07:08)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1629/2476 0.498s + 0.002s (eta: 0:07:03)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1639/2476 0.498s + 0.002s (eta: 0:06:58)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1649/2476 0.497s + 0.002s (eta: 0:06:52)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1659/2476 0.495s + 0.002s (eta: 0:06:46)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1669/2476 0.495s + 0.002s (eta: 0:06:41)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1679/2476 0.495s + 0.002s (eta: 0:06:36)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1689/2476 0.495s + 0.002s (eta: 0:06:31)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1699/2476 0.495s + 0.002s (eta: 0:06:26)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1709/2476 0.496s + 0.002s (eta: 0:06:21)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1719/2476 0.496s + 0.002s (eta: 0:06:17)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1729/2476 0.496s + 0.002s (eta: 0:06:11)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1739/2476 0.495s + 0.002s (eta: 0:06:06)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1749/2476 0.495s + 0.002s (eta: 0:06:01)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1759/2476 0.495s + 0.002s (eta: 0:05:56)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1769/2476 0.495s + 0.002s (eta: 0:05:51)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1779/2476 0.495s + 0.002s (eta: 0:05:46)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1789/2476 0.495s + 0.002s (eta: 0:05:41)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1799/2476 0.494s + 0.002s (eta: 0:05:35)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1809/2476 0.495s + 0.002s (eta: 0:05:31)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1819/2476 0.495s + 0.002s (eta: 0:05:26)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1829/2476 0.495s + 0.002s (eta: 0:05:21)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1839/2476 0.495s + 0.002s (eta: 0:05:16)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1849/2476 0.495s + 0.002s (eta: 0:05:11)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1859/2476 0.494s + 0.002s (eta: 0:05:06)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1869/2476 0.494s + 0.002s (eta: 0:05:01)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1879/2476 0.495s + 0.002s (eta: 0:04:56)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1889/2476 0.495s + 0.002s (eta: 0:04:51)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1899/2476 0.494s + 0.002s (eta: 0:04:46)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1909/2476 0.494s + 0.002s (eta: 0:04:41)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1919/2476 0.493s + 0.002s (eta: 0:04:35)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1929/2476 0.493s + 0.002s (eta: 0:04:30)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1939/2476 0.494s + 0.002s (eta: 0:04:26)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1949/2476 0.493s + 0.002s (eta: 0:04:20)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1959/2476 0.494s + 0.002s (eta: 0:04:16)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1969/2476 0.494s + 0.002s (eta: 0:04:11)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1979/2476 0.494s + 0.002s (eta: 0:04:06)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1989/2476 0.494s + 0.002s (eta: 0:04:01)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1999/2476 0.494s + 0.002s (eta: 0:03:56)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2009/2476 0.493s + 0.002s (eta: 0:03:51)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2019/2476 0.489s + 0.002s (eta: 0:03:44)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2029/2476 0.489s + 0.002s (eta: 0:03:39)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2039/2476 0.489s + 0.002s (eta: 0:03:34)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2049/2476 0.489s + 0.002s (eta: 0:03:29)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2059/2476 0.489s + 0.002s (eta: 0:03:24)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2069/2476 0.489s + 0.002s (eta: 0:03:19)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2079/2476 0.489s + 0.002s (eta: 0:03:14)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2089/2476 0.490s + 0.002s (eta: 0:03:10)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2099/2476 0.490s + 0.002s (eta: 0:03:05)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2109/2476 0.491s + 0.002s (eta: 0:03:00)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2119/2476 0.491s + 0.002s (eta: 0:02:55)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2129/2476 0.490s + 0.002s (eta: 0:02:50)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2139/2476 0.490s + 0.002s (eta: 0:02:45)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2149/2476 0.489s + 0.002s (eta: 0:02:40)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2159/2476 0.489s + 0.002s (eta: 0:02:35)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2169/2476 0.489s + 0.002s (eta: 0:02:30)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2179/2476 0.489s + 0.002s (eta: 0:02:25)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2189/2476 0.489s + 0.002s (eta: 0:02:20)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2199/2476 0.489s + 0.002s (eta: 0:02:16)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2209/2476 0.489s + 0.002s (eta: 0:02:11)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2219/2476 0.489s + 0.002s (eta: 0:02:06)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2229/2476 0.488s + 0.002s (eta: 0:02:01)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2239/2476 0.488s + 0.002s (eta: 0:01:56)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2249/2476 0.488s + 0.002s (eta: 0:01:51)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2259/2476 0.488s + 0.002s (eta: 0:01:46)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2269/2476 0.488s + 0.002s (eta: 0:01:41)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2279/2476 0.488s + 0.002s (eta: 0:01:36)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2289/2476 0.488s + 0.002s (eta: 0:01:31)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2299/2476 0.487s + 0.002s (eta: 0:01:26)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2309/2476 0.488s + 0.002s (eta: 0:01:21)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2319/2476 0.487s + 0.002s (eta: 0:01:16)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2329/2476 0.487s + 0.002s (eta: 0:01:11)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2339/2476 0.487s + 0.002s (eta: 0:01:07)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2349/2476 0.487s + 0.002s (eta: 0:01:02)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2359/2476 0.487s + 0.002s (eta: 0:00:57)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2369/2476 0.488s + 0.002s (eta: 0:00:52)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2379/2476 0.488s + 0.002s (eta: 0:00:47)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2389/2476 0.488s + 0.002s (eta: 0:00:42)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2399/2476 0.488s + 0.002s (eta: 0:00:37)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2409/2476 0.488s + 0.002s (eta: 0:00:32)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2419/2476 0.488s + 0.002s (eta: 0:00:27)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2429/2476 0.488s + 0.002s (eta: 0:00:23)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2439/2476 0.487s + 0.002s (eta: 0:00:18)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2449/2476 0.488s + 0.002s (eta: 0:00:13)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2459/2476 0.488s + 0.002s (eta: 0:00:08)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2469/2476 0.488s + 0.002s (eta: 0:00:03)
INFO test_engine.py: 314: Wrote detections to: /home/ubuntu/Detectron.pytorch/Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_1238_2476.pkl
/home/ubuntu/anaconda3/envs/pytorch41/lib/python3.7/site-packages/torch/nn/functional.py:1890: UserWarning: nn.functional.upsample is deprecated. Use nn.functional.interpolate instead.
  warnings.warn("nn.functional.upsample is deprecated. Use nn.functional.interpolate instead.")

INFO subprocess.py: 129: # ---------------------------------------------------------------------------- #
INFO subprocess.py: 131: stdout of subprocess 2 with range [2477, 3714]
INFO subprocess.py: 133: # ---------------------------------------------------------------------------- #
INFO test_net.py:  72: Called with args:
INFO test_net.py:  73: Namespace(cfg_file='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_config.yaml', dataset=None, load_ckpt='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step3999.pth', load_detectron=None, multi_gpu_testing=False, num_classes=None, output_dir='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test', range=[2476, 3714], set_cfgs=['TEST.DATASETS', '("voc_2007_test",)'], vis=False)
INFO test_net.py: 130: Testing with config:
INFO test_net.py: 131: {'BBOX_XFORM_CLIP': 4.135166556742356,
 'CROP_RESIZE_WITH_MAX_POOL': True,
 'CUDA': False,
 'DATA_DIR': '/home/ubuntu/Detectron.pytorch/data',
 'DATA_LOADER': {'NUM_THREADS': 4},
 'DEBUG': False,
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXPECTED_RESULTS': [],
 'EXPECTED_RESULTS_ATOL': 0.005,
 'EXPECTED_RESULTS_EMAIL': '',
 'EXPECTED_RESULTS_RTOL': 0.1,
 'FAST_RCNN': {'BOX_OUT_STREAMS': 1,
               'CONV_HEAD_DIM': 256,
               'MLP_HEAD_DIM': 1024,
               'NUM_STACKED_CONVS': 4,
               'ROI_BOX_HEAD': 'fast_rcnn_heads.roi_2mlp_head',
               'ROI_XFORM_METHOD': 'RoIAlign',
               'ROI_XFORM_RESOLUTION': 7,
               'ROI_XFORM_SAMPLING_RATIO': 2},
 'FPN': {'COARSEST_STRIDE': 32,
         'DIM': 256,
         'EXTRA_CONV_LEVELS': False,
         'FPN_ON': True,
         'MULTILEVEL_ROIS': True,
         'MULTILEVEL_RPN': True,
         'ROI_CANONICAL_LEVEL': 4,
         'ROI_CANONICAL_SCALE': 224,
         'ROI_MAX_LEVEL': 5,
         'ROI_MIN_LEVEL': 2,
         'RPN_ANCHOR_START_SIZE': 32,
         'RPN_ASPECT_RATIOS': (0.5, 1, 2),
         'RPN_COLLECT_SCALE': 1,
         'RPN_MAX_LEVEL': 6,
         'RPN_MIN_LEVEL': 2,
         'USE_GN': False,
         'ZERO_INIT_LATERAL': False},
 'GROUP_NORM': {'DIM_PER_GP': -1, 'EPSILON': 1e-05, 'NUM_GROUPS': 32},
 'KRCNN': {'CONV_HEAD_DIM': 256,
           'CONV_HEAD_KERNEL': 3,
           'CONV_INIT': 'GaussianFill',
           'DECONV_DIM': 256,
           'DECONV_KERNEL': 4,
           'DILATION': 1,
           'HEATMAP_SIZE': -1,
           'INFERENCE_MIN_SIZE': 0,
           'KEYPOINT_CONFIDENCE': 'bbox',
           'LOSS_WEIGHT': 1.0,
           'MIN_KEYPOINT_COUNT_FOR_VALID_MINIBATCH': 20,
           'NMS_OKS': False,
           'NORMALIZE_BY_VISIBLE_KEYPOINTS': True,
           'NUM_KEYPOINTS': -1,
           'NUM_STACKED_CONVS': 8,
           'ROI_KEYPOINTS_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'UP_SCALE': -1,
           'USE_DECONV': False,
           'USE_DECONV_OUTPUT': False},
 'MATLAB': 'matlab',
 'MODEL': {'BBOX_REG_WEIGHTS': (10.0, 10.0, 5.0, 5.0),
           'CLS_AGNOSTIC_BBOX_REG': False,
           'CONV_BODY': 'FPN.fpn_ResNet101_conv5_body',
           'FASTER_RCNN': True,
           'KEYPOINTS_ON': False,
           'LOAD_IMAGENET_PRETRAINED_WEIGHTS': True,
           'MASK_ON': False,
           'NUM_CLASSES': 21,
           'RPN_ONLY': False,
           'SHARE_RES5': False,
           'TYPE': 'generalized_rcnn',
           'UNSUPERVISED_POSE': False},
 'MRCNN': {'CLS_SPECIFIC_MASK': True,
           'CONV_INIT': 'GaussianFill',
           'DILATION': 2,
           'DIM_REDUCED': 256,
           'MEMORY_EFFICIENT_LOSS': True,
           'RESOLUTION': 14,
           'ROI_MASK_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'THRESH_BINARIZE': 0.5,
           'UPSAMPLE_RATIO': 1,
           'USE_FC_OUTPUT': False,
           'WEIGHT_LOSS_MASK': 1.0},
 'NUM_GPUS': 8,
 'OUTPUT_DIR': 'Outputs',
 'PIXEL_MEANS': array([[[102.9801, 115.9465, 122.7717]]]),
 'POOLING_MODE': 'crop',
 'POOLING_SIZE': 7,
 'PYTORCH_VERSION_LESS_THAN_040': False,
 'RESNETS': {'FREEZE_AT': 2,
             'IMAGENET_PRETRAINED_WEIGHTS': 'data/pretrained_model/resnet101_caffe.pth',
             'NUM_GROUPS': 1,
             'RES5_DILATION': 1,
             'SHORTCUT_FUNC': 'basic_bn_shortcut',
             'STEM_FUNC': 'basic_bn_stem',
             'STRIDE_1X1': True,
             'TRANS_FUNC': 'bottleneck_transformation',
             'USE_GN': False,
             'WIDTH_PER_GROUP': 64},
 'RETINANET': {'ANCHOR_SCALE': 4,
               'ASPECT_RATIOS': (0.5, 1.0, 2.0),
               'BBOX_REG_BETA': 0.11,
               'BBOX_REG_WEIGHT': 1.0,
               'CLASS_SPECIFIC_BBOX': False,
               'INFERENCE_TH': 0.05,
               'LOSS_ALPHA': 0.25,
               'LOSS_GAMMA': 2.0,
               'NEGATIVE_OVERLAP': 0.4,
               'NUM_CONVS': 4,
               'POSITIVE_OVERLAP': 0.5,
               'PRE_NMS_TOP_N': 1000,
               'PRIOR_PROB': 0.01,
               'RETINANET_ON': False,
               'SCALES_PER_OCTAVE': 3,
               'SHARE_CLS_BBOX_TOWER': False,
               'SOFTMAX': False},
 'RFCN': {'PS_GRID_SIZE': 3},
 'RNG_SEED': 3,
 'ROOT_DIR': '/home/ubuntu/Detectron.pytorch',
 'RPN': {'ASPECT_RATIOS': (0.5, 1, 2),
         'CLS_ACTIVATION': 'sigmoid',
         'OUT_DIM': 512,
         'OUT_DIM_AS_IN_DIM': True,
         'RPN_ON': True,
         'SIZES': (64, 128, 256, 512),
         'STRIDE': 16},
 'SOLVER': {'BASE_LR': 2e-05,
            'BIAS_DOUBLE_LR': True,
            'BIAS_WEIGHT_DECAY': False,
            'GAMMA': 0.1,
            'LOG_LR_CHANGE_THRESHOLD': 1.1,
            'LRS': [],
            'LR_POLICY': 'steps_with_decay',
            'MAX_ITER': 10000,
            'MOMENTUM': 0.9,
            'SCALE_MOMENTUM': True,
            'SCALE_MOMENTUM_THRESHOLD': 1.1,
            'STEPS': [0, 5000, 8000],
            'STEP_SIZE': 30000,
            'TYPE': 'SGD',
            'WARM_UP_FACTOR': 0.3333333333333333,
            'WARM_UP_ITERS': 500,
            'WARM_UP_METHOD': 'linear',
            'WEIGHT_DECAY': 0.0001,
            'WEIGHT_DECAY_GN': 0.0},
 'TEST': {'BBOX_AUG': {'AREA_TH_HI': 32400,
                       'AREA_TH_LO': 2500,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'COORD_HEUR': 'UNION',
                       'ENABLED': False,
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False,
                       'SCORE_HEUR': 'UNION'},
          'BBOX_REG': True,
          'BBOX_VOTE': {'ENABLED': False,
                        'SCORING_METHOD': 'ID',
                        'SCORING_METHOD_BETA': 1.0,
                        'VOTE_TH': 0.8},
          'COMPETITION_MODE': True,
          'DATASETS': ('voc_2007_test',),
          'DETECTIONS_PER_IM': 100,
          'FORCE_JSON_DATASET_EVAL': False,
          'KPS_AUG': {'AREA_TH': 32400,
                      'ASPECT_RATIOS': (),
                      'ASPECT_RATIO_H_FLIP': False,
                      'ENABLED': False,
                      'HEUR': 'HM_AVG',
                      'H_FLIP': False,
                      'MAX_SIZE': 4000,
                      'SCALES': (),
                      'SCALE_H_FLIP': False,
                      'SCALE_SIZE_DEP': False},
          'MASK_AUG': {'AREA_TH': 32400,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'ENABLED': False,
                       'HEUR': 'SOFT_AVG',
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False},
          'MAX_SIZE': 1000,
          'NMS': 0.5,
          'PRECOMPUTED_PROPOSALS': False,
          'PROPOSAL_FILES': (),
          'PROPOSAL_LIMIT': 2000,
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 1000,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALE': 600,
          'SCORE_THRESH': 0.05,
          'SOFT_NMS': {'ENABLED': False, 'METHOD': 'linear', 'SIGMA': 0.5},
          'WEAK_SUPERVISE': False},
 'TRAIN': {'ASPECT_CROPPING': False,
           'ASPECT_GROUPING': True,
           'ASPECT_HI': 2,
           'ASPECT_LO': 0.5,
           'BATCH_SIZE_PER_IM': 512,
           'BBOX_INSIDE_WEIGHTS': (1.0, 1.0, 1.0, 1.0),
           'BBOX_NORMALIZE_MEANS': (0.0, 0.0, 0.0, 0.0),
           'BBOX_NORMALIZE_STDS': (0.1, 0.1, 0.2, 0.2),
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'COPY_CLS_TO_DET': False,
           'CROWD_FILTER_THRESH': 0.7,
           'DATASETS': (),
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'FREEZE_BOX_HEAD': True,
           'FREEZE_CONV_BODY': False,
           'FREEZE_RPN': False,
           'GT_MIN_AREA': -1,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_FILES': (),
           'RPN_BATCH_SIZE_PER_IM': 256,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 2000,
           'RPN_STRADDLE_THRESH': 0,
           'SCALES': (600,),
           'SNAPSHOT_ITERS': 2000,
           'SPATIAL_REG': False,
           'USE_FLIPPED': True,
           'WEAK_SUPERVISE': True,
           'WEAK_SUPERVISE_WITH_PRETRAIN': True},
 'VIS': False,
 'VIS_TH': 0.9}
loading annotations into memory...
Done (t=0.17s)
creating index...
index created!
INFO test_engine.py: 324: training mode? : False
INFO test_engine.py: 331: loading checkpoint Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step3999.pth
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2477/3714 0.662s + 0.001s (eta: 0:13:40)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2487/3714 0.537s + 0.001s (eta: 0:11:00)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2497/3714 0.512s + 0.001s (eta: 0:10:24)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2507/3714 0.515s + 0.001s (eta: 0:10:23)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2517/3714 0.507s + 0.002s (eta: 0:10:08)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2527/3714 0.499s + 0.002s (eta: 0:09:54)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2537/3714 0.499s + 0.002s (eta: 0:09:48)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2547/3714 0.494s + 0.002s (eta: 0:09:38)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2557/3714 0.498s + 0.002s (eta: 0:09:37)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2567/3714 0.498s + 0.002s (eta: 0:09:32)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2577/3714 0.491s + 0.002s (eta: 0:09:20)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2587/3714 0.490s + 0.002s (eta: 0:09:14)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2597/3714 0.492s + 0.002s (eta: 0:09:11)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2607/3714 0.492s + 0.002s (eta: 0:09:06)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2617/3714 0.495s + 0.002s (eta: 0:09:04)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2627/3714 0.498s + 0.002s (eta: 0:09:03)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2637/3714 0.494s + 0.002s (eta: 0:08:54)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2647/3714 0.493s + 0.002s (eta: 0:08:48)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2657/3714 0.494s + 0.002s (eta: 0:08:44)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2667/3714 0.497s + 0.002s (eta: 0:08:42)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2677/3714 0.499s + 0.002s (eta: 0:08:39)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2687/3714 0.500s + 0.002s (eta: 0:08:35)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2697/3714 0.500s + 0.002s (eta: 0:08:30)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2707/3714 0.501s + 0.002s (eta: 0:08:26)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2717/3714 0.502s + 0.002s (eta: 0:08:22)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2727/3714 0.501s + 0.002s (eta: 0:08:16)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2737/3714 0.501s + 0.002s (eta: 0:08:11)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2747/3714 0.501s + 0.002s (eta: 0:08:05)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2757/3714 0.500s + 0.002s (eta: 0:08:00)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2767/3714 0.500s + 0.002s (eta: 0:07:54)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2777/3714 0.500s + 0.002s (eta: 0:07:49)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2787/3714 0.500s + 0.002s (eta: 0:07:44)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2797/3714 0.499s + 0.002s (eta: 0:07:39)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2807/3714 0.497s + 0.002s (eta: 0:07:32)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2817/3714 0.498s + 0.002s (eta: 0:07:28)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2827/3714 0.499s + 0.002s (eta: 0:07:23)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2837/3714 0.498s + 0.002s (eta: 0:07:18)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2847/3714 0.496s + 0.002s (eta: 0:07:11)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2857/3714 0.497s + 0.002s (eta: 0:07:07)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2867/3714 0.498s + 0.002s (eta: 0:07:03)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2877/3714 0.498s + 0.002s (eta: 0:06:58)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2887/3714 0.498s + 0.002s (eta: 0:06:53)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2897/3714 0.498s + 0.002s (eta: 0:06:48)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2907/3714 0.499s + 0.002s (eta: 0:06:44)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2917/3714 0.499s + 0.002s (eta: 0:06:39)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2927/3714 0.498s + 0.002s (eta: 0:06:33)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2937/3714 0.498s + 0.002s (eta: 0:06:28)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2947/3714 0.498s + 0.002s (eta: 0:06:23)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2957/3714 0.498s + 0.002s (eta: 0:06:18)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2967/3714 0.497s + 0.002s (eta: 0:06:12)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2977/3714 0.497s + 0.002s (eta: 0:06:08)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2987/3714 0.497s + 0.002s (eta: 0:06:02)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2997/3714 0.497s + 0.002s (eta: 0:05:57)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3007/3714 0.496s + 0.002s (eta: 0:05:52)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3017/3714 0.496s + 0.002s (eta: 0:05:47)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3027/3714 0.496s + 0.002s (eta: 0:05:41)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3037/3714 0.495s + 0.002s (eta: 0:05:36)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3047/3714 0.496s + 0.002s (eta: 0:05:31)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3057/3714 0.495s + 0.002s (eta: 0:05:26)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3067/3714 0.495s + 0.002s (eta: 0:05:21)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3077/3714 0.495s + 0.002s (eta: 0:05:16)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3087/3714 0.495s + 0.002s (eta: 0:05:11)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3097/3714 0.494s + 0.002s (eta: 0:05:05)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3107/3714 0.494s + 0.002s (eta: 0:05:00)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3117/3714 0.494s + 0.002s (eta: 0:04:55)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3127/3714 0.493s + 0.002s (eta: 0:04:50)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3137/3714 0.494s + 0.002s (eta: 0:04:45)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3147/3714 0.494s + 0.002s (eta: 0:04:40)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3157/3714 0.494s + 0.002s (eta: 0:04:36)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3167/3714 0.494s + 0.002s (eta: 0:04:30)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3177/3714 0.493s + 0.002s (eta: 0:04:25)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3187/3714 0.493s + 0.002s (eta: 0:04:20)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3197/3714 0.494s + 0.002s (eta: 0:04:16)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3207/3714 0.493s + 0.002s (eta: 0:04:11)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3217/3714 0.493s + 0.002s (eta: 0:04:05)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3227/3714 0.493s + 0.002s (eta: 0:04:00)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3237/3714 0.493s + 0.002s (eta: 0:03:55)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3247/3714 0.492s + 0.002s (eta: 0:03:50)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3257/3714 0.484s + 0.002s (eta: 0:03:42)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3267/3714 0.484s + 0.002s (eta: 0:03:37)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3277/3714 0.484s + 0.002s (eta: 0:03:32)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3287/3714 0.484s + 0.002s (eta: 0:03:27)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3297/3714 0.484s + 0.002s (eta: 0:03:22)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3307/3714 0.484s + 0.002s (eta: 0:03:17)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3317/3714 0.484s + 0.002s (eta: 0:03:12)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3327/3714 0.484s + 0.002s (eta: 0:03:07)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3337/3714 0.484s + 0.002s (eta: 0:03:03)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3347/3714 0.484s + 0.002s (eta: 0:02:58)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3357/3714 0.485s + 0.002s (eta: 0:02:53)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3367/3714 0.485s + 0.002s (eta: 0:02:48)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3377/3714 0.484s + 0.002s (eta: 0:02:43)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3387/3714 0.484s + 0.002s (eta: 0:02:39)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3397/3714 0.485s + 0.002s (eta: 0:02:34)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3407/3714 0.485s + 0.002s (eta: 0:02:29)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3417/3714 0.485s + 0.002s (eta: 0:02:24)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3427/3714 0.485s + 0.002s (eta: 0:02:19)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3437/3714 0.485s + 0.002s (eta: 0:02:14)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3447/3714 0.485s + 0.002s (eta: 0:02:10)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3457/3714 0.486s + 0.002s (eta: 0:02:05)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3467/3714 0.486s + 0.002s (eta: 0:02:00)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3477/3714 0.486s + 0.002s (eta: 0:01:55)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3487/3714 0.487s + 0.002s (eta: 0:01:50)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3497/3714 0.487s + 0.002s (eta: 0:01:46)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3507/3714 0.487s + 0.002s (eta: 0:01:41)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3517/3714 0.487s + 0.002s (eta: 0:01:36)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3527/3714 0.487s + 0.002s (eta: 0:01:31)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3537/3714 0.487s + 0.002s (eta: 0:01:26)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3547/3714 0.488s + 0.002s (eta: 0:01:21)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3557/3714 0.487s + 0.002s (eta: 0:01:16)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3567/3714 0.487s + 0.002s (eta: 0:01:11)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3577/3714 0.487s + 0.002s (eta: 0:01:07)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3587/3714 0.487s + 0.002s (eta: 0:01:02)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3597/3714 0.488s + 0.002s (eta: 0:00:57)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3607/3714 0.488s + 0.002s (eta: 0:00:52)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3617/3714 0.488s + 0.002s (eta: 0:00:47)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3627/3714 0.488s + 0.002s (eta: 0:00:42)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3637/3714 0.488s + 0.002s (eta: 0:00:37)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3647/3714 0.488s + 0.002s (eta: 0:00:32)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3657/3714 0.488s + 0.002s (eta: 0:00:27)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3667/3714 0.488s + 0.002s (eta: 0:00:23)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3677/3714 0.488s + 0.002s (eta: 0:00:18)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3687/3714 0.488s + 0.002s (eta: 0:00:13)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3697/3714 0.487s + 0.002s (eta: 0:00:08)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3707/3714 0.487s + 0.002s (eta: 0:00:03)
INFO test_engine.py: 314: Wrote detections to: /home/ubuntu/Detectron.pytorch/Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_2476_3714.pkl
/home/ubuntu/anaconda3/envs/pytorch41/lib/python3.7/site-packages/torch/nn/functional.py:1890: UserWarning: nn.functional.upsample is deprecated. Use nn.functional.interpolate instead.
  warnings.warn("nn.functional.upsample is deprecated. Use nn.functional.interpolate instead.")

INFO subprocess.py: 129: # ---------------------------------------------------------------------------- #
INFO subprocess.py: 131: stdout of subprocess 3 with range [3715, 4952]
INFO subprocess.py: 133: # ---------------------------------------------------------------------------- #
INFO test_net.py:  72: Called with args:
INFO test_net.py:  73: Namespace(cfg_file='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_config.yaml', dataset=None, load_ckpt='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step3999.pth', load_detectron=None, multi_gpu_testing=False, num_classes=None, output_dir='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test', range=[3714, 4952], set_cfgs=['TEST.DATASETS', '("voc_2007_test",)'], vis=False)
INFO test_net.py: 130: Testing with config:
INFO test_net.py: 131: {'BBOX_XFORM_CLIP': 4.135166556742356,
 'CROP_RESIZE_WITH_MAX_POOL': True,
 'CUDA': False,
 'DATA_DIR': '/home/ubuntu/Detectron.pytorch/data',
 'DATA_LOADER': {'NUM_THREADS': 4},
 'DEBUG': False,
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXPECTED_RESULTS': [],
 'EXPECTED_RESULTS_ATOL': 0.005,
 'EXPECTED_RESULTS_EMAIL': '',
 'EXPECTED_RESULTS_RTOL': 0.1,
 'FAST_RCNN': {'BOX_OUT_STREAMS': 1,
               'CONV_HEAD_DIM': 256,
               'MLP_HEAD_DIM': 1024,
               'NUM_STACKED_CONVS': 4,
               'ROI_BOX_HEAD': 'fast_rcnn_heads.roi_2mlp_head',
               'ROI_XFORM_METHOD': 'RoIAlign',
               'ROI_XFORM_RESOLUTION': 7,
               'ROI_XFORM_SAMPLING_RATIO': 2},
 'FPN': {'COARSEST_STRIDE': 32,
         'DIM': 256,
         'EXTRA_CONV_LEVELS': False,
         'FPN_ON': True,
         'MULTILEVEL_ROIS': True,
         'MULTILEVEL_RPN': True,
         'ROI_CANONICAL_LEVEL': 4,
         'ROI_CANONICAL_SCALE': 224,
         'ROI_MAX_LEVEL': 5,
         'ROI_MIN_LEVEL': 2,
         'RPN_ANCHOR_START_SIZE': 32,
         'RPN_ASPECT_RATIOS': (0.5, 1, 2),
         'RPN_COLLECT_SCALE': 1,
         'RPN_MAX_LEVEL': 6,
         'RPN_MIN_LEVEL': 2,
         'USE_GN': False,
         'ZERO_INIT_LATERAL': False},
 'GROUP_NORM': {'DIM_PER_GP': -1, 'EPSILON': 1e-05, 'NUM_GROUPS': 32},
 'KRCNN': {'CONV_HEAD_DIM': 256,
           'CONV_HEAD_KERNEL': 3,
           'CONV_INIT': 'GaussianFill',
           'DECONV_DIM': 256,
           'DECONV_KERNEL': 4,
           'DILATION': 1,
           'HEATMAP_SIZE': -1,
           'INFERENCE_MIN_SIZE': 0,
           'KEYPOINT_CONFIDENCE': 'bbox',
           'LOSS_WEIGHT': 1.0,
           'MIN_KEYPOINT_COUNT_FOR_VALID_MINIBATCH': 20,
           'NMS_OKS': False,
           'NORMALIZE_BY_VISIBLE_KEYPOINTS': True,
           'NUM_KEYPOINTS': -1,
           'NUM_STACKED_CONVS': 8,
           'ROI_KEYPOINTS_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'UP_SCALE': -1,
           'USE_DECONV': False,
           'USE_DECONV_OUTPUT': False},
 'MATLAB': 'matlab',
 'MODEL': {'BBOX_REG_WEIGHTS': (10.0, 10.0, 5.0, 5.0),
           'CLS_AGNOSTIC_BBOX_REG': False,
           'CONV_BODY': 'FPN.fpn_ResNet101_conv5_body',
           'FASTER_RCNN': True,
           'KEYPOINTS_ON': False,
           'LOAD_IMAGENET_PRETRAINED_WEIGHTS': True,
           'MASK_ON': False,
           'NUM_CLASSES': 21,
           'RPN_ONLY': False,
           'SHARE_RES5': False,
           'TYPE': 'generalized_rcnn',
           'UNSUPERVISED_POSE': False},
 'MRCNN': {'CLS_SPECIFIC_MASK': True,
           'CONV_INIT': 'GaussianFill',
           'DILATION': 2,
           'DIM_REDUCED': 256,
           'MEMORY_EFFICIENT_LOSS': True,
           'RESOLUTION': 14,
           'ROI_MASK_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'THRESH_BINARIZE': 0.5,
           'UPSAMPLE_RATIO': 1,
           'USE_FC_OUTPUT': False,
           'WEIGHT_LOSS_MASK': 1.0},
 'NUM_GPUS': 8,
 'OUTPUT_DIR': 'Outputs',
 'PIXEL_MEANS': array([[[102.9801, 115.9465, 122.7717]]]),
 'POOLING_MODE': 'crop',
 'POOLING_SIZE': 7,
 'PYTORCH_VERSION_LESS_THAN_040': False,
 'RESNETS': {'FREEZE_AT': 2,
             'IMAGENET_PRETRAINED_WEIGHTS': 'data/pretrained_model/resnet101_caffe.pth',
             'NUM_GROUPS': 1,
             'RES5_DILATION': 1,
             'SHORTCUT_FUNC': 'basic_bn_shortcut',
             'STEM_FUNC': 'basic_bn_stem',
             'STRIDE_1X1': True,
             'TRANS_FUNC': 'bottleneck_transformation',
             'USE_GN': False,
             'WIDTH_PER_GROUP': 64},
 'RETINANET': {'ANCHOR_SCALE': 4,
               'ASPECT_RATIOS': (0.5, 1.0, 2.0),
               'BBOX_REG_BETA': 0.11,
               'BBOX_REG_WEIGHT': 1.0,
               'CLASS_SPECIFIC_BBOX': False,
               'INFERENCE_TH': 0.05,
               'LOSS_ALPHA': 0.25,
               'LOSS_GAMMA': 2.0,
               'NEGATIVE_OVERLAP': 0.4,
               'NUM_CONVS': 4,
               'POSITIVE_OVERLAP': 0.5,
               'PRE_NMS_TOP_N': 1000,
               'PRIOR_PROB': 0.01,
               'RETINANET_ON': False,
               'SCALES_PER_OCTAVE': 3,
               'SHARE_CLS_BBOX_TOWER': False,
               'SOFTMAX': False},
 'RFCN': {'PS_GRID_SIZE': 3},
 'RNG_SEED': 3,
 'ROOT_DIR': '/home/ubuntu/Detectron.pytorch',
 'RPN': {'ASPECT_RATIOS': (0.5, 1, 2),
         'CLS_ACTIVATION': 'sigmoid',
         'OUT_DIM': 512,
         'OUT_DIM_AS_IN_DIM': True,
         'RPN_ON': True,
         'SIZES': (64, 128, 256, 512),
         'STRIDE': 16},
 'SOLVER': {'BASE_LR': 2e-05,
            'BIAS_DOUBLE_LR': True,
            'BIAS_WEIGHT_DECAY': False,
            'GAMMA': 0.1,
            'LOG_LR_CHANGE_THRESHOLD': 1.1,
            'LRS': [],
            'LR_POLICY': 'steps_with_decay',
            'MAX_ITER': 10000,
            'MOMENTUM': 0.9,
            'SCALE_MOMENTUM': True,
            'SCALE_MOMENTUM_THRESHOLD': 1.1,
            'STEPS': [0, 5000, 8000],
            'STEP_SIZE': 30000,
            'TYPE': 'SGD',
            'WARM_UP_FACTOR': 0.3333333333333333,
            'WARM_UP_ITERS': 500,
            'WARM_UP_METHOD': 'linear',
            'WEIGHT_DECAY': 0.0001,
            'WEIGHT_DECAY_GN': 0.0},
 'TEST': {'BBOX_AUG': {'AREA_TH_HI': 32400,
                       'AREA_TH_LO': 2500,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'COORD_HEUR': 'UNION',
                       'ENABLED': False,
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False,
                       'SCORE_HEUR': 'UNION'},
          'BBOX_REG': True,
          'BBOX_VOTE': {'ENABLED': False,
                        'SCORING_METHOD': 'ID',
                        'SCORING_METHOD_BETA': 1.0,
                        'VOTE_TH': 0.8},
          'COMPETITION_MODE': True,
          'DATASETS': ('voc_2007_test',),
          'DETECTIONS_PER_IM': 100,
          'FORCE_JSON_DATASET_EVAL': False,
          'KPS_AUG': {'AREA_TH': 32400,
                      'ASPECT_RATIOS': (),
                      'ASPECT_RATIO_H_FLIP': False,
                      'ENABLED': False,
                      'HEUR': 'HM_AVG',
                      'H_FLIP': False,
                      'MAX_SIZE': 4000,
                      'SCALES': (),
                      'SCALE_H_FLIP': False,
                      'SCALE_SIZE_DEP': False},
          'MASK_AUG': {'AREA_TH': 32400,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'ENABLED': False,
                       'HEUR': 'SOFT_AVG',
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False},
          'MAX_SIZE': 1000,
          'NMS': 0.5,
          'PRECOMPUTED_PROPOSALS': False,
          'PROPOSAL_FILES': (),
          'PROPOSAL_LIMIT': 2000,
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 1000,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALE': 600,
          'SCORE_THRESH': 0.05,
          'SOFT_NMS': {'ENABLED': False, 'METHOD': 'linear', 'SIGMA': 0.5},
          'WEAK_SUPERVISE': False},
 'TRAIN': {'ASPECT_CROPPING': False,
           'ASPECT_GROUPING': True,
           'ASPECT_HI': 2,
           'ASPECT_LO': 0.5,
           'BATCH_SIZE_PER_IM': 512,
           'BBOX_INSIDE_WEIGHTS': (1.0, 1.0, 1.0, 1.0),
           'BBOX_NORMALIZE_MEANS': (0.0, 0.0, 0.0, 0.0),
           'BBOX_NORMALIZE_STDS': (0.1, 0.1, 0.2, 0.2),
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'COPY_CLS_TO_DET': False,
           'CROWD_FILTER_THRESH': 0.7,
           'DATASETS': (),
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'FREEZE_BOX_HEAD': True,
           'FREEZE_CONV_BODY': False,
           'FREEZE_RPN': False,
           'GT_MIN_AREA': -1,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_FILES': (),
           'RPN_BATCH_SIZE_PER_IM': 256,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 2000,
           'RPN_STRADDLE_THRESH': 0,
           'SCALES': (600,),
           'SNAPSHOT_ITERS': 2000,
           'SPATIAL_REG': False,
           'USE_FLIPPED': True,
           'WEAK_SUPERVISE': True,
           'WEAK_SUPERVISE_WITH_PRETRAIN': True},
 'VIS': False,
 'VIS_TH': 0.9}
loading annotations into memory...
Done (t=0.14s)
creating index...
index created!
INFO test_engine.py: 324: training mode? : False
INFO test_engine.py: 331: loading checkpoint Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step3999.pth
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3715/4952 0.722s + 0.001s (eta: 0:14:54)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3725/4952 0.514s + 0.001s (eta: 0:10:32)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3735/4952 0.503s + 0.002s (eta: 0:10:14)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3745/4952 0.514s + 0.002s (eta: 0:10:22)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3755/4952 0.517s + 0.002s (eta: 0:10:21)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3765/4952 0.517s + 0.002s (eta: 0:10:16)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3775/4952 0.511s + 0.002s (eta: 0:10:04)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3785/4952 0.509s + 0.002s (eta: 0:09:56)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3795/4952 0.505s + 0.002s (eta: 0:09:46)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3805/4952 0.510s + 0.002s (eta: 0:09:47)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3815/4952 0.512s + 0.002s (eta: 0:09:44)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3825/4952 0.513s + 0.002s (eta: 0:09:40)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3835/4952 0.513s + 0.002s (eta: 0:09:35)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3845/4952 0.512s + 0.002s (eta: 0:09:29)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3855/4952 0.510s + 0.002s (eta: 0:09:21)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3865/4952 0.509s + 0.002s (eta: 0:09:15)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3875/4952 0.511s + 0.002s (eta: 0:09:12)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3885/4952 0.511s + 0.002s (eta: 0:09:07)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3895/4952 0.511s + 0.002s (eta: 0:09:02)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3905/4952 0.511s + 0.002s (eta: 0:08:57)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3915/4952 0.513s + 0.002s (eta: 0:08:53)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3925/4952 0.511s + 0.002s (eta: 0:08:46)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3935/4952 0.510s + 0.002s (eta: 0:08:40)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3945/4952 0.510s + 0.002s (eta: 0:08:35)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3955/4952 0.510s + 0.002s (eta: 0:08:30)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3965/4952 0.508s + 0.002s (eta: 0:08:23)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3975/4952 0.511s + 0.002s (eta: 0:08:20)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3985/4952 0.512s + 0.002s (eta: 0:08:16)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3995/4952 0.512s + 0.002s (eta: 0:08:11)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4005/4952 0.510s + 0.002s (eta: 0:08:05)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4015/4952 0.509s + 0.002s (eta: 0:07:59)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4025/4952 0.508s + 0.002s (eta: 0:07:52)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4035/4952 0.509s + 0.002s (eta: 0:07:48)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4045/4952 0.508s + 0.002s (eta: 0:07:42)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4055/4952 0.506s + 0.002s (eta: 0:07:35)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4065/4952 0.507s + 0.002s (eta: 0:07:31)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4075/4952 0.507s + 0.002s (eta: 0:07:26)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4085/4952 0.507s + 0.002s (eta: 0:07:21)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4095/4952 0.507s + 0.002s (eta: 0:07:15)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4105/4952 0.507s + 0.002s (eta: 0:07:11)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4115/4952 0.507s + 0.002s (eta: 0:07:05)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4125/4952 0.506s + 0.002s (eta: 0:06:59)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4135/4952 0.506s + 0.002s (eta: 0:06:54)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4145/4952 0.505s + 0.002s (eta: 0:06:49)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4155/4952 0.505s + 0.002s (eta: 0:06:44)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4165/4952 0.505s + 0.002s (eta: 0:06:38)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4175/4952 0.505s + 0.002s (eta: 0:06:33)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4185/4952 0.505s + 0.002s (eta: 0:06:28)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4195/4952 0.505s + 0.002s (eta: 0:06:23)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4205/4952 0.504s + 0.002s (eta: 0:06:18)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4215/4952 0.504s + 0.002s (eta: 0:06:12)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4225/4952 0.505s + 0.002s (eta: 0:06:08)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4235/4952 0.504s + 0.002s (eta: 0:06:02)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4245/4952 0.504s + 0.002s (eta: 0:05:57)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4255/4952 0.503s + 0.002s (eta: 0:05:52)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4265/4952 0.504s + 0.002s (eta: 0:05:47)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4275/4952 0.504s + 0.002s (eta: 0:05:42)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4285/4952 0.505s + 0.002s (eta: 0:05:37)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4295/4952 0.504s + 0.002s (eta: 0:05:32)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4305/4952 0.505s + 0.002s (eta: 0:05:27)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4315/4952 0.505s + 0.002s (eta: 0:05:22)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4325/4952 0.505s + 0.002s (eta: 0:05:17)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4335/4952 0.504s + 0.002s (eta: 0:05:12)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4345/4952 0.505s + 0.002s (eta: 0:05:07)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4355/4952 0.504s + 0.002s (eta: 0:05:02)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4365/4952 0.505s + 0.002s (eta: 0:04:57)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4375/4952 0.505s + 0.002s (eta: 0:04:52)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4385/4952 0.504s + 0.002s (eta: 0:04:46)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4395/4952 0.503s + 0.002s (eta: 0:04:41)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4405/4952 0.503s + 0.002s (eta: 0:04:36)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4415/4952 0.503s + 0.002s (eta: 0:04:31)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4425/4952 0.503s + 0.002s (eta: 0:04:26)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4435/4952 0.503s + 0.002s (eta: 0:04:21)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4445/4952 0.504s + 0.002s (eta: 0:04:16)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4455/4952 0.504s + 0.002s (eta: 0:04:11)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4465/4952 0.503s + 0.002s (eta: 0:04:06)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4475/4952 0.489s + 0.002s (eta: 0:03:54)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4485/4952 0.490s + 0.002s (eta: 0:03:49)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4495/4952 0.489s + 0.002s (eta: 0:03:44)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4505/4952 0.490s + 0.002s (eta: 0:03:39)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4515/4952 0.490s + 0.002s (eta: 0:03:34)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4525/4952 0.490s + 0.002s (eta: 0:03:29)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4535/4952 0.489s + 0.002s (eta: 0:03:24)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4545/4952 0.489s + 0.002s (eta: 0:03:19)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4555/4952 0.488s + 0.002s (eta: 0:03:14)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4565/4952 0.489s + 0.002s (eta: 0:03:09)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4575/4952 0.489s + 0.002s (eta: 0:03:04)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4585/4952 0.488s + 0.002s (eta: 0:02:59)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4595/4952 0.488s + 0.002s (eta: 0:02:55)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4605/4952 0.489s + 0.002s (eta: 0:02:50)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4615/4952 0.488s + 0.002s (eta: 0:02:45)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4625/4952 0.488s + 0.002s (eta: 0:02:40)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4635/4952 0.488s + 0.002s (eta: 0:02:35)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4645/4952 0.488s + 0.002s (eta: 0:02:30)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4655/4952 0.489s + 0.002s (eta: 0:02:25)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4665/4952 0.489s + 0.002s (eta: 0:02:20)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4675/4952 0.489s + 0.002s (eta: 0:02:16)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4685/4952 0.489s + 0.002s (eta: 0:02:11)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4695/4952 0.489s + 0.002s (eta: 0:02:06)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4705/4952 0.489s + 0.002s (eta: 0:02:01)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4715/4952 0.488s + 0.002s (eta: 0:01:56)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4725/4952 0.488s + 0.002s (eta: 0:01:51)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4735/4952 0.488s + 0.002s (eta: 0:01:46)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4745/4952 0.488s + 0.002s (eta: 0:01:41)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4755/4952 0.488s + 0.002s (eta: 0:01:36)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4765/4952 0.489s + 0.002s (eta: 0:01:31)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4775/4952 0.488s + 0.002s (eta: 0:01:26)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4785/4952 0.488s + 0.002s (eta: 0:01:21)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4795/4952 0.488s + 0.002s (eta: 0:01:17)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4805/4952 0.489s + 0.002s (eta: 0:01:12)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4815/4952 0.489s + 0.002s (eta: 0:01:07)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4825/4952 0.489s + 0.002s (eta: 0:01:02)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4835/4952 0.489s + 0.002s (eta: 0:00:57)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4845/4952 0.489s + 0.002s (eta: 0:00:52)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4855/4952 0.489s + 0.002s (eta: 0:00:47)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4865/4952 0.488s + 0.002s (eta: 0:00:42)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4875/4952 0.489s + 0.002s (eta: 0:00:37)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4885/4952 0.489s + 0.002s (eta: 0:00:32)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4895/4952 0.489s + 0.002s (eta: 0:00:28)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4905/4952 0.489s + 0.002s (eta: 0:00:23)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4915/4952 0.490s + 0.002s (eta: 0:00:18)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4925/4952 0.490s + 0.002s (eta: 0:00:13)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4935/4952 0.490s + 0.002s (eta: 0:00:08)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4945/4952 0.490s + 0.002s (eta: 0:00:03)
INFO test_engine.py: 314: Wrote detections to: /home/ubuntu/Detectron.pytorch/Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_3714_4952.pkl
/home/ubuntu/anaconda3/envs/pytorch41/lib/python3.7/site-packages/torch/nn/functional.py:1890: UserWarning: nn.functional.upsample is deprecated. Use nn.functional.interpolate instead.
  warnings.warn("nn.functional.upsample is deprecated. Use nn.functional.interpolate instead.")

INFO test_engine.py: 211: Wrote detections to: /home/ubuntu/Detectron.pytorch/Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detections.pkl
INFO test_engine.py: 161: Total inference time: 636.288s
INFO task_evaluation.py:  77: Evaluating detections
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: aeroplane
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: bicycle
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: bird
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: boat
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: bottle
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: bus
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: car
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: cat
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: chair
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: cow
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: diningtable
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: dog
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: horse
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: motorbike
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: person
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: pottedplant
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: sheep
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: sofa
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: train
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: tvmonitor
INFO voc_dataset_evaluator.py: 115: VOC07 metric? Yes
INFO voc_eval.py: 171: [1075 1112  643 ...  548   14  192]
INFO voc_dataset_evaluator.py: 127: AP for aeroplane = 0.7740
INFO voc_eval.py: 171: [268 173  34 ... 466 168 200]
INFO voc_dataset_evaluator.py: 127: AP for bicycle = 0.7898
INFO voc_eval.py: 171: [1137 1472 1743 ...  988 1660 2484]
INFO voc_dataset_evaluator.py: 127: AP for bird = 0.7907
INFO voc_eval.py: 171: [1453 2070   71 ... 2155 1661 1759]
INFO voc_dataset_evaluator.py: 127: AP for boat = 0.6217
INFO voc_eval.py: 171: [ 954 1804  123 ... 1489   94 2052]
INFO voc_dataset_evaluator.py: 127: AP for bottle = 0.6770
INFO voc_eval.py: 171: [326 844 275 522 816 868 493 689 212 135 476 699 595 220   4  28 207  86
 763  18 105 629 264 412 734 451  74 142  35 544 292 842 650 654 790 779
 856 690 463 640 783 586 196 633 657 496 847 416 688 439 714 381 613  33
  79  83  56 128 745 553 566 536 806 671 781 187  52 561  84 529 251 406
 122 506 728 234  23 721 183 762 314 885 593 289 432 729  70 481 539 164
 360 355 730 386 646  36 379 612 175 452 821 399 478 345 150 278 395 177
 871 853 527 782 791 662 577 266 132 300 116 651 715 825 832 510  20 423
 627 186  60 859 224 115 341 822 312 785 446 211 846 713 562 250 306 770
 537 514 192 515 661 475 394 484 803 222 317 528 489 565 378   1 460 179
 807 380 429 548 680 244 296 282 700 555 618 511 200 368  14 335 751 316
 470 773 268 356 497 599 760 647 351 789 828 532 239 691 585 556 659  19
 569 596 861  67 628 202 600   0 294 283 513 402 258 875 405 554 712  97
 794 608 473 176 254 743  53  76 502 340 143 408 417 490 571 347 677 637
 787 245  81 804 739 491 286 552 480 430 653 687 136 424 184 377 280 407
 396 303 441 563 839 165 392 431 863 818 106 270 359 705  30 748 158 820
 771 636 236 147 267 761 198 449 315 836 140 169 130 112 401 348 872  87
 870 682 860 259 685  57 558 724 459 349 672 131  11 240 166 462 534 225
 436 414 500 271  64 609 137 369  88 427 230 867 703  78  44 191 735  37
 126 843 138 710 133 221 866 670 358   6 448 174 173 357 674 467 731 226
 655 597  34 366 103 159 723 750 581 129 838 235 621 343 642 231 453 858
 388 746 170   9 361 148 102  65 827 641 188  10 698 645 658 598  29 155
 572 716 265   5  58 855 403 706 321 384 233 679 114 681 124 580 663  91
 570 810 538 683 884 178 749 525 354 620  40 487 874 485 160 878 218 118
  26 753 299 304 707 336 614 247 241 631 468 227 153 297 209  80  77  27
 664 346 711 434 666 829 161 503  82 686 206 370 520  55 411 535 313 330
 419 180 668 104 111 616 110 841 594 290 260 223 243   8 248 339 801 445
 709 523 837 786 443 162 101 113 433  31 293 812 404 815 194 305 246 742
  48 181 479 625 656  12 421  39 440 219 301 383 669 798 697 758 331 310
  45 338 232 205 718 438 720 272 817 643 835  71 492 701 788 333 444 382
 410  62 504 418 458  24 584 318 589 291 325 167 398 100 277 146 324 813
 602 542 499 626 362 756 765 576 635 123 648 108 574 573 883 185 334 498
 622 197 725 592  69 295 465 353 213 308 328 517 704  21  49 413 808 456
  16 678 541 639 880 371 673 141 811  42 269 849 736 285 488  22 447 518
 507 435 389 759 772  73 531 168 229  96 151 107 195 726 732 619 454 284
 152 848 615 145 298 474 109 215 857 365 337 550 766 276 660  17 802 799
 363 850 329 494  13 862 737 415  90 274 385 530 320 568  95 869 588 519
  99 508 422 390 826 852 579 755 397 263 409 752 154 255  98  59 733 228
 797  93 242 526 437 210 702 708 545 624 172 193 237  41 887 281 769  94
 156 819 757 638 738  75 287  61 127 877 252 796  89 814 551 604  85 764
 302 564  43 288 471 350 216 477 567 374 590 692 464 606 741 323  68 426
 249 201 428 393 182 696 873 695 694 501 805 483 831 461 665 273 605  50
 367 747  66 809 879   3 775 864 546 575 644 722 540 208 163 578 543 754
 865 214  47  54 607 632 204 450 795 684   7 886  92 391 740 512 342  72
 800  38 516 833  25 238 630 327 256 777 776 157 591 199 559 373 262 547
 117 774 583 469 332 717 533 676 472 587 344 364  46 603 203 372 793 486
 824 149 509 611 261 767 253 557 601 482 834 442  15 882 727 322 466 675
 387 495 693 189  32 634 144  63 352 881 768 524   2 652 134 560 876 610
 257 617 217 667 649 279 190 780 623 830 120 125 549 420 171  51 784 521
 582 778 121 375 376 139 425 823 744 854 311 119 455 845 307 319 505 400
 840 457 719 309 792 851]
INFO voc_dataset_evaluator.py: 127: AP for bus = 0.7908
INFO voc_eval.py: 171: [1018 5531 3626 ... 2719 1373  509]
INFO voc_dataset_evaluator.py: 127: AP for car = 0.8595
INFO voc_eval.py: 171: [ 857  971  935 ...  963 1075  666]
INFO voc_dataset_evaluator.py: 127: AP for cat = 0.8555
INFO voc_eval.py: 171: [ 138 2246 3215 ... 3229 3686 5554]
INFO voc_dataset_evaluator.py: 127: AP for chair = 0.6181
INFO voc_eval.py: 171: [ 755 1596 1314 ...  822 1149 1016]
INFO voc_dataset_evaluator.py: 127: AP for cow = 0.7737
INFO voc_eval.py: 171: [1043  623 2832 ... 2805 1441   54]
INFO voc_dataset_evaluator.py: 127: AP for diningtable = 0.6028
INFO voc_eval.py: 171: [ 113 1102  436 ...  265  575 1209]
INFO voc_dataset_evaluator.py: 127: AP for dog = 0.8181
INFO voc_eval.py: 171: [  27  149  505 ...  590  255 1370]
INFO voc_dataset_evaluator.py: 127: AP for horse = 0.8301
INFO voc_eval.py: 171: [900 265 183 237 301 114 824 140 445 142 872  45 458 264 150 708 546 801
 429 158 155 610  87 176 779 374 119 450 594 462 254 359  46 843 686 105
 835 572 283 371 790 502 701 419 606 571 871 243 112 201 808 248 101 826
 122  62 131  81 733 777 857   5 774 312 184 752 401 862 516 327 771 467
 573 135 866 534 175 907  75 822 115 508 820 436 542 225 353 930 172 382
 755 128 330 541 267 841 282 869 518 303 729 505 308  77  40 485 693 178
 803 524 241 561  72 849 667 506 358 222 372  26 177 438 437 767 653 510
 662 318 486 492 858 577 827 120 712  10 381 294 599 645 922 638 213 784
 444 523 880 726 498 535  57 891   8 898 567 255 739 870 902  36 415 375
 164 692 207 748 811 465 527 536 530 173 472  56 613  59 896 102 881 718
 377 193 644 836 629   3 288 888 760 611 525 321 526 380 188 609 412 187
 625 740 622 333 853 905 442 245 569 246 389 194 147   6 586 554 744 354
 560 831 612 579 367 537 206  96 875  28 882 272 659 899 499 383 647  74
 816 336 515 631 352 317 511 211 574 716 217 332 373 218 304 403 724 215
 833 402 654 284  92  70 628 421 745 781 924  78 646  53 496 772 299 917
 113 619 757 169 521 322 509 400 770 335 703 852 892 407 296 501  55 680
 167 443 796 420 580 378  98 920 399 464 552 337 370  39 617  99 845  64
 639  69 362 221 709 840 633 251 785 186 717 426 503 182 271 855 878 913
 651 363 782 295 884 879  71  67 151 297  91 815   2 570 736 695 124 200
 520 670 417 746 143 110 793 191  12 713 797 489 174 926 807 431 887 764
 914 517 285 850 688 804 558 144 204 320 379 909 493 908 642 865  76 765
 786 342 648 706 715 923 259 165 868 425 364 903 310 614  18 103 163 856
 590 451 783 229 315 576 368   1 538 205 257 233 682 422  60 761 446 861
 203 666 812 454 483 324 439 230 751 268 848 773 789 864  20 696 126 704
 669 513 635 719 307 893 289 463 553 615 488 132 616 475 819 507 742 725
 121 239 604 234 149 559 694  27 309 678 474 447 867 263 632 100 705 839
 722 199  82 522 387 384 148 252 497 223 904 700 484 550 116 290 918 275
 404 305 192 386 863  97 584   9 162 391 780 529 618 834 799 714 396  80
 787  43 658 756 828 915 457  61 592 596 329 152 328 691 758 430 601 514
 323 414 107 504 341 776 331  32 581 925 817 212 741 806 547 185  79 897
  49 423 597 814  37  17 711 587 728 749 578 623 471 555 118 687 531 643
 602 130 575 269 766 495 621 390 750 456   7 227 737 356 663 346 108 710
 846  13 291 600 762 532  89 210 721 369 280 582 153 608 738 139 395 685
 487 480  25 677  14 672 763 565 894 679  35  94 482 673 791 699 634 519
 349 347  50 630 556 180 311 805 313 665 448 500 216 449 156 319 410 911
 931  41 240 441  38 649 325 809 533 637 461 351 261 683 674 393 196  33
 921  47 859 928 754 435 219 671  19 279 551 397 585 281 481 226 170 361
 473 266 802 588 734 214  85 293 916 357 769 874 286  16 707 424 314 159
 433 844 562 886 598  22 350 292 657  63 727 145  23 919 365 166 876 232
 106 627 747 278   0 684 901  73 681 208 640 566 366 563 195 788 528 491
 800 453 238 466 287 141 416 160 732  44 564  95 650 607 276 244 676  11
 117 316 129 821   4 326  58 459 636 468 847 929 157 340 123 829 262 209
 235 702 690 591 413 428 479 818 385 427 810 138 125  30 660 720  34 334
 409 655 656 860 260 161 202 548 274  21 137 478 490 405 256 355  83 270
  48  52 543 231 906 698 406 181 197 388 823 557 854 593 469 668 302 398
  42 189 620 539 300 168 360 890 249 306 652  15 220 641 247 228 134 236
 111 851  66 348 171 545 146 912 837 689 830 697 825 242 798 595 476 589
  51 258 838  31  24 813 768 470 927 136 735 759 339 753  86 512 109  93
  84 104 877 277 743 440 494 792 568 477 250 392 179 723 190 730 675 432
 343 344 731  68 455 605 661 338 345  29 408 544 603 154 778 885 583 298
 224 452 842 873 434  88 273 895 198 624 460 549 626 418  90  65 775 394
 411 376 127 540 889 910 664 883  54 794 795 253 832 133]
INFO voc_dataset_evaluator.py: 127: AP for motorbike = 0.7247
INFO voc_eval.py: 171: [ 2822  6164  8888 ... 11189  3343  7146]
INFO voc_dataset_evaluator.py: 127: AP for person = 0.8369
INFO voc_eval.py: 171: [1873  261 2309 ...  757 2012 2334]
INFO voc_dataset_evaluator.py: 127: AP for pottedplant = 0.4613
INFO voc_eval.py: 171: [ 556 1508  288 ...  567  501 1479]
INFO voc_dataset_evaluator.py: 127: AP for sheep = 0.7545
INFO voc_eval.py: 171: [1220  813  960 ... 1600  885 1577]
INFO voc_dataset_evaluator.py: 127: AP for sofa = 0.6948
INFO voc_eval.py: 171: [ 164  510 1197 ...  108 1134  944]
INFO voc_dataset_evaluator.py: 127: AP for train = 0.7652
INFO voc_eval.py: 171: [424 632 250 556  91 277  56 645 205 529 403  19 369 159 743 422 201 455
  88 340 405 220 454 108 419 620 169 619 398 233 528 263 498 514 440  33
 537 684  73  39 427 223 199 607 239 151 143 210 334 698  92 309 646 375
 442 760 145 713 152 652 636 301 131 428 102 517 472 132 228 331 746 448
 624 516  53  61 300  70 697 726 673 406 269 274 469 355  16 532 357 568
 462 107 657 769 120   5 272 650  81 255 616 641  13 470   8 600 128 307
 362 256  71 115 156 154  43 358 527 118  96 483 276   4 562 449  20 709
  68 729 622 695 617 407 630 230 724 148  38 400 281 409 408 164  83 438
 752 121 319 451 717 471  99 352   1 506 388 587 700 399 777 633 282  82
 594 372 293 590 727  60 654 141 433 257 183 113 493 261 569 626 441 640
 554 755 735 323 117  78 662 530 736 492 329 567 763 761 112 381 773 179
 732 560  67 477 571 597 287 675 377 386 171 365 416 278 655 138 299 520
 213 550 731  89 669 341 500  76 163 734 166 637 444 452 188 196 635 373
 653 538 778 577 601  31 437  75 336 678  59 522 740 545 739 279 680 313
 435 283   2 206 390 343 153 305 401 445 219 380 195 572  22 730 480 393
 303 338 382 236 173 689 289 116 315 494 751 660  80   9 100 686 129 378
 711 496 374 518 687 647 176 708 473 578 515 170 557 758 523  32  63 318
 105 133 174 604 485  44 178 172 450 748 499 705 627  46 254 663 215 186
 106 459 643 241 360 521  93 759 542 211 429 721 202 552 549 135 664  84
 326 271 779 756 491 658 772 710 526 344 584 421  97 157 487 592  94 670
 304 244 495  50 139  29 306  64 379 603 765 385 270 744 430 396 415 123
 342 589  41 566 461 463 320 190   3  15  30  49 615 395 167 750 551 649
 639 703 447 575 453  90 321 747 770 510 598 588 208 691 531 593 661 312
 149 591 103 482 631 443 198 232 240 546 184 332 536 356 363 394 175 290
 702 656 414 728 109 207 570 749   6 285 505 291 389 124 104  77 676 136
 370 348 411 548 692 434 222  36 618 565 376 425 292 335 130 216 218 666
 544 720 484 648 192 745 690 284 119 310 623 511  52 573 144 764 706 628
 486 762 701 611 681 704 345 410 426 368 392  47 158 533 339  58 504 685
 651 714 237 458 259  28 185 742 371 644  25 766 383 634 667 294 275 466
 273 718 776 142  86 101 733 563 404 534 712 314 122 197  69 671  40 242
 200 774  21 146 150 457 479 474 245 235 134 679 583  87   7  45 354 672
 165 586 553 439 725 137 177 460 246 317 203 209 613 110 524  18  74  26
 677 539 324 719  98 541 605 155  14 418 328 519 182 555 715 683 140 337
 417 431 180 638 501  34 353 420 475 757 366 547 456 468 266 322  51 423
 214   0 258 160 610 561 754 490 126 614 127 775 467 268 489 488 668  57
 125 234 251 162 582 391 191  62  54 436 497 413 412 308 161 509 221 581
 771  12 265 535 347  24 513 267 189 741 525 737 264 609 361 387 181 738
 564 559 249  11 247 768 325 311 659 753 699 512 629 227  10 612 295 114
 193 231 252 204 111  66 168 402 364 280 346 507 349 432 225 224 350 296
 585 465 621 253 625  55  48 596 716 722 508 674 288 580  72 602 723 297
 574 316 212 707 579 503  27 187 446 599 330 147  35 502 351 359  95 243
 696 558  79 540 260  42 478 333 606 595 367 302 262 238 384 481 694 682
  17 642 688 576 464 476  65 665 543 226 229 327  37 693 298 397 194 767
  23 286 248 217  85 608]
INFO voc_dataset_evaluator.py: 127: AP for tvmonitor = 0.7216
INFO voc_dataset_evaluator.py: 130: Mean AP = 0.7380
INFO voc_dataset_evaluator.py: 131: ~~~~~~~~
INFO voc_dataset_evaluator.py: 132: Results:
INFO voc_dataset_evaluator.py: 134: 0.774
INFO voc_dataset_evaluator.py: 134: 0.790
INFO voc_dataset_evaluator.py: 134: 0.791
INFO voc_dataset_evaluator.py: 134: 0.622
INFO voc_dataset_evaluator.py: 134: 0.677
INFO voc_dataset_evaluator.py: 134: 0.791
INFO voc_dataset_evaluator.py: 134: 0.859
INFO voc_dataset_evaluator.py: 134: 0.856
INFO voc_dataset_evaluator.py: 134: 0.618
INFO voc_dataset_evaluator.py: 134: 0.774
INFO voc_dataset_evaluator.py: 134: 0.603
INFO voc_dataset_evaluator.py: 134: 0.818
INFO voc_dataset_evaluator.py: 134: 0.830
INFO voc_dataset_evaluator.py: 134: 0.725
INFO voc_dataset_evaluator.py: 134: 0.837
INFO voc_dataset_evaluator.py: 134: 0.461
INFO voc_dataset_evaluator.py: 134: 0.755
INFO voc_dataset_evaluator.py: 134: 0.695
INFO voc_dataset_evaluator.py: 134: 0.765
INFO voc_dataset_evaluator.py: 134: 0.722
INFO voc_dataset_evaluator.py: 135: 0.738
INFO voc_dataset_evaluator.py: 136: ~~~~~~~~
INFO voc_dataset_evaluator.py: 137: 
INFO voc_dataset_evaluator.py: 138: ----------------------------------------------------------
INFO voc_dataset_evaluator.py: 139: Results computed with the **unofficial** Python eval code.
INFO voc_dataset_evaluator.py: 140: Results should be very close to the official MATLAB code.
INFO voc_dataset_evaluator.py: 141: Use `./tools/reval.py --matlab ...` for your paper.
INFO voc_dataset_evaluator.py: 142: -- Thanks, The Management
INFO voc_dataset_evaluator.py: 143: ----------------------------------------------------------
INFO task_evaluation.py:  63: Evaluating bounding boxes is done!
INFO task_evaluation.py: 189: copypaste: Dataset: voc_2007_test
INFO task_evaluation.py: 191: copypaste: Task: box
INFO task_evaluation.py: 194: copypaste: AP,AP50,AP75,APs,APm,APl
INFO task_evaluation.py: 195: copypaste: -1.0000,-1.0000,-1.0000,-1.0000,-1.0000,-1.0000
Start testing on iteration 4999
INFO test_net.py:  72: Called with args:
INFO test_net.py:  73: Namespace(cfg_file='configs/dt/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv.yaml', dataset='voc2007', load_ckpt='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step4999.pth', load_detectron=None, multi_gpu_testing=True, num_classes=None, output_dir=None, range=None, set_cfgs=[], vis=False)
INFO test_net.py:  83: Automatically set output directory to Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test
INFO test_net.py: 130: Testing with config:
INFO test_net.py: 131: {'BBOX_XFORM_CLIP': 4.135166556742356,
 'CROP_RESIZE_WITH_MAX_POOL': True,
 'CUDA': False,
 'DATA_DIR': '/home/ubuntu/Detectron.pytorch/data',
 'DATA_LOADER': {'NUM_THREADS': 4},
 'DEBUG': False,
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXPECTED_RESULTS': [],
 'EXPECTED_RESULTS_ATOL': 0.005,
 'EXPECTED_RESULTS_EMAIL': '',
 'EXPECTED_RESULTS_RTOL': 0.1,
 'FAST_RCNN': {'BOX_OUT_STREAMS': 1,
               'CONV_HEAD_DIM': 256,
               'MLP_HEAD_DIM': 1024,
               'NUM_STACKED_CONVS': 4,
               'ROI_BOX_HEAD': 'fast_rcnn_heads.roi_2mlp_head',
               'ROI_XFORM_METHOD': 'RoIAlign',
               'ROI_XFORM_RESOLUTION': 7,
               'ROI_XFORM_SAMPLING_RATIO': 2},
 'FPN': {'COARSEST_STRIDE': 32,
         'DIM': 256,
         'EXTRA_CONV_LEVELS': False,
         'FPN_ON': True,
         'MULTILEVEL_ROIS': True,
         'MULTILEVEL_RPN': True,
         'ROI_CANONICAL_LEVEL': 4,
         'ROI_CANONICAL_SCALE': 224,
         'ROI_MAX_LEVEL': 5,
         'ROI_MIN_LEVEL': 2,
         'RPN_ANCHOR_START_SIZE': 32,
         'RPN_ASPECT_RATIOS': (0.5, 1, 2),
         'RPN_COLLECT_SCALE': 1,
         'RPN_MAX_LEVEL': 6,
         'RPN_MIN_LEVEL': 2,
         'USE_GN': False,
         'ZERO_INIT_LATERAL': False},
 'GROUP_NORM': {'DIM_PER_GP': -1, 'EPSILON': 1e-05, 'NUM_GROUPS': 32},
 'KRCNN': {'CONV_HEAD_DIM': 256,
           'CONV_HEAD_KERNEL': 3,
           'CONV_INIT': 'GaussianFill',
           'DECONV_DIM': 256,
           'DECONV_KERNEL': 4,
           'DILATION': 1,
           'HEATMAP_SIZE': -1,
           'INFERENCE_MIN_SIZE': 0,
           'KEYPOINT_CONFIDENCE': 'bbox',
           'LOSS_WEIGHT': 1.0,
           'MIN_KEYPOINT_COUNT_FOR_VALID_MINIBATCH': 20,
           'NMS_OKS': False,
           'NORMALIZE_BY_VISIBLE_KEYPOINTS': True,
           'NUM_KEYPOINTS': -1,
           'NUM_STACKED_CONVS': 8,
           'ROI_KEYPOINTS_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'UP_SCALE': -1,
           'USE_DECONV': False,
           'USE_DECONV_OUTPUT': False},
 'MATLAB': 'matlab',
 'MODEL': {'BBOX_REG_WEIGHTS': (10.0, 10.0, 5.0, 5.0),
           'CLS_AGNOSTIC_BBOX_REG': False,
           'CONV_BODY': 'FPN.fpn_ResNet101_conv5_body',
           'FASTER_RCNN': True,
           'KEYPOINTS_ON': False,
           'LOAD_IMAGENET_PRETRAINED_WEIGHTS': True,
           'MASK_ON': False,
           'NUM_CLASSES': 21,
           'RPN_ONLY': False,
           'SHARE_RES5': False,
           'TYPE': 'generalized_rcnn',
           'UNSUPERVISED_POSE': False},
 'MRCNN': {'CLS_SPECIFIC_MASK': True,
           'CONV_INIT': 'GaussianFill',
           'DILATION': 2,
           'DIM_REDUCED': 256,
           'MEMORY_EFFICIENT_LOSS': True,
           'RESOLUTION': 14,
           'ROI_MASK_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'THRESH_BINARIZE': 0.5,
           'UPSAMPLE_RATIO': 1,
           'USE_FC_OUTPUT': False,
           'WEIGHT_LOSS_MASK': 1.0},
 'NUM_GPUS': 8,
 'OUTPUT_DIR': 'Outputs',
 'PIXEL_MEANS': array([[[102.9801, 115.9465, 122.7717]]]),
 'POOLING_MODE': 'crop',
 'POOLING_SIZE': 7,
 'PYTORCH_VERSION_LESS_THAN_040': False,
 'RESNETS': {'FREEZE_AT': 2,
             'IMAGENET_PRETRAINED_WEIGHTS': 'data/pretrained_model/resnet101_caffe.pth',
             'NUM_GROUPS': 1,
             'RES5_DILATION': 1,
             'SHORTCUT_FUNC': 'basic_bn_shortcut',
             'STEM_FUNC': 'basic_bn_stem',
             'STRIDE_1X1': True,
             'TRANS_FUNC': 'bottleneck_transformation',
             'USE_GN': False,
             'WIDTH_PER_GROUP': 64},
 'RETINANET': {'ANCHOR_SCALE': 4,
               'ASPECT_RATIOS': (0.5, 1.0, 2.0),
               'BBOX_REG_BETA': 0.11,
               'BBOX_REG_WEIGHT': 1.0,
               'CLASS_SPECIFIC_BBOX': False,
               'INFERENCE_TH': 0.05,
               'LOSS_ALPHA': 0.25,
               'LOSS_GAMMA': 2.0,
               'NEGATIVE_OVERLAP': 0.4,
               'NUM_CONVS': 4,
               'POSITIVE_OVERLAP': 0.5,
               'PRE_NMS_TOP_N': 1000,
               'PRIOR_PROB': 0.01,
               'RETINANET_ON': False,
               'SCALES_PER_OCTAVE': 3,
               'SHARE_CLS_BBOX_TOWER': False,
               'SOFTMAX': False},
 'RFCN': {'PS_GRID_SIZE': 3},
 'RNG_SEED': 3,
 'ROOT_DIR': '/home/ubuntu/Detectron.pytorch',
 'RPN': {'ASPECT_RATIOS': (0.5, 1, 2),
         'CLS_ACTIVATION': 'sigmoid',
         'OUT_DIM': 512,
         'OUT_DIM_AS_IN_DIM': True,
         'RPN_ON': True,
         'SIZES': (64, 128, 256, 512),
         'STRIDE': 16},
 'SOLVER': {'BASE_LR': 2e-05,
            'BIAS_DOUBLE_LR': True,
            'BIAS_WEIGHT_DECAY': False,
            'GAMMA': 0.1,
            'LOG_LR_CHANGE_THRESHOLD': 1.1,
            'LRS': [],
            'LR_POLICY': 'steps_with_decay',
            'MAX_ITER': 10000,
            'MOMENTUM': 0.9,
            'SCALE_MOMENTUM': True,
            'SCALE_MOMENTUM_THRESHOLD': 1.1,
            'STEPS': [0, 5000, 8000],
            'STEP_SIZE': 30000,
            'TYPE': 'SGD',
            'WARM_UP_FACTOR': 0.3333333333333333,
            'WARM_UP_ITERS': 500,
            'WARM_UP_METHOD': 'linear',
            'WEIGHT_DECAY': 0.0001,
            'WEIGHT_DECAY_GN': 0.0},
 'TEST': {'BBOX_AUG': {'AREA_TH_HI': 32400,
                       'AREA_TH_LO': 2500,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'COORD_HEUR': 'UNION',
                       'ENABLED': False,
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False,
                       'SCORE_HEUR': 'UNION'},
          'BBOX_REG': True,
          'BBOX_VOTE': {'ENABLED': False,
                        'SCORING_METHOD': 'ID',
                        'SCORING_METHOD_BETA': 1.0,
                        'VOTE_TH': 0.8},
          'COMPETITION_MODE': True,
          'DATASETS': ('voc_2007_test',),
          'DETECTIONS_PER_IM': 100,
          'FORCE_JSON_DATASET_EVAL': False,
          'KPS_AUG': {'AREA_TH': 32400,
                      'ASPECT_RATIOS': (),
                      'ASPECT_RATIO_H_FLIP': False,
                      'ENABLED': False,
                      'HEUR': 'HM_AVG',
                      'H_FLIP': False,
                      'MAX_SIZE': 4000,
                      'SCALES': (),
                      'SCALE_H_FLIP': False,
                      'SCALE_SIZE_DEP': False},
          'MASK_AUG': {'AREA_TH': 32400,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'ENABLED': False,
                       'HEUR': 'SOFT_AVG',
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False},
          'MAX_SIZE': 1000,
          'NMS': 0.5,
          'PRECOMPUTED_PROPOSALS': False,
          'PROPOSAL_FILES': (),
          'PROPOSAL_LIMIT': 2000,
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 1000,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALE': 600,
          'SCORE_THRESH': 0.05,
          'SOFT_NMS': {'ENABLED': False, 'METHOD': 'linear', 'SIGMA': 0.5},
          'WEAK_SUPERVISE': False},
 'TRAIN': {'ASPECT_CROPPING': False,
           'ASPECT_GROUPING': True,
           'ASPECT_HI': 2,
           'ASPECT_LO': 0.5,
           'BATCH_SIZE_PER_IM': 512,
           'BBOX_INSIDE_WEIGHTS': (1.0, 1.0, 1.0, 1.0),
           'BBOX_NORMALIZE_MEANS': (0.0, 0.0, 0.0, 0.0),
           'BBOX_NORMALIZE_STDS': (0.1, 0.1, 0.2, 0.2),
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'COPY_CLS_TO_DET': False,
           'CROWD_FILTER_THRESH': 0.7,
           'DATASETS': (),
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'FREEZE_BOX_HEAD': True,
           'FREEZE_CONV_BODY': False,
           'FREEZE_RPN': False,
           'GT_MIN_AREA': -1,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_FILES': (),
           'RPN_BATCH_SIZE_PER_IM': 256,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 2000,
           'RPN_STRADDLE_THRESH': 0,
           'SCALES': (600,),
           'SNAPSHOT_ITERS': 2000,
           'SPATIAL_REG': False,
           'USE_FLIPPED': True,
           'WEAK_SUPERVISE': True,
           'WEAK_SUPERVISE_WITH_PRETRAIN': True},
 'VIS': False,
 'VIS_TH': 0.9}
loading annotations into memory...
Done (t=0.14s)
creating index...
index created!
INFO subprocess.py:  59: 0,1,2,3
INFO subprocess.py:  67: gpu_inds: [0, 1, 2, 3]
INFO subprocess.py:  89: detection range command 0: python /home/ubuntu/Detectron.pytorch/tools/test_net.py --range 0 1238 --cfg Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_config.yaml --set TEST.DATASETS '("voc_2007_test",)' --output_dir Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test --load_ckpt Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step4999.pth
INFO subprocess.py:  89: detection range command 1: python /home/ubuntu/Detectron.pytorch/tools/test_net.py --range 1238 2476 --cfg Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_config.yaml --set TEST.DATASETS '("voc_2007_test",)' --output_dir Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test --load_ckpt Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step4999.pth
INFO subprocess.py:  89: detection range command 2: python /home/ubuntu/Detectron.pytorch/tools/test_net.py --range 2476 3714 --cfg Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_config.yaml --set TEST.DATASETS '("voc_2007_test",)' --output_dir Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test --load_ckpt Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step4999.pth
INFO subprocess.py:  89: detection range command 3: python /home/ubuntu/Detectron.pytorch/tools/test_net.py --range 3714 4952 --cfg Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_config.yaml --set TEST.DATASETS '("voc_2007_test",)' --output_dir Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test --load_ckpt Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step4999.pth
INFO subprocess.py: 129: # ---------------------------------------------------------------------------- #
INFO subprocess.py: 131: stdout of subprocess 0 with range [1, 1238]
INFO subprocess.py: 133: # ---------------------------------------------------------------------------- #
INFO test_net.py:  72: Called with args:
INFO test_net.py:  73: Namespace(cfg_file='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_config.yaml', dataset=None, load_ckpt='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step4999.pth', load_detectron=None, multi_gpu_testing=False, num_classes=None, output_dir='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test', range=[0, 1238], set_cfgs=['TEST.DATASETS', '("voc_2007_test",)'], vis=False)
INFO test_net.py: 130: Testing with config:
INFO test_net.py: 131: {'BBOX_XFORM_CLIP': 4.135166556742356,
 'CROP_RESIZE_WITH_MAX_POOL': True,
 'CUDA': False,
 'DATA_DIR': '/home/ubuntu/Detectron.pytorch/data',
 'DATA_LOADER': {'NUM_THREADS': 4},
 'DEBUG': False,
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXPECTED_RESULTS': [],
 'EXPECTED_RESULTS_ATOL': 0.005,
 'EXPECTED_RESULTS_EMAIL': '',
 'EXPECTED_RESULTS_RTOL': 0.1,
 'FAST_RCNN': {'BOX_OUT_STREAMS': 1,
               'CONV_HEAD_DIM': 256,
               'MLP_HEAD_DIM': 1024,
               'NUM_STACKED_CONVS': 4,
               'ROI_BOX_HEAD': 'fast_rcnn_heads.roi_2mlp_head',
               'ROI_XFORM_METHOD': 'RoIAlign',
               'ROI_XFORM_RESOLUTION': 7,
               'ROI_XFORM_SAMPLING_RATIO': 2},
 'FPN': {'COARSEST_STRIDE': 32,
         'DIM': 256,
         'EXTRA_CONV_LEVELS': False,
         'FPN_ON': True,
         'MULTILEVEL_ROIS': True,
         'MULTILEVEL_RPN': True,
         'ROI_CANONICAL_LEVEL': 4,
         'ROI_CANONICAL_SCALE': 224,
         'ROI_MAX_LEVEL': 5,
         'ROI_MIN_LEVEL': 2,
         'RPN_ANCHOR_START_SIZE': 32,
         'RPN_ASPECT_RATIOS': (0.5, 1, 2),
         'RPN_COLLECT_SCALE': 1,
         'RPN_MAX_LEVEL': 6,
         'RPN_MIN_LEVEL': 2,
         'USE_GN': False,
         'ZERO_INIT_LATERAL': False},
 'GROUP_NORM': {'DIM_PER_GP': -1, 'EPSILON': 1e-05, 'NUM_GROUPS': 32},
 'KRCNN': {'CONV_HEAD_DIM': 256,
           'CONV_HEAD_KERNEL': 3,
           'CONV_INIT': 'GaussianFill',
           'DECONV_DIM': 256,
           'DECONV_KERNEL': 4,
           'DILATION': 1,
           'HEATMAP_SIZE': -1,
           'INFERENCE_MIN_SIZE': 0,
           'KEYPOINT_CONFIDENCE': 'bbox',
           'LOSS_WEIGHT': 1.0,
           'MIN_KEYPOINT_COUNT_FOR_VALID_MINIBATCH': 20,
           'NMS_OKS': False,
           'NORMALIZE_BY_VISIBLE_KEYPOINTS': True,
           'NUM_KEYPOINTS': -1,
           'NUM_STACKED_CONVS': 8,
           'ROI_KEYPOINTS_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'UP_SCALE': -1,
           'USE_DECONV': False,
           'USE_DECONV_OUTPUT': False},
 'MATLAB': 'matlab',
 'MODEL': {'BBOX_REG_WEIGHTS': (10.0, 10.0, 5.0, 5.0),
           'CLS_AGNOSTIC_BBOX_REG': False,
           'CONV_BODY': 'FPN.fpn_ResNet101_conv5_body',
           'FASTER_RCNN': True,
           'KEYPOINTS_ON': False,
           'LOAD_IMAGENET_PRETRAINED_WEIGHTS': True,
           'MASK_ON': False,
           'NUM_CLASSES': 21,
           'RPN_ONLY': False,
           'SHARE_RES5': False,
           'TYPE': 'generalized_rcnn',
           'UNSUPERVISED_POSE': False},
 'MRCNN': {'CLS_SPECIFIC_MASK': True,
           'CONV_INIT': 'GaussianFill',
           'DILATION': 2,
           'DIM_REDUCED': 256,
           'MEMORY_EFFICIENT_LOSS': True,
           'RESOLUTION': 14,
           'ROI_MASK_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'THRESH_BINARIZE': 0.5,
           'UPSAMPLE_RATIO': 1,
           'USE_FC_OUTPUT': False,
           'WEIGHT_LOSS_MASK': 1.0},
 'NUM_GPUS': 8,
 'OUTPUT_DIR': 'Outputs',
 'PIXEL_MEANS': array([[[102.9801, 115.9465, 122.7717]]]),
 'POOLING_MODE': 'crop',
 'POOLING_SIZE': 7,
 'PYTORCH_VERSION_LESS_THAN_040': False,
 'RESNETS': {'FREEZE_AT': 2,
             'IMAGENET_PRETRAINED_WEIGHTS': 'data/pretrained_model/resnet101_caffe.pth',
             'NUM_GROUPS': 1,
             'RES5_DILATION': 1,
             'SHORTCUT_FUNC': 'basic_bn_shortcut',
             'STEM_FUNC': 'basic_bn_stem',
             'STRIDE_1X1': True,
             'TRANS_FUNC': 'bottleneck_transformation',
             'USE_GN': False,
             'WIDTH_PER_GROUP': 64},
 'RETINANET': {'ANCHOR_SCALE': 4,
               'ASPECT_RATIOS': (0.5, 1.0, 2.0),
               'BBOX_REG_BETA': 0.11,
               'BBOX_REG_WEIGHT': 1.0,
               'CLASS_SPECIFIC_BBOX': False,
               'INFERENCE_TH': 0.05,
               'LOSS_ALPHA': 0.25,
               'LOSS_GAMMA': 2.0,
               'NEGATIVE_OVERLAP': 0.4,
               'NUM_CONVS': 4,
               'POSITIVE_OVERLAP': 0.5,
               'PRE_NMS_TOP_N': 1000,
               'PRIOR_PROB': 0.01,
               'RETINANET_ON': False,
               'SCALES_PER_OCTAVE': 3,
               'SHARE_CLS_BBOX_TOWER': False,
               'SOFTMAX': False},
 'RFCN': {'PS_GRID_SIZE': 3},
 'RNG_SEED': 3,
 'ROOT_DIR': '/home/ubuntu/Detectron.pytorch',
 'RPN': {'ASPECT_RATIOS': (0.5, 1, 2),
         'CLS_ACTIVATION': 'sigmoid',
         'OUT_DIM': 512,
         'OUT_DIM_AS_IN_DIM': True,
         'RPN_ON': True,
         'SIZES': (64, 128, 256, 512),
         'STRIDE': 16},
 'SOLVER': {'BASE_LR': 2e-05,
            'BIAS_DOUBLE_LR': True,
            'BIAS_WEIGHT_DECAY': False,
            'GAMMA': 0.1,
            'LOG_LR_CHANGE_THRESHOLD': 1.1,
            'LRS': [],
            'LR_POLICY': 'steps_with_decay',
            'MAX_ITER': 10000,
            'MOMENTUM': 0.9,
            'SCALE_MOMENTUM': True,
            'SCALE_MOMENTUM_THRESHOLD': 1.1,
            'STEPS': [0, 5000, 8000],
            'STEP_SIZE': 30000,
            'TYPE': 'SGD',
            'WARM_UP_FACTOR': 0.3333333333333333,
            'WARM_UP_ITERS': 500,
            'WARM_UP_METHOD': 'linear',
            'WEIGHT_DECAY': 0.0001,
            'WEIGHT_DECAY_GN': 0.0},
 'TEST': {'BBOX_AUG': {'AREA_TH_HI': 32400,
                       'AREA_TH_LO': 2500,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'COORD_HEUR': 'UNION',
                       'ENABLED': False,
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False,
                       'SCORE_HEUR': 'UNION'},
          'BBOX_REG': True,
          'BBOX_VOTE': {'ENABLED': False,
                        'SCORING_METHOD': 'ID',
                        'SCORING_METHOD_BETA': 1.0,
                        'VOTE_TH': 0.8},
          'COMPETITION_MODE': True,
          'DATASETS': ('voc_2007_test',),
          'DETECTIONS_PER_IM': 100,
          'FORCE_JSON_DATASET_EVAL': False,
          'KPS_AUG': {'AREA_TH': 32400,
                      'ASPECT_RATIOS': (),
                      'ASPECT_RATIO_H_FLIP': False,
                      'ENABLED': False,
                      'HEUR': 'HM_AVG',
                      'H_FLIP': False,
                      'MAX_SIZE': 4000,
                      'SCALES': (),
                      'SCALE_H_FLIP': False,
                      'SCALE_SIZE_DEP': False},
          'MASK_AUG': {'AREA_TH': 32400,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'ENABLED': False,
                       'HEUR': 'SOFT_AVG',
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False},
          'MAX_SIZE': 1000,
          'NMS': 0.5,
          'PRECOMPUTED_PROPOSALS': False,
          'PROPOSAL_FILES': (),
          'PROPOSAL_LIMIT': 2000,
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 1000,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALE': 600,
          'SCORE_THRESH': 0.05,
          'SOFT_NMS': {'ENABLED': False, 'METHOD': 'linear', 'SIGMA': 0.5},
          'WEAK_SUPERVISE': False},
 'TRAIN': {'ASPECT_CROPPING': False,
           'ASPECT_GROUPING': True,
           'ASPECT_HI': 2,
           'ASPECT_LO': 0.5,
           'BATCH_SIZE_PER_IM': 512,
           'BBOX_INSIDE_WEIGHTS': (1.0, 1.0, 1.0, 1.0),
           'BBOX_NORMALIZE_MEANS': (0.0, 0.0, 0.0, 0.0),
           'BBOX_NORMALIZE_STDS': (0.1, 0.1, 0.2, 0.2),
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'COPY_CLS_TO_DET': False,
           'CROWD_FILTER_THRESH': 0.7,
           'DATASETS': (),
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'FREEZE_BOX_HEAD': True,
           'FREEZE_CONV_BODY': False,
           'FREEZE_RPN': False,
           'GT_MIN_AREA': -1,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_FILES': (),
           'RPN_BATCH_SIZE_PER_IM': 256,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 2000,
           'RPN_STRADDLE_THRESH': 0,
           'SCALES': (600,),
           'SNAPSHOT_ITERS': 2000,
           'SPATIAL_REG': False,
           'USE_FLIPPED': True,
           'WEAK_SUPERVISE': True,
           'WEAK_SUPERVISE_WITH_PRETRAIN': True},
 'VIS': False,
 'VIS_TH': 0.9}
loading annotations into memory...
Done (t=0.11s)
creating index...
index created!
INFO test_engine.py: 324: training mode? : False
INFO test_engine.py: 331: loading checkpoint Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step4999.pth
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1/1238 0.747s + 0.002s (eta: 0:15:26)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 11/1238 0.562s + 0.001s (eta: 0:11:31)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 21/1238 0.511s + 0.002s (eta: 0:10:23)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 31/1238 0.505s + 0.002s (eta: 0:10:11)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 41/1238 0.510s + 0.002s (eta: 0:10:12)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 51/1238 0.509s + 0.002s (eta: 0:10:06)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 61/1238 0.515s + 0.002s (eta: 0:10:08)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 71/1238 0.514s + 0.002s (eta: 0:10:02)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 81/1238 0.517s + 0.002s (eta: 0:10:00)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 91/1238 0.517s + 0.002s (eta: 0:09:54)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 101/1238 0.517s + 0.002s (eta: 0:09:49)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 111/1238 0.513s + 0.002s (eta: 0:09:40)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 121/1238 0.508s + 0.002s (eta: 0:09:30)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 131/1238 0.509s + 0.002s (eta: 0:09:25)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 141/1238 0.508s + 0.002s (eta: 0:09:19)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 151/1238 0.506s + 0.002s (eta: 0:09:11)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 161/1238 0.506s + 0.002s (eta: 0:09:06)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 171/1238 0.505s + 0.002s (eta: 0:09:01)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 181/1238 0.502s + 0.002s (eta: 0:08:52)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 191/1238 0.502s + 0.002s (eta: 0:08:47)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 201/1238 0.501s + 0.002s (eta: 0:08:41)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 211/1238 0.502s + 0.002s (eta: 0:08:37)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 221/1238 0.501s + 0.002s (eta: 0:08:31)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 231/1238 0.502s + 0.002s (eta: 0:08:27)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 241/1238 0.500s + 0.002s (eta: 0:08:20)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 251/1238 0.500s + 0.002s (eta: 0:08:15)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 261/1238 0.500s + 0.002s (eta: 0:08:10)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 271/1238 0.500s + 0.002s (eta: 0:08:04)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 281/1238 0.500s + 0.002s (eta: 0:07:59)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 291/1238 0.499s + 0.002s (eta: 0:07:54)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 301/1238 0.499s + 0.002s (eta: 0:07:48)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 311/1238 0.499s + 0.002s (eta: 0:07:44)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 321/1238 0.498s + 0.002s (eta: 0:07:38)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 331/1238 0.497s + 0.002s (eta: 0:07:32)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 341/1238 0.499s + 0.002s (eta: 0:07:28)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 351/1238 0.499s + 0.002s (eta: 0:07:24)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 361/1238 0.500s + 0.002s (eta: 0:07:19)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 371/1238 0.501s + 0.002s (eta: 0:07:15)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 381/1238 0.502s + 0.002s (eta: 0:07:11)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 391/1238 0.501s + 0.002s (eta: 0:07:06)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 401/1238 0.500s + 0.002s (eta: 0:06:59)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 411/1238 0.499s + 0.002s (eta: 0:06:54)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 421/1238 0.498s + 0.002s (eta: 0:06:48)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 431/1238 0.496s + 0.002s (eta: 0:06:41)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 441/1238 0.494s + 0.002s (eta: 0:06:34)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 451/1238 0.491s + 0.002s (eta: 0:06:28)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 461/1238 0.489s + 0.002s (eta: 0:06:21)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 471/1238 0.487s + 0.002s (eta: 0:06:15)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 481/1238 0.485s + 0.002s (eta: 0:06:08)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 491/1238 0.486s + 0.002s (eta: 0:06:04)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 501/1238 0.487s + 0.002s (eta: 0:05:59)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 511/1238 0.487s + 0.002s (eta: 0:05:55)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 521/1238 0.487s + 0.002s (eta: 0:05:50)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 531/1238 0.488s + 0.002s (eta: 0:05:46)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 541/1238 0.488s + 0.002s (eta: 0:05:41)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 551/1238 0.489s + 0.002s (eta: 0:05:36)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 561/1238 0.489s + 0.002s (eta: 0:05:32)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 571/1238 0.489s + 0.002s (eta: 0:05:27)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 581/1238 0.489s + 0.002s (eta: 0:05:22)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 591/1238 0.489s + 0.002s (eta: 0:05:17)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 601/1238 0.490s + 0.002s (eta: 0:05:13)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 611/1238 0.491s + 0.002s (eta: 0:05:09)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 621/1238 0.491s + 0.002s (eta: 0:05:04)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 631/1238 0.491s + 0.002s (eta: 0:04:59)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 641/1238 0.491s + 0.002s (eta: 0:04:54)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 651/1238 0.492s + 0.002s (eta: 0:04:50)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 661/1238 0.492s + 0.002s (eta: 0:04:45)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 671/1238 0.493s + 0.002s (eta: 0:04:40)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 681/1238 0.493s + 0.002s (eta: 0:04:35)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 691/1238 0.492s + 0.002s (eta: 0:04:30)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 701/1238 0.492s + 0.002s (eta: 0:04:25)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 711/1238 0.493s + 0.002s (eta: 0:04:20)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 721/1238 0.493s + 0.002s (eta: 0:04:15)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 731/1238 0.493s + 0.002s (eta: 0:04:10)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 741/1238 0.493s + 0.002s (eta: 0:04:05)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 751/1238 0.493s + 0.002s (eta: 0:04:01)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 761/1238 0.493s + 0.002s (eta: 0:03:56)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 771/1238 0.493s + 0.002s (eta: 0:03:51)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 781/1238 0.494s + 0.002s (eta: 0:03:46)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 791/1238 0.493s + 0.002s (eta: 0:03:41)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 801/1238 0.492s + 0.002s (eta: 0:03:35)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 811/1238 0.492s + 0.002s (eta: 0:03:31)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 821/1238 0.493s + 0.002s (eta: 0:03:26)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 831/1238 0.493s + 0.002s (eta: 0:03:21)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 841/1238 0.493s + 0.002s (eta: 0:03:16)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 851/1238 0.493s + 0.002s (eta: 0:03:11)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 861/1238 0.494s + 0.002s (eta: 0:03:07)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 871/1238 0.494s + 0.002s (eta: 0:03:02)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 881/1238 0.495s + 0.002s (eta: 0:02:57)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 891/1238 0.495s + 0.002s (eta: 0:02:52)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 901/1238 0.495s + 0.002s (eta: 0:02:47)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 911/1238 0.495s + 0.002s (eta: 0:02:42)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 921/1238 0.495s + 0.002s (eta: 0:02:37)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 931/1238 0.496s + 0.002s (eta: 0:02:32)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 941/1238 0.496s + 0.002s (eta: 0:02:27)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 951/1238 0.495s + 0.002s (eta: 0:02:22)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 961/1238 0.495s + 0.002s (eta: 0:02:17)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 971/1238 0.495s + 0.002s (eta: 0:02:12)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 981/1238 0.495s + 0.002s (eta: 0:02:07)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 991/1238 0.495s + 0.002s (eta: 0:02:02)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1001/1238 0.495s + 0.002s (eta: 0:01:57)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1011/1238 0.496s + 0.002s (eta: 0:01:52)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1021/1238 0.495s + 0.002s (eta: 0:01:47)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1031/1238 0.495s + 0.002s (eta: 0:01:42)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1041/1238 0.496s + 0.002s (eta: 0:01:38)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1051/1238 0.496s + 0.002s (eta: 0:01:33)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1061/1238 0.497s + 0.002s (eta: 0:01:28)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1071/1238 0.496s + 0.002s (eta: 0:01:23)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1081/1238 0.496s + 0.002s (eta: 0:01:18)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1091/1238 0.496s + 0.002s (eta: 0:01:13)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1101/1238 0.497s + 0.002s (eta: 0:01:08)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1111/1238 0.497s + 0.002s (eta: 0:01:03)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1121/1238 0.497s + 0.002s (eta: 0:00:58)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1131/1238 0.497s + 0.002s (eta: 0:00:53)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1141/1238 0.497s + 0.002s (eta: 0:00:48)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1151/1238 0.497s + 0.002s (eta: 0:00:43)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1161/1238 0.497s + 0.002s (eta: 0:00:38)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1171/1238 0.497s + 0.002s (eta: 0:00:33)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1181/1238 0.497s + 0.002s (eta: 0:00:28)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1191/1238 0.497s + 0.002s (eta: 0:00:23)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1201/1238 0.497s + 0.002s (eta: 0:00:18)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1211/1238 0.497s + 0.002s (eta: 0:00:13)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1221/1238 0.497s + 0.002s (eta: 0:00:08)
INFO test_engine.py: 281: im_detect: range [1, 1238] of 4952: 1231/1238 0.497s + 0.002s (eta: 0:00:03)
INFO test_engine.py: 314: Wrote detections to: /home/ubuntu/Detectron.pytorch/Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_0_1238.pkl
/home/ubuntu/anaconda3/envs/pytorch41/lib/python3.7/site-packages/torch/nn/functional.py:1890: UserWarning: nn.functional.upsample is deprecated. Use nn.functional.interpolate instead.
  warnings.warn("nn.functional.upsample is deprecated. Use nn.functional.interpolate instead.")
INFO subprocess.py: 129: # ---------------------------------------------------------------------------- #
INFO subprocess.py: 131: stdout of subprocess 1 with range [1239, 2476]
INFO subprocess.py: 133: # ---------------------------------------------------------------------------- #
INFO test_net.py:  72: Called with args:
INFO test_net.py:  73: Namespace(cfg_file='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_config.yaml', dataset=None, load_ckpt='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step4499.pth', load_detectron=None, multi_gpu_testing=False, num_classes=None, output_dir='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test', range=[1238, 2476], set_cfgs=['TEST.DATASETS', '("voc_2007_test",)'], vis=False)
INFO test_net.py: 130: Testing with config:
INFO test_net.py: 131: {'BBOX_XFORM_CLIP': 4.135166556742356,
 'CROP_RESIZE_WITH_MAX_POOL': True,
 'CUDA': False,
 'DATA_DIR': '/home/ubuntu/Detectron.pytorch/data',
 'DATA_LOADER': {'NUM_THREADS': 4},
 'DEBUG': False,
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXPECTED_RESULTS': [],
 'EXPECTED_RESULTS_ATOL': 0.005,
 'EXPECTED_RESULTS_EMAIL': '',
 'EXPECTED_RESULTS_RTOL': 0.1,
 'FAST_RCNN': {'BOX_OUT_STREAMS': 1,
               'CONV_HEAD_DIM': 256,
               'MLP_HEAD_DIM': 1024,
               'NUM_STACKED_CONVS': 4,
               'ROI_BOX_HEAD': 'fast_rcnn_heads.roi_2mlp_head',
               'ROI_XFORM_METHOD': 'RoIAlign',
               'ROI_XFORM_RESOLUTION': 7,
               'ROI_XFORM_SAMPLING_RATIO': 2},
 'FPN': {'COARSEST_STRIDE': 32,
         'DIM': 256,
         'EXTRA_CONV_LEVELS': False,
         'FPN_ON': True,
         'MULTILEVEL_ROIS': True,
         'MULTILEVEL_RPN': True,
         'ROI_CANONICAL_LEVEL': 4,
         'ROI_CANONICAL_SCALE': 224,
         'ROI_MAX_LEVEL': 5,
         'ROI_MIN_LEVEL': 2,
         'RPN_ANCHOR_START_SIZE': 32,
         'RPN_ASPECT_RATIOS': (0.5, 1, 2),
         'RPN_COLLECT_SCALE': 1,
         'RPN_MAX_LEVEL': 6,
         'RPN_MIN_LEVEL': 2,
         'USE_GN': False,
         'ZERO_INIT_LATERAL': False},
 'GROUP_NORM': {'DIM_PER_GP': -1, 'EPSILON': 1e-05, 'NUM_GROUPS': 32},
 'KRCNN': {'CONV_HEAD_DIM': 256,
           'CONV_HEAD_KERNEL': 3,
           'CONV_INIT': 'GaussianFill',
           'DECONV_DIM': 256,
           'DECONV_KERNEL': 4,
           'DILATION': 1,
           'HEATMAP_SIZE': -1,
           'INFERENCE_MIN_SIZE': 0,
           'KEYPOINT_CONFIDENCE': 'bbox',
           'LOSS_WEIGHT': 1.0,
           'MIN_KEYPOINT_COUNT_FOR_VALID_MINIBATCH': 20,
           'NMS_OKS': False,
           'NORMALIZE_BY_VISIBLE_KEYPOINTS': True,
           'NUM_KEYPOINTS': -1,
           'NUM_STACKED_CONVS': 8,
           'ROI_KEYPOINTS_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'UP_SCALE': -1,
           'USE_DECONV': False,
           'USE_DECONV_OUTPUT': False},
 'MATLAB': 'matlab',
 'MODEL': {'BBOX_REG_WEIGHTS': (10.0, 10.0, 5.0, 5.0),
           'CLS_AGNOSTIC_BBOX_REG': False,
           'CONV_BODY': 'FPN.fpn_ResNet101_conv5_body',
           'FASTER_RCNN': True,
           'KEYPOINTS_ON': False,
           'LOAD_IMAGENET_PRETRAINED_WEIGHTS': True,
           'MASK_ON': False,
           'NUM_CLASSES': 21,
           'RPN_ONLY': False,
           'SHARE_RES5': False,
           'TYPE': 'generalized_rcnn',
           'UNSUPERVISED_POSE': False},
 'MRCNN': {'CLS_SPECIFIC_MASK': True,
           'CONV_INIT': 'GaussianFill',
           'DILATION': 2,
           'DIM_REDUCED': 256,
           'MEMORY_EFFICIENT_LOSS': True,
           'RESOLUTION': 14,
           'ROI_MASK_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'THRESH_BINARIZE': 0.5,
           'UPSAMPLE_RATIO': 1,
           'USE_FC_OUTPUT': False,
           'WEIGHT_LOSS_MASK': 1.0},
 'NUM_GPUS': 8,
 'OUTPUT_DIR': 'Outputs',
 'PIXEL_MEANS': array([[[102.9801, 115.9465, 122.7717]]]),
 'POOLING_MODE': 'crop',
 'POOLING_SIZE': 7,
 'PYTORCH_VERSION_LESS_THAN_040': False,
 'RESNETS': {'FREEZE_AT': 2,
             'IMAGENET_PRETRAINED_WEIGHTS': 'data/pretrained_model/resnet101_caffe.pth',
             'NUM_GROUPS': 1,
             'RES5_DILATION': 1,
             'SHORTCUT_FUNC': 'basic_bn_shortcut',
             'STEM_FUNC': 'basic_bn_stem',
             'STRIDE_1X1': True,
             'TRANS_FUNC': 'bottleneck_transformation',
             'USE_GN': False,
             'WIDTH_PER_GROUP': 64},
 'RETINANET': {'ANCHOR_SCALE': 4,
               'ASPECT_RATIOS': (0.5, 1.0, 2.0),
               'BBOX_REG_BETA': 0.11,
               'BBOX_REG_WEIGHT': 1.0,
               'CLASS_SPECIFIC_BBOX': False,
               'INFERENCE_TH': 0.05,
               'LOSS_ALPHA': 0.25,
               'LOSS_GAMMA': 2.0,
               'NEGATIVE_OVERLAP': 0.4,
               'NUM_CONVS': 4,
               'POSITIVE_OVERLAP': 0.5,
               'PRE_NMS_TOP_N': 1000,
               'PRIOR_PROB': 0.01,
               'RETINANET_ON': False,
               'SCALES_PER_OCTAVE': 3,
               'SHARE_CLS_BBOX_TOWER': False,
               'SOFTMAX': False},
 'RFCN': {'PS_GRID_SIZE': 3},
 'RNG_SEED': 3,
 'ROOT_DIR': '/home/ubuntu/Detectron.pytorch',
 'RPN': {'ASPECT_RATIOS': (0.5, 1, 2),
         'CLS_ACTIVATION': 'sigmoid',
         'OUT_DIM': 512,
         'OUT_DIM_AS_IN_DIM': True,
         'RPN_ON': True,
         'SIZES': (64, 128, 256, 512),
         'STRIDE': 16},
 'SOLVER': {'BASE_LR': 2e-05,
            'BIAS_DOUBLE_LR': True,
            'BIAS_WEIGHT_DECAY': False,
            'GAMMA': 0.1,
            'LOG_LR_CHANGE_THRESHOLD': 1.1,
            'LRS': [],
            'LR_POLICY': 'steps_with_decay',
            'MAX_ITER': 10000,
            'MOMENTUM': 0.9,
            'SCALE_MOMENTUM': True,
            'SCALE_MOMENTUM_THRESHOLD': 1.1,
            'STEPS': [0, 5000, 8000],
            'STEP_SIZE': 30000,
            'TYPE': 'SGD',
            'WARM_UP_FACTOR': 0.3333333333333333,
            'WARM_UP_ITERS': 500,
            'WARM_UP_METHOD': 'linear',
            'WEIGHT_DECAY': 0.0001,
            'WEIGHT_DECAY_GN': 0.0},
 'TEST': {'BBOX_AUG': {'AREA_TH_HI': 32400,
                       'AREA_TH_LO': 2500,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'COORD_HEUR': 'UNION',
                       'ENABLED': False,
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False,
                       'SCORE_HEUR': 'UNION'},
          'BBOX_REG': True,
          'BBOX_VOTE': {'ENABLED': False,
                        'SCORING_METHOD': 'ID',
                        'SCORING_METHOD_BETA': 1.0,
                        'VOTE_TH': 0.8},
          'COMPETITION_MODE': True,
          'DATASETS': ('voc_2007_test',),
          'DETECTIONS_PER_IM': 100,
          'FORCE_JSON_DATASET_EVAL': False,
          'KPS_AUG': {'AREA_TH': 32400,
                      'ASPECT_RATIOS': (),
                      'ASPECT_RATIO_H_FLIP': False,
                      'ENABLED': False,
                      'HEUR': 'HM_AVG',
                      'H_FLIP': False,
                      'MAX_SIZE': 4000,
                      'SCALES': (),
                      'SCALE_H_FLIP': False,
                      'SCALE_SIZE_DEP': False},
          'MASK_AUG': {'AREA_TH': 32400,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'ENABLED': False,
                       'HEUR': 'SOFT_AVG',
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False},
          'MAX_SIZE': 1000,
          'NMS': 0.5,
          'PRECOMPUTED_PROPOSALS': False,
          'PROPOSAL_FILES': (),
          'PROPOSAL_LIMIT': 2000,
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 1000,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALE': 600,
          'SCORE_THRESH': 0.05,
          'SOFT_NMS': {'ENABLED': False, 'METHOD': 'linear', 'SIGMA': 0.5},
          'WEAK_SUPERVISE': False},
 'TRAIN': {'ASPECT_CROPPING': False,
           'ASPECT_GROUPING': True,
           'ASPECT_HI': 2,
           'ASPECT_LO': 0.5,
           'BATCH_SIZE_PER_IM': 512,
           'BBOX_INSIDE_WEIGHTS': (1.0, 1.0, 1.0, 1.0),
           'BBOX_NORMALIZE_MEANS': (0.0, 0.0, 0.0, 0.0),
           'BBOX_NORMALIZE_STDS': (0.1, 0.1, 0.2, 0.2),
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'COPY_CLS_TO_DET': False,
           'CROWD_FILTER_THRESH': 0.7,
           'DATASETS': (),
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'FREEZE_BOX_HEAD': True,
           'FREEZE_CONV_BODY': False,
           'FREEZE_RPN': False,
           'GT_MIN_AREA': -1,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_FILES': (),
           'RPN_BATCH_SIZE_PER_IM': 256,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 2000,
           'RPN_STRADDLE_THRESH': 0,
           'SCALES': (600,),
           'SNAPSHOT_ITERS': 2000,
           'SPATIAL_REG': False,
           'USE_FLIPPED': True,
           'WEAK_SUPERVISE': True,
           'WEAK_SUPERVISE_WITH_PRETRAIN': True},
 'VIS': False,
 'VIS_TH': 0.9}
loading annotations into memory...
Done (t=0.14s)
creating index...
index created!
INFO test_engine.py: 324: training mode? : False
INFO test_engine.py: 331: loading checkpoint Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step4499.pth
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1239/2476 0.666s + 0.001s (eta: 0:13:45)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1249/2476 0.503s + 0.002s (eta: 0:10:18)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1259/2476 0.489s + 0.002s (eta: 0:09:57)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1269/2476 0.496s + 0.002s (eta: 0:10:00)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1279/2476 0.492s + 0.002s (eta: 0:09:50)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1289/2476 0.492s + 0.002s (eta: 0:09:45)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1299/2476 0.490s + 0.002s (eta: 0:09:38)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1309/2476 0.490s + 0.002s (eta: 0:09:33)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1319/2476 0.490s + 0.002s (eta: 0:09:28)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1329/2476 0.489s + 0.002s (eta: 0:09:23)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1339/2476 0.489s + 0.002s (eta: 0:09:18)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1349/2476 0.494s + 0.002s (eta: 0:09:18)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1359/2476 0.494s + 0.002s (eta: 0:09:14)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1369/2476 0.494s + 0.002s (eta: 0:09:08)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1379/2476 0.496s + 0.002s (eta: 0:09:06)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1389/2476 0.495s + 0.002s (eta: 0:09:00)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1399/2476 0.494s + 0.002s (eta: 0:08:54)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1409/2476 0.496s + 0.002s (eta: 0:08:51)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1419/2476 0.499s + 0.002s (eta: 0:08:49)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1429/2476 0.499s + 0.002s (eta: 0:08:44)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1439/2476 0.497s + 0.002s (eta: 0:08:36)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1449/2476 0.497s + 0.002s (eta: 0:08:32)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1459/2476 0.500s + 0.002s (eta: 0:08:29)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1469/2476 0.499s + 0.002s (eta: 0:08:24)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1479/2476 0.499s + 0.002s (eta: 0:08:19)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1489/2476 0.501s + 0.002s (eta: 0:08:16)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1499/2476 0.502s + 0.002s (eta: 0:08:11)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1509/2476 0.500s + 0.002s (eta: 0:08:05)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1519/2476 0.500s + 0.002s (eta: 0:08:00)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1529/2476 0.500s + 0.002s (eta: 0:07:54)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1539/2476 0.499s + 0.002s (eta: 0:07:49)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1549/2476 0.499s + 0.002s (eta: 0:07:44)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1559/2476 0.499s + 0.002s (eta: 0:07:38)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1569/2476 0.499s + 0.002s (eta: 0:07:34)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1579/2476 0.498s + 0.002s (eta: 0:07:27)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1589/2476 0.498s + 0.002s (eta: 0:07:22)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1599/2476 0.497s + 0.002s (eta: 0:07:17)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1609/2476 0.495s + 0.002s (eta: 0:07:10)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1619/2476 0.494s + 0.002s (eta: 0:07:04)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1629/2476 0.495s + 0.002s (eta: 0:07:00)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1639/2476 0.495s + 0.002s (eta: 0:06:55)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1649/2476 0.495s + 0.002s (eta: 0:06:50)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1659/2476 0.494s + 0.002s (eta: 0:06:45)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1669/2476 0.495s + 0.002s (eta: 0:06:40)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1679/2476 0.496s + 0.002s (eta: 0:06:36)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1689/2476 0.496s + 0.002s (eta: 0:06:31)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1699/2476 0.496s + 0.002s (eta: 0:06:26)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1709/2476 0.496s + 0.002s (eta: 0:06:21)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1719/2476 0.496s + 0.002s (eta: 0:06:16)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1729/2476 0.497s + 0.002s (eta: 0:06:12)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1739/2476 0.497s + 0.002s (eta: 0:06:07)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1749/2476 0.496s + 0.002s (eta: 0:06:02)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1759/2476 0.496s + 0.002s (eta: 0:05:57)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1769/2476 0.496s + 0.002s (eta: 0:05:52)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1779/2476 0.497s + 0.002s (eta: 0:05:47)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1789/2476 0.496s + 0.002s (eta: 0:05:41)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1799/2476 0.496s + 0.002s (eta: 0:05:37)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1809/2476 0.496s + 0.002s (eta: 0:05:31)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1819/2476 0.495s + 0.002s (eta: 0:05:26)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1829/2476 0.495s + 0.002s (eta: 0:05:21)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1839/2476 0.495s + 0.002s (eta: 0:05:16)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1849/2476 0.494s + 0.002s (eta: 0:05:11)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1859/2476 0.494s + 0.002s (eta: 0:05:06)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1869/2476 0.495s + 0.002s (eta: 0:05:01)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1879/2476 0.495s + 0.002s (eta: 0:04:56)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1889/2476 0.495s + 0.002s (eta: 0:04:51)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1899/2476 0.495s + 0.002s (eta: 0:04:46)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1909/2476 0.495s + 0.002s (eta: 0:04:41)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1919/2476 0.495s + 0.002s (eta: 0:04:36)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1929/2476 0.496s + 0.002s (eta: 0:04:32)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1939/2476 0.496s + 0.002s (eta: 0:04:27)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1949/2476 0.496s + 0.002s (eta: 0:04:22)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1959/2476 0.495s + 0.002s (eta: 0:04:16)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1969/2476 0.495s + 0.002s (eta: 0:04:11)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1979/2476 0.494s + 0.002s (eta: 0:04:06)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1989/2476 0.495s + 0.002s (eta: 0:04:01)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 1999/2476 0.495s + 0.002s (eta: 0:03:56)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2009/2476 0.493s + 0.002s (eta: 0:03:51)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2019/2476 0.489s + 0.002s (eta: 0:03:44)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2029/2476 0.490s + 0.002s (eta: 0:03:39)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2039/2476 0.490s + 0.002s (eta: 0:03:35)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2049/2476 0.490s + 0.002s (eta: 0:03:30)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2059/2476 0.490s + 0.002s (eta: 0:03:25)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2069/2476 0.491s + 0.002s (eta: 0:03:20)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2079/2476 0.491s + 0.002s (eta: 0:03:15)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2089/2476 0.491s + 0.002s (eta: 0:03:10)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2099/2476 0.491s + 0.002s (eta: 0:03:06)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2109/2476 0.491s + 0.002s (eta: 0:03:01)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2119/2476 0.491s + 0.002s (eta: 0:02:55)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2129/2476 0.491s + 0.002s (eta: 0:02:51)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2139/2476 0.491s + 0.002s (eta: 0:02:46)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2149/2476 0.491s + 0.002s (eta: 0:02:41)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2159/2476 0.491s + 0.002s (eta: 0:02:36)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2169/2476 0.490s + 0.002s (eta: 0:02:31)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2179/2476 0.491s + 0.002s (eta: 0:02:26)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2189/2476 0.492s + 0.002s (eta: 0:02:21)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2199/2476 0.492s + 0.002s (eta: 0:02:16)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2209/2476 0.492s + 0.002s (eta: 0:02:11)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2219/2476 0.492s + 0.002s (eta: 0:02:07)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2229/2476 0.493s + 0.002s (eta: 0:02:02)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2239/2476 0.492s + 0.002s (eta: 0:01:57)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2249/2476 0.492s + 0.002s (eta: 0:01:52)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2259/2476 0.492s + 0.002s (eta: 0:01:47)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2269/2476 0.492s + 0.002s (eta: 0:01:42)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2279/2476 0.492s + 0.002s (eta: 0:01:37)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2289/2476 0.492s + 0.002s (eta: 0:01:32)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2299/2476 0.493s + 0.002s (eta: 0:01:27)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2309/2476 0.493s + 0.002s (eta: 0:01:22)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2319/2476 0.492s + 0.002s (eta: 0:01:17)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2329/2476 0.493s + 0.002s (eta: 0:01:12)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2339/2476 0.492s + 0.002s (eta: 0:01:07)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2349/2476 0.492s + 0.002s (eta: 0:01:02)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2359/2476 0.492s + 0.002s (eta: 0:00:57)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2369/2476 0.492s + 0.002s (eta: 0:00:52)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2379/2476 0.492s + 0.002s (eta: 0:00:47)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2389/2476 0.492s + 0.002s (eta: 0:00:42)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2399/2476 0.492s + 0.002s (eta: 0:00:38)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2409/2476 0.493s + 0.002s (eta: 0:00:33)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2419/2476 0.493s + 0.002s (eta: 0:00:28)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2429/2476 0.493s + 0.002s (eta: 0:00:23)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2439/2476 0.494s + 0.002s (eta: 0:00:18)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2449/2476 0.493s + 0.002s (eta: 0:00:13)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2459/2476 0.493s + 0.002s (eta: 0:00:08)
INFO test_engine.py: 281: im_detect: range [1239, 2476] of 4952: 2469/2476 0.494s + 0.002s (eta: 0:00:03)
INFO test_engine.py: 314: Wrote detections to: /home/ubuntu/Detectron.pytorch/Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_1238_2476.pkl
/home/ubuntu/anaconda3/envs/pytorch41/lib/python3.7/site-packages/torch/nn/functional.py:1890: UserWarning: nn.functional.upsample is deprecated. Use nn.functional.interpolate instead.
  warnings.warn("nn.functional.upsample is deprecated. Use nn.functional.interpolate instead.")

INFO subprocess.py: 129: # ---------------------------------------------------------------------------- #
INFO subprocess.py: 131: stdout of subprocess 2 with range [2477, 3714]
INFO subprocess.py: 133: # ---------------------------------------------------------------------------- #
INFO test_net.py:  72: Called with args:
INFO test_net.py:  73: Namespace(cfg_file='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_config.yaml', dataset=None, load_ckpt='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step4499.pth', load_detectron=None, multi_gpu_testing=False, num_classes=None, output_dir='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test', range=[2476, 3714], set_cfgs=['TEST.DATASETS', '("voc_2007_test",)'], vis=False)
INFO test_net.py: 130: Testing with config:
INFO test_net.py: 131: {'BBOX_XFORM_CLIP': 4.135166556742356,
 'CROP_RESIZE_WITH_MAX_POOL': True,
 'CUDA': False,
 'DATA_DIR': '/home/ubuntu/Detectron.pytorch/data',
 'DATA_LOADER': {'NUM_THREADS': 4},
 'DEBUG': False,
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXPECTED_RESULTS': [],
 'EXPECTED_RESULTS_ATOL': 0.005,
 'EXPECTED_RESULTS_EMAIL': '',
 'EXPECTED_RESULTS_RTOL': 0.1,
 'FAST_RCNN': {'BOX_OUT_STREAMS': 1,
               'CONV_HEAD_DIM': 256,
               'MLP_HEAD_DIM': 1024,
               'NUM_STACKED_CONVS': 4,
               'ROI_BOX_HEAD': 'fast_rcnn_heads.roi_2mlp_head',
               'ROI_XFORM_METHOD': 'RoIAlign',
               'ROI_XFORM_RESOLUTION': 7,
               'ROI_XFORM_SAMPLING_RATIO': 2},
 'FPN': {'COARSEST_STRIDE': 32,
         'DIM': 256,
         'EXTRA_CONV_LEVELS': False,
         'FPN_ON': True,
         'MULTILEVEL_ROIS': True,
         'MULTILEVEL_RPN': True,
         'ROI_CANONICAL_LEVEL': 4,
         'ROI_CANONICAL_SCALE': 224,
         'ROI_MAX_LEVEL': 5,
         'ROI_MIN_LEVEL': 2,
         'RPN_ANCHOR_START_SIZE': 32,
         'RPN_ASPECT_RATIOS': (0.5, 1, 2),
         'RPN_COLLECT_SCALE': 1,
         'RPN_MAX_LEVEL': 6,
         'RPN_MIN_LEVEL': 2,
         'USE_GN': False,
         'ZERO_INIT_LATERAL': False},
 'GROUP_NORM': {'DIM_PER_GP': -1, 'EPSILON': 1e-05, 'NUM_GROUPS': 32},
 'KRCNN': {'CONV_HEAD_DIM': 256,
           'CONV_HEAD_KERNEL': 3,
           'CONV_INIT': 'GaussianFill',
           'DECONV_DIM': 256,
           'DECONV_KERNEL': 4,
           'DILATION': 1,
           'HEATMAP_SIZE': -1,
           'INFERENCE_MIN_SIZE': 0,
           'KEYPOINT_CONFIDENCE': 'bbox',
           'LOSS_WEIGHT': 1.0,
           'MIN_KEYPOINT_COUNT_FOR_VALID_MINIBATCH': 20,
           'NMS_OKS': False,
           'NORMALIZE_BY_VISIBLE_KEYPOINTS': True,
           'NUM_KEYPOINTS': -1,
           'NUM_STACKED_CONVS': 8,
           'ROI_KEYPOINTS_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'UP_SCALE': -1,
           'USE_DECONV': False,
           'USE_DECONV_OUTPUT': False},
 'MATLAB': 'matlab',
 'MODEL': {'BBOX_REG_WEIGHTS': (10.0, 10.0, 5.0, 5.0),
           'CLS_AGNOSTIC_BBOX_REG': False,
           'CONV_BODY': 'FPN.fpn_ResNet101_conv5_body',
           'FASTER_RCNN': True,
           'KEYPOINTS_ON': False,
           'LOAD_IMAGENET_PRETRAINED_WEIGHTS': True,
           'MASK_ON': False,
           'NUM_CLASSES': 21,
           'RPN_ONLY': False,
           'SHARE_RES5': False,
           'TYPE': 'generalized_rcnn',
           'UNSUPERVISED_POSE': False},
 'MRCNN': {'CLS_SPECIFIC_MASK': True,
           'CONV_INIT': 'GaussianFill',
           'DILATION': 2,
           'DIM_REDUCED': 256,
           'MEMORY_EFFICIENT_LOSS': True,
           'RESOLUTION': 14,
           'ROI_MASK_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'THRESH_BINARIZE': 0.5,
           'UPSAMPLE_RATIO': 1,
           'USE_FC_OUTPUT': False,
           'WEIGHT_LOSS_MASK': 1.0},
 'NUM_GPUS': 8,
 'OUTPUT_DIR': 'Outputs',
 'PIXEL_MEANS': array([[[102.9801, 115.9465, 122.7717]]]),
 'POOLING_MODE': 'crop',
 'POOLING_SIZE': 7,
 'PYTORCH_VERSION_LESS_THAN_040': False,
 'RESNETS': {'FREEZE_AT': 2,
             'IMAGENET_PRETRAINED_WEIGHTS': 'data/pretrained_model/resnet101_caffe.pth',
             'NUM_GROUPS': 1,
             'RES5_DILATION': 1,
             'SHORTCUT_FUNC': 'basic_bn_shortcut',
             'STEM_FUNC': 'basic_bn_stem',
             'STRIDE_1X1': True,
             'TRANS_FUNC': 'bottleneck_transformation',
             'USE_GN': False,
             'WIDTH_PER_GROUP': 64},
 'RETINANET': {'ANCHOR_SCALE': 4,
               'ASPECT_RATIOS': (0.5, 1.0, 2.0),
               'BBOX_REG_BETA': 0.11,
               'BBOX_REG_WEIGHT': 1.0,
               'CLASS_SPECIFIC_BBOX': False,
               'INFERENCE_TH': 0.05,
               'LOSS_ALPHA': 0.25,
               'LOSS_GAMMA': 2.0,
               'NEGATIVE_OVERLAP': 0.4,
               'NUM_CONVS': 4,
               'POSITIVE_OVERLAP': 0.5,
               'PRE_NMS_TOP_N': 1000,
               'PRIOR_PROB': 0.01,
               'RETINANET_ON': False,
               'SCALES_PER_OCTAVE': 3,
               'SHARE_CLS_BBOX_TOWER': False,
               'SOFTMAX': False},
 'RFCN': {'PS_GRID_SIZE': 3},
 'RNG_SEED': 3,
 'ROOT_DIR': '/home/ubuntu/Detectron.pytorch',
 'RPN': {'ASPECT_RATIOS': (0.5, 1, 2),
         'CLS_ACTIVATION': 'sigmoid',
         'OUT_DIM': 512,
         'OUT_DIM_AS_IN_DIM': True,
         'RPN_ON': True,
         'SIZES': (64, 128, 256, 512),
         'STRIDE': 16},
 'SOLVER': {'BASE_LR': 2e-05,
            'BIAS_DOUBLE_LR': True,
            'BIAS_WEIGHT_DECAY': False,
            'GAMMA': 0.1,
            'LOG_LR_CHANGE_THRESHOLD': 1.1,
            'LRS': [],
            'LR_POLICY': 'steps_with_decay',
            'MAX_ITER': 10000,
            'MOMENTUM': 0.9,
            'SCALE_MOMENTUM': True,
            'SCALE_MOMENTUM_THRESHOLD': 1.1,
            'STEPS': [0, 5000, 8000],
            'STEP_SIZE': 30000,
            'TYPE': 'SGD',
            'WARM_UP_FACTOR': 0.3333333333333333,
            'WARM_UP_ITERS': 500,
            'WARM_UP_METHOD': 'linear',
            'WEIGHT_DECAY': 0.0001,
            'WEIGHT_DECAY_GN': 0.0},
 'TEST': {'BBOX_AUG': {'AREA_TH_HI': 32400,
                       'AREA_TH_LO': 2500,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'COORD_HEUR': 'UNION',
                       'ENABLED': False,
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False,
                       'SCORE_HEUR': 'UNION'},
          'BBOX_REG': True,
          'BBOX_VOTE': {'ENABLED': False,
                        'SCORING_METHOD': 'ID',
                        'SCORING_METHOD_BETA': 1.0,
                        'VOTE_TH': 0.8},
          'COMPETITION_MODE': True,
          'DATASETS': ('voc_2007_test',),
          'DETECTIONS_PER_IM': 100,
          'FORCE_JSON_DATASET_EVAL': False,
          'KPS_AUG': {'AREA_TH': 32400,
                      'ASPECT_RATIOS': (),
                      'ASPECT_RATIO_H_FLIP': False,
                      'ENABLED': False,
                      'HEUR': 'HM_AVG',
                      'H_FLIP': False,
                      'MAX_SIZE': 4000,
                      'SCALES': (),
                      'SCALE_H_FLIP': False,
                      'SCALE_SIZE_DEP': False},
          'MASK_AUG': {'AREA_TH': 32400,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'ENABLED': False,
                       'HEUR': 'SOFT_AVG',
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False},
          'MAX_SIZE': 1000,
          'NMS': 0.5,
          'PRECOMPUTED_PROPOSALS': False,
          'PROPOSAL_FILES': (),
          'PROPOSAL_LIMIT': 2000,
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 1000,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALE': 600,
          'SCORE_THRESH': 0.05,
          'SOFT_NMS': {'ENABLED': False, 'METHOD': 'linear', 'SIGMA': 0.5},
          'WEAK_SUPERVISE': False},
 'TRAIN': {'ASPECT_CROPPING': False,
           'ASPECT_GROUPING': True,
           'ASPECT_HI': 2,
           'ASPECT_LO': 0.5,
           'BATCH_SIZE_PER_IM': 512,
           'BBOX_INSIDE_WEIGHTS': (1.0, 1.0, 1.0, 1.0),
           'BBOX_NORMALIZE_MEANS': (0.0, 0.0, 0.0, 0.0),
           'BBOX_NORMALIZE_STDS': (0.1, 0.1, 0.2, 0.2),
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'COPY_CLS_TO_DET': False,
           'CROWD_FILTER_THRESH': 0.7,
           'DATASETS': (),
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'FREEZE_BOX_HEAD': True,
           'FREEZE_CONV_BODY': False,
           'FREEZE_RPN': False,
           'GT_MIN_AREA': -1,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_FILES': (),
           'RPN_BATCH_SIZE_PER_IM': 256,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 2000,
           'RPN_STRADDLE_THRESH': 0,
           'SCALES': (600,),
           'SNAPSHOT_ITERS': 2000,
           'SPATIAL_REG': False,
           'USE_FLIPPED': True,
           'WEAK_SUPERVISE': True,
           'WEAK_SUPERVISE_WITH_PRETRAIN': True},
 'VIS': False,
 'VIS_TH': 0.9}
loading annotations into memory...
Done (t=0.12s)
creating index...
index created!
INFO test_engine.py: 324: training mode? : False
INFO test_engine.py: 331: loading checkpoint Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step4499.pth
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2477/3714 0.961s + 0.001s (eta: 0:19:50)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2487/3714 0.538s + 0.002s (eta: 0:11:01)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2497/3714 0.539s + 0.003s (eta: 0:10:59)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2507/3714 0.543s + 0.003s (eta: 0:10:59)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2517/3714 0.533s + 0.003s (eta: 0:10:41)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2527/3714 0.521s + 0.002s (eta: 0:10:21)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2537/3714 0.515s + 0.002s (eta: 0:10:08)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2547/3714 0.506s + 0.002s (eta: 0:09:52)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2557/3714 0.499s + 0.002s (eta: 0:09:39)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2567/3714 0.501s + 0.002s (eta: 0:09:36)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2577/3714 0.496s + 0.002s (eta: 0:09:26)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2587/3714 0.496s + 0.002s (eta: 0:09:21)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2597/3714 0.494s + 0.002s (eta: 0:09:14)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2607/3714 0.495s + 0.002s (eta: 0:09:10)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2617/3714 0.495s + 0.002s (eta: 0:09:05)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2627/3714 0.493s + 0.002s (eta: 0:08:58)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2637/3714 0.490s + 0.003s (eta: 0:08:50)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2647/3714 0.488s + 0.003s (eta: 0:08:43)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2657/3714 0.489s + 0.002s (eta: 0:08:39)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2667/3714 0.490s + 0.002s (eta: 0:08:36)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2677/3714 0.491s + 0.002s (eta: 0:08:31)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2687/3714 0.490s + 0.002s (eta: 0:08:25)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2697/3714 0.491s + 0.002s (eta: 0:08:22)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2707/3714 0.491s + 0.002s (eta: 0:08:17)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2717/3714 0.493s + 0.002s (eta: 0:08:13)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2727/3714 0.493s + 0.002s (eta: 0:08:08)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2737/3714 0.493s + 0.002s (eta: 0:08:04)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2747/3714 0.494s + 0.002s (eta: 0:07:59)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2757/3714 0.495s + 0.002s (eta: 0:07:55)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2767/3714 0.495s + 0.002s (eta: 0:07:51)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2777/3714 0.496s + 0.002s (eta: 0:07:46)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2787/3714 0.496s + 0.002s (eta: 0:07:41)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2797/3714 0.495s + 0.002s (eta: 0:07:36)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2807/3714 0.495s + 0.002s (eta: 0:07:31)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2817/3714 0.496s + 0.002s (eta: 0:07:26)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2827/3714 0.496s + 0.002s (eta: 0:07:21)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2837/3714 0.495s + 0.002s (eta: 0:07:16)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2847/3714 0.497s + 0.002s (eta: 0:07:12)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2857/3714 0.496s + 0.002s (eta: 0:07:07)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2867/3714 0.496s + 0.002s (eta: 0:07:02)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2877/3714 0.497s + 0.002s (eta: 0:06:57)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2887/3714 0.496s + 0.002s (eta: 0:06:52)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2897/3714 0.495s + 0.002s (eta: 0:06:46)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2907/3714 0.496s + 0.002s (eta: 0:06:41)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2917/3714 0.496s + 0.002s (eta: 0:06:36)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2927/3714 0.496s + 0.002s (eta: 0:06:31)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2937/3714 0.496s + 0.002s (eta: 0:06:26)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2947/3714 0.495s + 0.002s (eta: 0:06:21)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2957/3714 0.495s + 0.002s (eta: 0:06:16)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2967/3714 0.495s + 0.002s (eta: 0:06:11)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2977/3714 0.495s + 0.002s (eta: 0:06:06)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2987/3714 0.496s + 0.002s (eta: 0:06:02)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 2997/3714 0.496s + 0.002s (eta: 0:05:56)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3007/3714 0.496s + 0.002s (eta: 0:05:51)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3017/3714 0.495s + 0.002s (eta: 0:05:46)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3027/3714 0.495s + 0.002s (eta: 0:05:41)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3037/3714 0.495s + 0.002s (eta: 0:05:36)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3047/3714 0.495s + 0.002s (eta: 0:05:31)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3057/3714 0.495s + 0.002s (eta: 0:05:26)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3067/3714 0.496s + 0.002s (eta: 0:05:22)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3077/3714 0.496s + 0.002s (eta: 0:05:17)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3087/3714 0.496s + 0.002s (eta: 0:05:12)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3097/3714 0.495s + 0.002s (eta: 0:05:06)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3107/3714 0.495s + 0.002s (eta: 0:05:01)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3117/3714 0.494s + 0.002s (eta: 0:04:56)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3127/3714 0.494s + 0.002s (eta: 0:04:51)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3137/3714 0.494s + 0.002s (eta: 0:04:46)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3147/3714 0.494s + 0.002s (eta: 0:04:41)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3157/3714 0.493s + 0.002s (eta: 0:04:36)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3167/3714 0.493s + 0.002s (eta: 0:04:30)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3177/3714 0.493s + 0.002s (eta: 0:04:26)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3187/3714 0.493s + 0.002s (eta: 0:04:20)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3197/3714 0.493s + 0.002s (eta: 0:04:16)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3207/3714 0.493s + 0.002s (eta: 0:04:11)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3217/3714 0.493s + 0.002s (eta: 0:04:06)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3227/3714 0.493s + 0.002s (eta: 0:04:01)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3237/3714 0.493s + 0.002s (eta: 0:03:56)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3247/3714 0.492s + 0.002s (eta: 0:03:50)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3257/3714 0.486s + 0.002s (eta: 0:03:42)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3267/3714 0.486s + 0.002s (eta: 0:03:38)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3277/3714 0.486s + 0.002s (eta: 0:03:33)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3287/3714 0.486s + 0.002s (eta: 0:03:28)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3297/3714 0.487s + 0.002s (eta: 0:03:23)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3307/3714 0.486s + 0.002s (eta: 0:03:18)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3317/3714 0.487s + 0.002s (eta: 0:03:13)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3327/3714 0.487s + 0.002s (eta: 0:03:09)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3337/3714 0.487s + 0.002s (eta: 0:03:04)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3347/3714 0.488s + 0.002s (eta: 0:02:59)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3357/3714 0.488s + 0.002s (eta: 0:02:55)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3367/3714 0.488s + 0.002s (eta: 0:02:50)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3377/3714 0.488s + 0.002s (eta: 0:02:45)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3387/3714 0.488s + 0.002s (eta: 0:02:40)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3397/3714 0.488s + 0.002s (eta: 0:02:35)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3407/3714 0.488s + 0.002s (eta: 0:02:30)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3417/3714 0.489s + 0.002s (eta: 0:02:25)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3427/3714 0.489s + 0.002s (eta: 0:02:20)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3437/3714 0.488s + 0.002s (eta: 0:02:15)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3447/3714 0.489s + 0.002s (eta: 0:02:10)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3457/3714 0.489s + 0.002s (eta: 0:02:06)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3467/3714 0.489s + 0.002s (eta: 0:02:01)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3477/3714 0.489s + 0.002s (eta: 0:01:56)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3487/3714 0.489s + 0.002s (eta: 0:01:51)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3497/3714 0.489s + 0.002s (eta: 0:01:46)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3507/3714 0.489s + 0.002s (eta: 0:01:41)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3517/3714 0.490s + 0.002s (eta: 0:01:36)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3527/3714 0.489s + 0.002s (eta: 0:01:31)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3537/3714 0.489s + 0.002s (eta: 0:01:26)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3547/3714 0.489s + 0.002s (eta: 0:01:22)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3557/3714 0.490s + 0.002s (eta: 0:01:17)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3567/3714 0.490s + 0.002s (eta: 0:01:12)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3577/3714 0.490s + 0.002s (eta: 0:01:07)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3587/3714 0.491s + 0.002s (eta: 0:01:02)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3597/3714 0.491s + 0.002s (eta: 0:00:57)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3607/3714 0.491s + 0.002s (eta: 0:00:52)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3617/3714 0.491s + 0.002s (eta: 0:00:47)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3627/3714 0.491s + 0.002s (eta: 0:00:42)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3637/3714 0.490s + 0.002s (eta: 0:00:37)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3647/3714 0.490s + 0.002s (eta: 0:00:32)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3657/3714 0.490s + 0.002s (eta: 0:00:28)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3667/3714 0.490s + 0.002s (eta: 0:00:23)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3677/3714 0.490s + 0.002s (eta: 0:00:18)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3687/3714 0.490s + 0.002s (eta: 0:00:13)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3697/3714 0.490s + 0.002s (eta: 0:00:08)
INFO test_engine.py: 281: im_detect: range [2477, 3714] of 4952: 3707/3714 0.491s + 0.002s (eta: 0:00:03)
INFO test_engine.py: 314: Wrote detections to: /home/ubuntu/Detectron.pytorch/Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_2476_3714.pkl
/home/ubuntu/anaconda3/envs/pytorch41/lib/python3.7/site-packages/torch/nn/functional.py:1890: UserWarning: nn.functional.upsample is deprecated. Use nn.functional.interpolate instead.
  warnings.warn("nn.functional.upsample is deprecated. Use nn.functional.interpolate instead.")

INFO subprocess.py: 129: # ---------------------------------------------------------------------------- #
INFO subprocess.py: 131: stdout of subprocess 3 with range [3715, 4952]
INFO subprocess.py: 133: # ---------------------------------------------------------------------------- #
INFO test_net.py:  72: Called with args:
INFO test_net.py:  73: Namespace(cfg_file='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_config.yaml', dataset=None, load_ckpt='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step4499.pth', load_detectron=None, multi_gpu_testing=False, num_classes=None, output_dir='Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test', range=[3714, 4952], set_cfgs=['TEST.DATASETS', '("voc_2007_test",)'], vis=False)
INFO test_net.py: 130: Testing with config:
INFO test_net.py: 131: {'BBOX_XFORM_CLIP': 4.135166556742356,
 'CROP_RESIZE_WITH_MAX_POOL': True,
 'CUDA': False,
 'DATA_DIR': '/home/ubuntu/Detectron.pytorch/data',
 'DATA_LOADER': {'NUM_THREADS': 4},
 'DEBUG': False,
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXPECTED_RESULTS': [],
 'EXPECTED_RESULTS_ATOL': 0.005,
 'EXPECTED_RESULTS_EMAIL': '',
 'EXPECTED_RESULTS_RTOL': 0.1,
 'FAST_RCNN': {'BOX_OUT_STREAMS': 1,
               'CONV_HEAD_DIM': 256,
               'MLP_HEAD_DIM': 1024,
               'NUM_STACKED_CONVS': 4,
               'ROI_BOX_HEAD': 'fast_rcnn_heads.roi_2mlp_head',
               'ROI_XFORM_METHOD': 'RoIAlign',
               'ROI_XFORM_RESOLUTION': 7,
               'ROI_XFORM_SAMPLING_RATIO': 2},
 'FPN': {'COARSEST_STRIDE': 32,
         'DIM': 256,
         'EXTRA_CONV_LEVELS': False,
         'FPN_ON': True,
         'MULTILEVEL_ROIS': True,
         'MULTILEVEL_RPN': True,
         'ROI_CANONICAL_LEVEL': 4,
         'ROI_CANONICAL_SCALE': 224,
         'ROI_MAX_LEVEL': 5,
         'ROI_MIN_LEVEL': 2,
         'RPN_ANCHOR_START_SIZE': 32,
         'RPN_ASPECT_RATIOS': (0.5, 1, 2),
         'RPN_COLLECT_SCALE': 1,
         'RPN_MAX_LEVEL': 6,
         'RPN_MIN_LEVEL': 2,
         'USE_GN': False,
         'ZERO_INIT_LATERAL': False},
 'GROUP_NORM': {'DIM_PER_GP': -1, 'EPSILON': 1e-05, 'NUM_GROUPS': 32},
 'KRCNN': {'CONV_HEAD_DIM': 256,
           'CONV_HEAD_KERNEL': 3,
           'CONV_INIT': 'GaussianFill',
           'DECONV_DIM': 256,
           'DECONV_KERNEL': 4,
           'DILATION': 1,
           'HEATMAP_SIZE': -1,
           'INFERENCE_MIN_SIZE': 0,
           'KEYPOINT_CONFIDENCE': 'bbox',
           'LOSS_WEIGHT': 1.0,
           'MIN_KEYPOINT_COUNT_FOR_VALID_MINIBATCH': 20,
           'NMS_OKS': False,
           'NORMALIZE_BY_VISIBLE_KEYPOINTS': True,
           'NUM_KEYPOINTS': -1,
           'NUM_STACKED_CONVS': 8,
           'ROI_KEYPOINTS_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'UP_SCALE': -1,
           'USE_DECONV': False,
           'USE_DECONV_OUTPUT': False},
 'MATLAB': 'matlab',
 'MODEL': {'BBOX_REG_WEIGHTS': (10.0, 10.0, 5.0, 5.0),
           'CLS_AGNOSTIC_BBOX_REG': False,
           'CONV_BODY': 'FPN.fpn_ResNet101_conv5_body',
           'FASTER_RCNN': True,
           'KEYPOINTS_ON': False,
           'LOAD_IMAGENET_PRETRAINED_WEIGHTS': True,
           'MASK_ON': False,
           'NUM_CLASSES': 21,
           'RPN_ONLY': False,
           'SHARE_RES5': False,
           'TYPE': 'generalized_rcnn',
           'UNSUPERVISED_POSE': False},
 'MRCNN': {'CLS_SPECIFIC_MASK': True,
           'CONV_INIT': 'GaussianFill',
           'DILATION': 2,
           'DIM_REDUCED': 256,
           'MEMORY_EFFICIENT_LOSS': True,
           'RESOLUTION': 14,
           'ROI_MASK_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'THRESH_BINARIZE': 0.5,
           'UPSAMPLE_RATIO': 1,
           'USE_FC_OUTPUT': False,
           'WEIGHT_LOSS_MASK': 1.0},
 'NUM_GPUS': 8,
 'OUTPUT_DIR': 'Outputs',
 'PIXEL_MEANS': array([[[102.9801, 115.9465, 122.7717]]]),
 'POOLING_MODE': 'crop',
 'POOLING_SIZE': 7,
 'PYTORCH_VERSION_LESS_THAN_040': False,
 'RESNETS': {'FREEZE_AT': 2,
             'IMAGENET_PRETRAINED_WEIGHTS': 'data/pretrained_model/resnet101_caffe.pth',
             'NUM_GROUPS': 1,
             'RES5_DILATION': 1,
             'SHORTCUT_FUNC': 'basic_bn_shortcut',
             'STEM_FUNC': 'basic_bn_stem',
             'STRIDE_1X1': True,
             'TRANS_FUNC': 'bottleneck_transformation',
             'USE_GN': False,
             'WIDTH_PER_GROUP': 64},
 'RETINANET': {'ANCHOR_SCALE': 4,
               'ASPECT_RATIOS': (0.5, 1.0, 2.0),
               'BBOX_REG_BETA': 0.11,
               'BBOX_REG_WEIGHT': 1.0,
               'CLASS_SPECIFIC_BBOX': False,
               'INFERENCE_TH': 0.05,
               'LOSS_ALPHA': 0.25,
               'LOSS_GAMMA': 2.0,
               'NEGATIVE_OVERLAP': 0.4,
               'NUM_CONVS': 4,
               'POSITIVE_OVERLAP': 0.5,
               'PRE_NMS_TOP_N': 1000,
               'PRIOR_PROB': 0.01,
               'RETINANET_ON': False,
               'SCALES_PER_OCTAVE': 3,
               'SHARE_CLS_BBOX_TOWER': False,
               'SOFTMAX': False},
 'RFCN': {'PS_GRID_SIZE': 3},
 'RNG_SEED': 3,
 'ROOT_DIR': '/home/ubuntu/Detectron.pytorch',
 'RPN': {'ASPECT_RATIOS': (0.5, 1, 2),
         'CLS_ACTIVATION': 'sigmoid',
         'OUT_DIM': 512,
         'OUT_DIM_AS_IN_DIM': True,
         'RPN_ON': True,
         'SIZES': (64, 128, 256, 512),
         'STRIDE': 16},
 'SOLVER': {'BASE_LR': 2e-05,
            'BIAS_DOUBLE_LR': True,
            'BIAS_WEIGHT_DECAY': False,
            'GAMMA': 0.1,
            'LOG_LR_CHANGE_THRESHOLD': 1.1,
            'LRS': [],
            'LR_POLICY': 'steps_with_decay',
            'MAX_ITER': 10000,
            'MOMENTUM': 0.9,
            'SCALE_MOMENTUM': True,
            'SCALE_MOMENTUM_THRESHOLD': 1.1,
            'STEPS': [0, 5000, 8000],
            'STEP_SIZE': 30000,
            'TYPE': 'SGD',
            'WARM_UP_FACTOR': 0.3333333333333333,
            'WARM_UP_ITERS': 500,
            'WARM_UP_METHOD': 'linear',
            'WEIGHT_DECAY': 0.0001,
            'WEIGHT_DECAY_GN': 0.0},
 'TEST': {'BBOX_AUG': {'AREA_TH_HI': 32400,
                       'AREA_TH_LO': 2500,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'COORD_HEUR': 'UNION',
                       'ENABLED': False,
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False,
                       'SCORE_HEUR': 'UNION'},
          'BBOX_REG': True,
          'BBOX_VOTE': {'ENABLED': False,
                        'SCORING_METHOD': 'ID',
                        'SCORING_METHOD_BETA': 1.0,
                        'VOTE_TH': 0.8},
          'COMPETITION_MODE': True,
          'DATASETS': ('voc_2007_test',),
          'DETECTIONS_PER_IM': 100,
          'FORCE_JSON_DATASET_EVAL': False,
          'KPS_AUG': {'AREA_TH': 32400,
                      'ASPECT_RATIOS': (),
                      'ASPECT_RATIO_H_FLIP': False,
                      'ENABLED': False,
                      'HEUR': 'HM_AVG',
                      'H_FLIP': False,
                      'MAX_SIZE': 4000,
                      'SCALES': (),
                      'SCALE_H_FLIP': False,
                      'SCALE_SIZE_DEP': False},
          'MASK_AUG': {'AREA_TH': 32400,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'ENABLED': False,
                       'HEUR': 'SOFT_AVG',
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False},
          'MAX_SIZE': 1000,
          'NMS': 0.5,
          'PRECOMPUTED_PROPOSALS': False,
          'PROPOSAL_FILES': (),
          'PROPOSAL_LIMIT': 2000,
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 1000,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALE': 600,
          'SCORE_THRESH': 0.05,
          'SOFT_NMS': {'ENABLED': False, 'METHOD': 'linear', 'SIGMA': 0.5},
          'WEAK_SUPERVISE': False},
 'TRAIN': {'ASPECT_CROPPING': False,
           'ASPECT_GROUPING': True,
           'ASPECT_HI': 2,
           'ASPECT_LO': 0.5,
           'BATCH_SIZE_PER_IM': 512,
           'BBOX_INSIDE_WEIGHTS': (1.0, 1.0, 1.0, 1.0),
           'BBOX_NORMALIZE_MEANS': (0.0, 0.0, 0.0, 0.0),
           'BBOX_NORMALIZE_STDS': (0.1, 0.1, 0.2, 0.2),
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'COPY_CLS_TO_DET': False,
           'CROWD_FILTER_THRESH': 0.7,
           'DATASETS': (),
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'FREEZE_BOX_HEAD': True,
           'FREEZE_CONV_BODY': False,
           'FREEZE_RPN': False,
           'GT_MIN_AREA': -1,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_FILES': (),
           'RPN_BATCH_SIZE_PER_IM': 256,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 2000,
           'RPN_STRADDLE_THRESH': 0,
           'SCALES': (600,),
           'SNAPSHOT_ITERS': 2000,
           'SPATIAL_REG': False,
           'USE_FLIPPED': True,
           'WEAK_SUPERVISE': True,
           'WEAK_SUPERVISE_WITH_PRETRAIN': True},
 'VIS': False,
 'VIS_TH': 0.9}
loading annotations into memory...
Done (t=0.10s)
creating index...
index created!
INFO test_engine.py: 324: training mode? : False
INFO test_engine.py: 331: loading checkpoint Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/ckpt/model_step4499.pth
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3715/4952 0.799s + 0.001s (eta: 0:16:29)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3725/4952 0.476s + 0.001s (eta: 0:09:46)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3735/4952 0.486s + 0.002s (eta: 0:09:53)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3745/4952 0.492s + 0.002s (eta: 0:09:55)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3755/4952 0.487s + 0.002s (eta: 0:09:45)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3765/4952 0.484s + 0.002s (eta: 0:09:36)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3775/4952 0.478s + 0.002s (eta: 0:09:24)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3785/4952 0.480s + 0.002s (eta: 0:09:22)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3795/4952 0.477s + 0.002s (eta: 0:09:14)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3805/4952 0.483s + 0.002s (eta: 0:09:15)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3815/4952 0.482s + 0.002s (eta: 0:09:09)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3825/4952 0.483s + 0.002s (eta: 0:09:06)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3835/4952 0.482s + 0.002s (eta: 0:08:59)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3845/4952 0.480s + 0.002s (eta: 0:08:53)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3855/4952 0.482s + 0.002s (eta: 0:08:50)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3865/4952 0.481s + 0.002s (eta: 0:08:45)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3875/4952 0.481s + 0.002s (eta: 0:08:39)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3885/4952 0.482s + 0.002s (eta: 0:08:35)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3895/4952 0.482s + 0.002s (eta: 0:08:31)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3905/4952 0.484s + 0.002s (eta: 0:08:28)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3915/4952 0.485s + 0.002s (eta: 0:08:24)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3925/4952 0.485s + 0.002s (eta: 0:08:20)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3935/4952 0.486s + 0.002s (eta: 0:08:16)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3945/4952 0.485s + 0.002s (eta: 0:08:10)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3955/4952 0.486s + 0.002s (eta: 0:08:06)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3965/4952 0.487s + 0.002s (eta: 0:08:02)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3975/4952 0.486s + 0.002s (eta: 0:07:56)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3985/4952 0.487s + 0.002s (eta: 0:07:52)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 3995/4952 0.486s + 0.002s (eta: 0:07:47)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4005/4952 0.488s + 0.002s (eta: 0:07:43)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4015/4952 0.488s + 0.002s (eta: 0:07:39)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4025/4952 0.491s + 0.002s (eta: 0:07:37)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4035/4952 0.493s + 0.002s (eta: 0:07:33)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4045/4952 0.494s + 0.002s (eta: 0:07:29)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4055/4952 0.494s + 0.002s (eta: 0:07:24)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4065/4952 0.494s + 0.002s (eta: 0:07:20)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4075/4952 0.493s + 0.002s (eta: 0:07:13)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4085/4952 0.493s + 0.002s (eta: 0:07:09)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4095/4952 0.492s + 0.002s (eta: 0:07:03)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4105/4952 0.493s + 0.002s (eta: 0:06:59)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4115/4952 0.493s + 0.002s (eta: 0:06:53)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4125/4952 0.492s + 0.002s (eta: 0:06:48)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4135/4952 0.492s + 0.002s (eta: 0:06:43)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4145/4952 0.492s + 0.002s (eta: 0:06:38)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4155/4952 0.492s + 0.002s (eta: 0:06:33)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4165/4952 0.493s + 0.002s (eta: 0:06:29)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4175/4952 0.492s + 0.002s (eta: 0:06:24)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4185/4952 0.492s + 0.002s (eta: 0:06:19)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4195/4952 0.492s + 0.002s (eta: 0:06:13)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4205/4952 0.491s + 0.002s (eta: 0:06:08)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4215/4952 0.491s + 0.002s (eta: 0:06:03)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4225/4952 0.491s + 0.002s (eta: 0:05:58)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4235/4952 0.491s + 0.002s (eta: 0:05:53)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4245/4952 0.491s + 0.002s (eta: 0:05:48)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4255/4952 0.491s + 0.002s (eta: 0:05:43)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4265/4952 0.491s + 0.002s (eta: 0:05:38)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4275/4952 0.492s + 0.002s (eta: 0:05:34)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4285/4952 0.492s + 0.002s (eta: 0:05:29)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4295/4952 0.493s + 0.002s (eta: 0:05:25)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4305/4952 0.492s + 0.002s (eta: 0:05:19)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4315/4952 0.493s + 0.002s (eta: 0:05:15)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4325/4952 0.493s + 0.002s (eta: 0:05:10)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4335/4952 0.493s + 0.002s (eta: 0:05:05)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4345/4952 0.493s + 0.002s (eta: 0:05:00)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4355/4952 0.493s + 0.002s (eta: 0:04:55)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4365/4952 0.493s + 0.002s (eta: 0:04:50)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4375/4952 0.493s + 0.002s (eta: 0:04:45)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4385/4952 0.492s + 0.002s (eta: 0:04:40)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4395/4952 0.492s + 0.002s (eta: 0:04:35)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4405/4952 0.493s + 0.002s (eta: 0:04:30)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4415/4952 0.492s + 0.002s (eta: 0:04:25)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4425/4952 0.493s + 0.002s (eta: 0:04:20)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4435/4952 0.492s + 0.002s (eta: 0:04:15)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4445/4952 0.492s + 0.002s (eta: 0:04:10)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4455/4952 0.493s + 0.002s (eta: 0:04:05)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4465/4952 0.492s + 0.002s (eta: 0:04:00)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4475/4952 0.492s + 0.002s (eta: 0:03:55)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4485/4952 0.491s + 0.002s (eta: 0:03:50)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4495/4952 0.489s + 0.002s (eta: 0:03:44)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4505/4952 0.489s + 0.002s (eta: 0:03:39)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4515/4952 0.489s + 0.002s (eta: 0:03:34)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4525/4952 0.489s + 0.002s (eta: 0:03:29)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4535/4952 0.489s + 0.002s (eta: 0:03:24)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4545/4952 0.489s + 0.002s (eta: 0:03:19)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4555/4952 0.490s + 0.002s (eta: 0:03:15)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4565/4952 0.490s + 0.002s (eta: 0:03:10)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4575/4952 0.491s + 0.002s (eta: 0:03:05)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4585/4952 0.491s + 0.002s (eta: 0:03:00)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4595/4952 0.491s + 0.002s (eta: 0:02:55)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4605/4952 0.491s + 0.002s (eta: 0:02:51)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4615/4952 0.491s + 0.002s (eta: 0:02:46)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4625/4952 0.491s + 0.002s (eta: 0:02:41)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4635/4952 0.491s + 0.002s (eta: 0:02:36)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4645/4952 0.490s + 0.002s (eta: 0:02:31)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4655/4952 0.490s + 0.002s (eta: 0:02:26)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4665/4952 0.490s + 0.002s (eta: 0:02:21)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4675/4952 0.490s + 0.002s (eta: 0:02:16)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4685/4952 0.490s + 0.002s (eta: 0:02:11)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4695/4952 0.490s + 0.002s (eta: 0:02:06)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4705/4952 0.490s + 0.002s (eta: 0:02:01)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4715/4952 0.490s + 0.002s (eta: 0:01:56)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4725/4952 0.490s + 0.002s (eta: 0:01:51)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4735/4952 0.490s + 0.002s (eta: 0:01:46)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4745/4952 0.490s + 0.002s (eta: 0:01:41)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4755/4952 0.491s + 0.002s (eta: 0:01:37)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4765/4952 0.491s + 0.002s (eta: 0:01:32)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4775/4952 0.491s + 0.002s (eta: 0:01:27)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4785/4952 0.490s + 0.002s (eta: 0:01:22)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4795/4952 0.490s + 0.002s (eta: 0:01:17)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4805/4952 0.490s + 0.002s (eta: 0:01:12)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4815/4952 0.490s + 0.002s (eta: 0:01:07)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4825/4952 0.490s + 0.002s (eta: 0:01:02)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4835/4952 0.490s + 0.002s (eta: 0:00:57)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4845/4952 0.490s + 0.002s (eta: 0:00:52)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4855/4952 0.490s + 0.002s (eta: 0:00:47)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4865/4952 0.491s + 0.002s (eta: 0:00:42)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4875/4952 0.491s + 0.002s (eta: 0:00:37)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4885/4952 0.491s + 0.002s (eta: 0:00:33)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4895/4952 0.491s + 0.002s (eta: 0:00:28)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4905/4952 0.491s + 0.002s (eta: 0:00:23)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4915/4952 0.491s + 0.002s (eta: 0:00:18)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4925/4952 0.492s + 0.002s (eta: 0:00:13)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4935/4952 0.492s + 0.002s (eta: 0:00:08)
INFO test_engine.py: 281: im_detect: range [3715, 4952] of 4952: 4945/4952 0.492s + 0.002s (eta: 0:00:03)
INFO test_engine.py: 314: Wrote detections to: /home/ubuntu/Detectron.pytorch/Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detection_range_3714_4952.pkl
/home/ubuntu/anaconda3/envs/pytorch41/lib/python3.7/site-packages/torch/nn/functional.py:1890: UserWarning: nn.functional.upsample is deprecated. Use nn.functional.interpolate instead.
  warnings.warn("nn.functional.upsample is deprecated. Use nn.functional.interpolate instead.")

INFO test_engine.py: 211: Wrote detections to: /home/ubuntu/Detectron.pytorch/Outputs/e2e_faster_rcnn_R-101-FPN_clipart_weakly_1stream_noreg_freeze-boxhead_unlock-rpn-conv/Nov13-17-06-52_ip-172-31-8-158_step/test/detections.pkl
INFO test_engine.py: 161: Total inference time: 640.082s
INFO task_evaluation.py:  77: Evaluating detections
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: aeroplane
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: bicycle
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: bird
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: boat
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: bottle
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: bus
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: car
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: cat
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: chair
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: cow
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: diningtable
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: dog
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: horse
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: motorbike
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: person
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: pottedplant
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: sheep
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: sofa
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: train
INFO voc_dataset_evaluator.py:  74: Writing VOC results for: tvmonitor
INFO voc_dataset_evaluator.py: 115: VOC07 metric? Yes
INFO voc_eval.py: 171: [1075 1112  643 ...  851  506 1236]
INFO voc_dataset_evaluator.py: 127: AP for aeroplane = 0.7740
INFO voc_eval.py: 171: [267  34 173 ... 228 630 465]
INFO voc_dataset_evaluator.py: 127: AP for bicycle = 0.7900
INFO voc_eval.py: 171: [1136 1470 2008 ...  540   81 1658]
INFO voc_dataset_evaluator.py: 127: AP for bird = 0.7909
INFO voc_eval.py: 171: [1454 2071   71 ...  809 2049 2159]
INFO voc_dataset_evaluator.py: 127: AP for boat = 0.6221
INFO voc_eval.py: 171: [ 955 1805  612 ...   94 2337 1480]
INFO voc_dataset_evaluator.py: 127: AP for bottle = 0.6773
INFO voc_eval.py: 171: [326 844 275 522 816 868 493 689 212 135 476 699 595 220   4  28 207  86
 763  18 105 629 264 412 142 734 451  74  35 544 292 842 650 654 790 779
 856 690 463 640 783 586 196 633 657 496 847 416 688 439 714 381 613  33
  79  83  56 128 553 745 566 536 806 671 781  52 187 529 561  84 251 406
 122 506 728 234  23 721 183 762 314 885 593 289 432 729  70 481 539 164
 360 355 730 386 646  36 379 612 175 452 821 399 478 345 150 278 395 177
 871 853 527 782 791 662 577 266 132 300 116 651 715 825 832 510  20 423
 627 186  60 859 224 115 341 822 312 785 446 211 846 713 562 250 306 770
 537 514 192 515 661 475 394 484 803 222 317 528 489 565 378   1 460 179
 807 380 429 548 680 244 296 282 700 555 618 511 368 200  14 335 751 316
 470 773 268 356 497 599 760 647 351 789 828 532 239 691 585 556 659  19
 569 596 861  67 628 202 600   0 294 283 513 402 258 875 405 554 712  97
 794 608 473 176 254 743  53  76 502 340 143 408 417 490 571 347 677 637
 787 245  81 804 739 491 286 552 480 430 687 653 136 424 184 377 280 407
 396 563 303 441 839 165 392 431 818 863 106 270 359 705  30 748 158 820
 771 636 236 147 267 761 198 449 315 836 140 169 130 112 401 348 872  87
 870 682 860 259 685  57 558 724 459 349 672 131  11 240 166 462 534 225
 436 414 500 271  64 609 137 369  88 427 230 867 703  44  78 191 735  37
 126 843 138 710 133 221 866 670 358   6 448 174 173 357 674 467 731 226
 655 366 597  34 159 103 723 750 581 129 838 235 621 343 642 231 453 858
 388 746 170   9 361 148 102  65 827 641 188  10 645 698 658 598  29 572
 155 716 265   5  58 855 403 706 321 384 233 679 114 681 124 580 663  91
 570 810 538 683 884 178 749 525 354 620  40 487 874 485 160 878 218 118
  26 753 299 304 707 336 614 247 241 631 468 227 153 297 209  80  77  27
 664 346 711 434 666 829 161 503  82 686 206 370 520  55 411 535 313 330
 419 180 668 104 111 616 110 841 594 290 260 223 243   8 248 339 801 445
 709 837 786 523 443 113  31 101 162 293 433 812 404 815 194 305  12 479
 181 656 742 246  48 625  39 421 219 440 669 383 301 798 697 331 758  45
 338 310 718 205 232 438 720 272 835 643  71 817 788 701 444 333 492 584
 458 410 418  62 504 382  24 325 589 167 398 318 291 277 146 324 813 100
 542 602 626 499 362 756 576 765 648 883 185 574 123 108 573 635 197 334
 622 498 328 465 353  69 213 725 295 308  21 592 704 808  49 517 413  16
 456 678 639 811 880 673 541 141 371 269  42 849 285 447 488  22 736 518
 531 507  73 772 389 759 151 229 168 107  96 435 284 152 726 195 454 619
 732 298 145 474 109 615 337 215 365 857  17 276 766 550 660 799 802 363
 329 494 850  13 274  90 415 862 737 530 385 320 568  95 869 588 519 508
 852 826 755 579  99 422  59 154 409 752 397 390 255 733  98 263 228 797
 242 437  93 526 210 624 702 545 708  41 193 237 172 887 281 156  94 757
 819 769 638 738  61 127  75 814  89 252 796 877 287  85 764 350 604 551
 564  43 302 288 471 477 216  68 590 692 426 606 464 323 374 741 567 201
 483 501 831 428 696 393 694 182 805 249 649 695 747 665  50 367 461 273
 605 873 879 809 775   3  66 543 546 864 208 722 163 575 578 644 540 754
  54 214  47  92 684 865 204 795   7 450 607 342 632 886 740 391  72 512
 238 800 833 157 516  38 630 256 327 777 776  25 117 583 373 774 199 262
 591 547 559 486  46 533 469 472 793 676 603 372 364 332 587 717 344 203
 149 509 601 824 611 261 253  15 557 322 675 727 882 387 482 442 495 693
 834 189 466 767 881 634  32 848 352 144 768  63 610   2 524 560 876 217
 134 652 830 125 667 549 257 623 171 784 190 279 617 420  51 780 120 521
 119 376 375 778 582 425 455 744 139 823 307 845 121 854 311 319 457 840
 792 505 309 400 851 719]
INFO voc_dataset_evaluator.py: 127: AP for bus = 0.7908
INFO voc_eval.py: 171: [3626 4782 4173 ...   51 5391 4027]
INFO voc_dataset_evaluator.py: 127: AP for car = 0.8602
INFO voc_eval.py: 171: [ 856  970  934 ...  157    4 1257]
INFO voc_dataset_evaluator.py: 127: AP for cat = 0.8555
INFO voc_eval.py: 171: [ 138 3216  137 ... 3230 4711 3437]
INFO voc_dataset_evaluator.py: 127: AP for chair = 0.6181
INFO voc_eval.py: 171: [ 755 1597 1314 ...  822 1149  186]
INFO voc_dataset_evaluator.py: 127: AP for cow = 0.7736
INFO voc_eval.py: 171: [1044  624 2833 ... 2763 1572 2026]
INFO voc_dataset_evaluator.py: 127: AP for diningtable = 0.6028
INFO voc_eval.py: 171: [ 435  112 1101 ... 1124 1274  981]
INFO voc_dataset_evaluator.py: 127: AP for dog = 0.8184
INFO voc_eval.py: 171: [ 148   27  504 ... 1407 1552  596]
INFO voc_dataset_evaluator.py: 127: AP for horse = 0.8302
INFO voc_eval.py: 171: [900 265 183 237 301 114 824 140 142 445  45 872 458 264 150 546 708 158
 801 429 610 155  87 176 779 119 374 450 462 594 359 254  46 105 843 686
 835 572 283 371 502 790 701 419 571 606 243 871 112 201 808 101 248 826
 122  62  81 131 733 777 857   5 774 312 752 184 401 862 516 327 771 467
 573 135 866 534  75 907 175 822 508 115 820 436 542 225 930 353 172 382
 755 128 330 541 267 841 869 282 518 303 729 505 308  77  40 693 485 178
 803 524 561 241  72 667 849 506 358 222 372  26 177 438 437 767 653 510
 662 318 486 492 577 858 827 120 712  10 381 294 599 645 922 638 213 784
 444 523 880 726 498 535  57 891   8 898 567 255 870 739 902  36 415 375
 165 692 207 748 811 465 527 530 536 173 472 613  56  59 896 102 881 718
 193 377 644 836 629   3 288 888 611 760 525 321 526 380 188 609 412 187
 625 740 622 333 853 905 442 245 569 246 389 194 147   6 586 554 744 354
 560 831 612 579 367 537 206  96 875  28 882 272 659 899 499 383 647  74
 815 515 336 631 352 317 511 574 211 716 217 332 373 218 304 403 724 215
 833 402 654 284  92  70 628 421 745 781 646 924  78  53 496 772 299 917
 113 619 757 169 322 521 509 400 770 335 703 852 892 407 296 501  55 167
 680 443 796 580 420 378  98 920 399 464 552 370 337  39 617  99 845  64
 639  69 362 709 840 221 633 251 785 186 717 426 503 182 271 855 878 913
 363 651 295 782 879 884  71 151  67 297  91 570   2 736 695 124 200 520
 670 417 143 746 110 793 713  12 191 797 174 489 926 431 807 764 887 914
 850 285 517 688 804 144 558 204 379 909 320 493 908 865 642  76 765 786
 342 648 706 715 259 923 164 868 903 425 364 310 614  18 103 163 590 856
 783 451 229 315 576 368 538 205   1 233 257 682 422  60 761 861 446 666
 203 812 454 483 324 439 751 268 230 848 773 789 864  20 307 704 669 635
 126 696 513 719 289 893 463 553 615 132 488 616 475 121 819 725 507 742
 239 604 234 149 559  27 678 309 694 447 474 263 867 100 632 705 722 839
 199 522  82 387 384 252 148 497 223 904 700 116 550 484 404 290 275 918
 305 386   9 192  97 863 584 162 780 391 618 529 834 799 714 396  80 787
  43 658 828 756 596 457 592 915 329  61 152 691 328 758 430 514 601 323
 107 414 776 504 341  32 331 581 817 925 212 806 741 547 423 897 185  49
  37  79 814 597  17 711 749 587 728 578 623 118 471 555 687 531 130 643
 602 575 269 495 621 750 766 390   7 456 227 737 846 663 108 356 346 710
  13 291 762 600 532 369 153 280 721 210 582  89 608 395 139 738 685  25
 677 480 487  14 672 894 565 763 679  94  35 482 699 673 791 634 349 630
 556 519  50 347 180 311 805 410 665 449 216 816 313 156 319 448 911 931
 500  41 240  38 441 649 351 461 809 325 637 261 533  33 859  47 393 219
 921 674 196 435 928 683 551 671 279 754  19 397 585 481 266 281 170 226
 361 473 734 802 588 214 916  85 293 357 769 286 707  16 874 424 159 314
 433 844  22 598 886 350 562 657  63 292  23 365 919 166 145 727 232 627
 106 876 747 278   0 684  73 901 681 208 453 366 563 640 566 195 800 491
 788 528 238 416 160 141 287 466  44 564  95 244 676 276 650 732 607   4
 129  11 117 316 326 821 459  58 847 929 157 636 262 235 702 209 829 340
 468 123 690 818 591 428 427 413 385 479 810 138 125 720  34  30 660 260
 274  21 655 656 202 161 860 137 548 478 409 334 543 270  83 355  52 490
  48 256 405 231 906 406 197 388 698 181 854 469 593 557 823 668  42 398
 302 360 189 620 652 249 539 890 168 306 300 220 134 228 641  15 111 247
 171 689 348  66 837 236 912 830 825 697 545 242 851 146  51 589 476 838
 258  31 798 595 753 512 927  86 109 735 813  24 136 768 339 470 759  93
 743 250 723 730 104 190 792  84 392 179 477 568 494 277 440 344 731 343
 432 605 661 455  68 338 877 675  29 408 603 583 778 885 298 544 224 345
 154 895 273 434 452 842 198  88 873 624 775 460 418  90 411 376  65 549
 394 626 664 540 883 795 910 127 889 133 832 253  54 794]
INFO voc_dataset_evaluator.py: 127: AP for motorbike = 0.7249
INFO voc_eval.py: 171: [ 2823 18888  8889 ...  1131  7381  8823]
INFO voc_dataset_evaluator.py: 127: AP for person = 0.8369
INFO voc_eval.py: 171: [1872  260 2308 ... 2099 2011 1853]
INFO voc_dataset_evaluator.py: 127: AP for pottedplant = 0.4612
INFO voc_eval.py: 171: [ 556 1508  288 ... 1114 1513  645]
INFO voc_dataset_evaluator.py: 127: AP for sheep = 0.7546
INFO voc_eval.py: 171: [1220  813  960 ... 1546 1412  672]
INFO voc_dataset_evaluator.py: 127: AP for sofa = 0.6949
INFO voc_eval.py: 171: [ 164  510 1196 ...   48 1242 1133]
INFO voc_dataset_evaluator.py: 127: AP for train = 0.7651
INFO voc_eval.py: 171: [423 249 631 555 276  90 644  56 528 204 402  19 368 158 421 742 200 339
 454  87 404 219 453 107 418 168 619 618 397 232 262 497 527 439 513  33
 536 683  39 426  73 222 198 606 238 142 333 209 150  91 697 374 308 645
 759 441 144 712 151 651 130 635 300 427 101 516 471 131 227 330 745 447
 623 515  53  61 299 696  70 672 725 405 268 468 273 354  16 531 356 461
 567 106 656 768 119   5 271 649  81 254  13 615 640   8 469 599 127 306
 361 255  71 114 155 153  43 357 117 526  95 482 275 561   4 448  20 708
  68 621 728 694 616 406 629 229 723 147  38 399 408 280 407 163  83 437
 751 120 318 450 716 505 470   1 351  98 387 586 699 776 398 632 281  82
 593 292 371 589 726  60 653 140 432 256 182 112 492 260 568 625 440 639
 553 754 734 322 116  78 661 529 735 491 328 566 762 760 111 380 772 178
 731 559  67 476 570 596 674 286 376 385 170 364 415 277 654 137 298 212
 519 549 730 668  88 340 499  76 162 733 165 636 443 451 187 195 634 372
 652 537 777 576 600  31 436 335  75 677  59 521 739 544 278 738 679 312
 282 434   2 205 389 152 342 400 304 444 379 218 194 571  22 729 479 392
 302 337 381 235 172 688 288 115 314 493 750 659  80   9  99 685 128 377
 710 373 495 517 686 646 175 707 577 472 514 169 556 757 522  32  63 317
 104 173 132 603 484  44 177 171 449 498 747 704 626  46 253 662 214 185
 105 458 642 359 240 520  92 758 541 428 210 720 201 551 548 134  84 663
 270 325 778 755 490 771 657 709 343 525 583 420  96 156 486  93 591 303
 243 669 494  50 138  29 305  64 378 602 764 384 269 743 429 414 395 122
 588 341  41 460 565 319 189 462   3  30  15  49 614 394 749 550 648 166
 702 574 638 446  89 452 320 746 769 509 597 207 587 690 592 530 148 590
 660 311 102 481 630 442 231 197 239 545 183 331 535 355 362 393 289 174
 701 413 655 727 108 569 206 748   6 284 504 290 388 123 103  77 410 135
 369 347 675 547 691 433 617 564 221  36 291 375 424 334 129 215 665 647
 543 217 191 719 483 744 118 283 689 309 622 143 510  52 572 763 705 485
 761 627 680 700 610 425 409 703 344 391 367  47 157 503 532  58 338 713
 650 684 184  28 457 258 236 741 370 643 765 382  25 633 293 272 666 274
 465 775 717 141  85 403 562 732 100 533 711 121 196 313  69 241  40 199
 670 478 145 456 773 149  21 244 473 353  45 133 234   7 678  86 671 582
 438 552 164 724 585 459 176 136 245 316 208 202 109  74 523 612  26  18
 604 718  97 323 540 538 676 154  14 417 327 181 518 714 430 336 682 554
 416 352 139  34 179 637 500 546 474 756 365 419 265  51 321 467 455 257
 159   0 213 125 753 560 609 422 489 667 613 267 126 487 488 466 774 250
 581 161 124 233  57 190 390 307  62 411 412 435  54 496 220 508 580 160
 188 512 770 264 534 266 346 740  24 736  12 180 386 263 608 524 360 563
 737 246  11 324 767 248 558 310 698 752 511 226 658 611 628  10 294 192
 230 251 113 203  66 110 401 279 506 345 167 363 431 348 624 349 295 224
 252  55 464 620 584 223 287 721 715 673 507 595  48 601 706 211  72 296
 579 722 315 573  27 445 502 578 186 146 598 329 358 350  94  35 242 695
  79 557 501 605 259 477 539 366 594  42 332 383 301 237 261 480 693 681
  65 575 687 664 641 463 542 475  17 225 692  37 285  23 216 193 297 766
 326 247 396 228 607]
INFO voc_dataset_evaluator.py: 127: AP for tvmonitor = 0.7216
INFO voc_dataset_evaluator.py: 130: Mean AP = 0.7382
INFO voc_dataset_evaluator.py: 131: ~~~~~~~~
INFO voc_dataset_evaluator.py: 132: Results:
INFO voc_dataset_evaluator.py: 134: 0.774
INFO voc_dataset_evaluator.py: 134: 0.790
INFO voc_dataset_evaluator.py: 134: 0.791
INFO voc_dataset_evaluator.py: 134: 0.622
INFO voc_dataset_evaluator.py: 134: 0.677
INFO voc_dataset_evaluator.py: 134: 0.791
INFO voc_dataset_evaluator.py: 134: 0.860
INFO voc_dataset_evaluator.py: 134: 0.856
INFO voc_dataset_evaluator.py: 134: 0.618
INFO voc_dataset_evaluator.py: 134: 0.774
INFO voc_dataset_evaluator.py: 134: 0.603
INFO voc_dataset_evaluator.py: 134: 0.818
INFO voc_dataset_evaluator.py: 134: 0.830
INFO voc_dataset_evaluator.py: 134: 0.725
INFO voc_dataset_evaluator.py: 134: 0.837
INFO voc_dataset_evaluator.py: 134: 0.461
INFO voc_dataset_evaluator.py: 134: 0.755
INFO voc_dataset_evaluator.py: 134: 0.695
INFO voc_dataset_evaluator.py: 134: 0.765
INFO voc_dataset_evaluator.py: 134: 0.722
INFO voc_dataset_evaluator.py: 135: 0.738
INFO voc_dataset_evaluator.py: 136: ~~~~~~~~
INFO voc_dataset_evaluator.py: 137: 
INFO voc_dataset_evaluator.py: 138: ----------------------------------------------------------
INFO voc_dataset_evaluator.py: 139: Results computed with the **unofficial** Python eval code.
INFO voc_dataset_evaluator.py: 140: Results should be very close to the official MATLAB code.
INFO voc_dataset_evaluator.py: 141: Use `./tools/reval.py --matlab ...` for your paper.
INFO voc_dataset_evaluator.py: 142: -- Thanks, The Management
INFO voc_dataset_evaluator.py: 143: ----------------------------------------------------------
INFO task_evaluation.py:  63: Evaluating bounding boxes is done!
INFO task_evaluation.py: 189: copypaste: Dataset: voc_2007_test
INFO task_evaluation.py: 191: copypaste: Task: box
INFO task_evaluation.py: 194: copypaste: AP,AP50,AP75,APs,APm,APl
INFO task_evaluation.py: 195: copypaste: -1.0000,-1.0000,-1.0000,-1.0000,-1.0000,-1.0000
